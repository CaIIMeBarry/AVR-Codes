
AVRASM ver. 2.1.30  C:\Users\Bardia\Desktop\HW7_24mordad\1\Debug\List\step.asm Thu Aug 14 16:19:35 2025

C:\Users\Bardia\Desktop\HW7_24mordad\1\Debug\List\step.asm(1088): warning: Register r5 already defined by the .DEF directive
C:\Users\Bardia\Desktop\HW7_24mordad\1\Debug\List\step.asm(1089): warning: Register r4 already defined by the .DEF directive
C:\Users\Bardia\Desktop\HW7_24mordad\1\Debug\List\step.asm(1090): warning: Register r7 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32
                 ;Program type           : Application
                 ;Clock frequency        : 1.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : float, width, precision
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF __lcd_x=R5
                 	.DEF __lcd_y=R4
                 	.DEF __lcd_maxx=R7
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0052 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _0x0:
00002a 3a73
00002b 6f00
00002c 206e
00002d 6f00      	.DB  0x73,0x3A,0x0,0x6F,0x6E,0x20,0x0,0x6F
00002e 6666
00002f 2000
000030 3a64
000031 6c00      	.DB  0x66,0x66,0x0,0x20,0x64,0x3A,0x0,0x6C
000032 6665
000033 2074
000034 7200
000035 6769      	.DB  0x65,0x66,0x74,0x20,0x0,0x72,0x69,0x67
000036 7468
000037 6300
000038 7275
000039 253a      	.DB  0x68,0x74,0x0,0x63,0x75,0x72,0x3A,0x25
00003a 2064
00003b 6774
00003c 3a74
00003d 6425      	.DB  0x64,0x20,0x74,0x67,0x74,0x3A,0x25,0x64
00003e 2000
00003f 2020
C:\Users\Bardia\Desktop\HW7_24mordad\1\Debug\List\step.asm(1127): warning: .cseg .db misalignment - padding zero byte
000040 0000      	.DB  0x0,0x20,0x20,0x20,0x0
                 _0x2000003:
000041 c080      	.DB  0x80,0xC0
                 _0x2020000:
000042 4e2d
000043 4e41
C:\Users\Bardia\Desktop\HW7_24mordad\1\Debug\List\step.asm(1131): warning: .cseg .db misalignment - padding zero byte
000044 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 _0x20A0060:
C:\Users\Bardia\Desktop\HW7_24mordad\1\Debug\List\step.asm(1133): warning: .cseg .db misalignment - padding zero byte
000045 0001      	.DB  0x1
                 _0x20A0000:
000046 4e2d
000047 4e41
000048 4900
000049 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Users\Bardia\Desktop\HW7_24mordad\1\Debug\List\step.asm(1136): warning: .cseg .db misalignment - padding zero byte
00004a 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
00004b 0002      	.DW  0x02
00004c 0260      	.DW  __base_y_G100
00004d 0082      	.DW  _0x2000003*2
                 
00004e 0001      	.DW  0x01
00004f 0264      	.DW  __seed_G105
000050 008a      	.DW  _0x20A0060*2
                 
                 _0xFFFFFFFF:
000051 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000052 94f8      	CLI
000053 27ee      	CLR  R30
000054 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000055 e0f1      	LDI  R31,1
000056 bffb      	OUT  GICR,R31
000057 bfeb      	OUT  GICR,R30
000058 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000059 e08d      	LDI  R24,(14-2)+1
00005a e0a2      	LDI  R26,2
00005b 27bb      	CLR  R27
                 __CLEAR_REG:
00005c 93ed      	ST   X+,R30
00005d 958a      	DEC  R24
00005e f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00005f e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000060 e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000061 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000062 93ed      	ST   X+,R30
000063 9701      	SBIW R24,1
000064 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000065 e9e6      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000066 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000067 9185      	LPM  R24,Z+
000068 9195      	LPM  R25,Z+
000069 9700      	SBIW R24,0
00006a f061      	BREQ __GLOBAL_INI_END
00006b 91a5      	LPM  R26,Z+
00006c 91b5      	LPM  R27,Z+
00006d 9005      	LPM  R0,Z+
00006e 9015      	LPM  R1,Z+
00006f 01bf      	MOVW R22,R30
000070 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000071 9005      	LPM  R0,Z+
000072 920d      	ST   X+,R0
000073 9701      	SBIW R24,1
000074 f7e1      	BRNE __GLOBAL_INI_LOOP
000075 01fb      	MOVW R30,R22
000076 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000077 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000078 bfed      	OUT  SPL,R30
000079 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00007a bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00007b e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00007c e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00007d 940c 007f 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;#include <mega32.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include <alcd.h>
                 ;#include <stdio.h>
                 ;
                 ;#define STEP_DEG 6
                 ;
                 ;void main(void) {
                 ; 0000 0008 void main(void) {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 0009     unsigned char step_seq[] = {0x02, 0x04, 0x08, 0x10};
                 ; 0000 000A     signed char step_index = 0;
                 ; 0000 000B     signed int current_position = 0;
                 ; 0000 000C     signed int target_position = 0;
                 ; 0000 000D     unsigned char motor_on = 0;
                 ; 0000 000E     unsigned char direction = 0; // 0 = right, 1 = left
                 ; 0000 000F     char buf[16];
                 ; 0000 0010 
                 ; 0000 0011     DDRB = 0x1E;
00007f 9765      	SBIW R28,21
000080 e0e0      	LDI  R30,LOW(0)
000081 8be8      	STD  Y+16,R30
000082 e0e2      	LDI  R30,LOW(2)
000083 8be9      	STD  Y+17,R30
000084 e0e4      	LDI  R30,LOW(4)
000085 8bea      	STD  Y+18,R30
000086 e0e8      	LDI  R30,LOW(8)
000087 8beb      	STD  Y+19,R30
000088 e1e0      	LDI  R30,LOW(16)
000089 8bec      	STD  Y+20,R30
                 ;	step_seq -> Y+17
                 ;	step_index -> R17
                 ;	current_position -> R18,R19
                 ;	target_position -> R20,R21
                 ;	motor_on -> R16
                 ;	direction -> Y+16
                 ;	buf -> Y+0
00008a e010      	LDI  R17,0
                +
00008b e020     +LDI R18 , LOW ( 0 )
00008c e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
00008d e040     +LDI R20 , LOW ( 0 )
00008e e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
00008f e000      	LDI  R16,0
000090 e1ee      	LDI  R30,LOW(30)
000091 bbe7      	OUT  0x17,R30
                 ; 0000 0012     lcd_init(16);
000092 e1a0      	LDI  R26,LOW(16)
000093 d10c      	RCALL _lcd_init
                 ; 0000 0013 
                 ; 0000 0014     while (1) {
                 _0x3:
                 ; 0000 0015         // ==== BUTTON HANDLING ====
                 ; 0000 0016         if (PIND.0 == 0) { // Start
000094 9980      	SBIC 0x10,0
000095 c008      	RJMP _0x6
                 ; 0000 0017             delay_ms(50);
000096 940e 0636 	CALL SUBOPT_0x0
                 ; 0000 0018             while (PIND.0 == 0);
                 _0x7:
000098 9b80      	SBIS 0x10,0
000099 cffe      	RJMP _0x7
                 ; 0000 0019             if (current_position != target_position) {
                +
00009a 1742     +CP R20 , R18
00009b 0753     +CPC R21 , R19
                 	__CPWRR 20,21,18,19
00009c f009      	BREQ _0xA
                 ; 0000 001A                 motor_on = 1;
00009d e001      	LDI  R16,LOW(1)
                 ; 0000 001B             }
                 ; 0000 001C         }
                 _0xA:
                 ; 0000 001D 
                 ; 0000 001E         if (PIND.1 == 0) { // Increment target
                 _0x6:
00009e 9981      	SBIC 0x10,1
00009f c006      	RJMP _0xB
                 ; 0000 001F             delay_ms(50);
0000a0 940e 0636 	CALL SUBOPT_0x0
                 ; 0000 0020             while (PIND.1 == 0);
                 _0xC:
0000a2 9b81      	SBIS 0x10,1
0000a3 cffe      	RJMP _0xC
                 ; 0000 0021             target_position += STEP_DEG;
                +
0000a4 5f4a     +SUBI R20 , LOW ( - 6 )
0000a5 4f5f     +SBCI R21 , HIGH ( - 6 )
                 	__ADDWRN 20,21,6
                 ; 0000 0022         }
                 ; 0000 0023 
                 ; 0000 0024         if (PIND.2 == 0) { // Decrement target
                 _0xB:
0000a6 9982      	SBIC 0x10,2
0000a7 c006      	RJMP _0xF
                 ; 0000 0025             delay_ms(50);
0000a8 940e 0636 	CALL SUBOPT_0x0
                 ; 0000 0026             while (PIND.2 == 0);
                 _0x10:
0000aa 9b82      	SBIS 0x10,2
0000ab cffe      	RJMP _0x10
                 ; 0000 0027             target_position -= STEP_DEG;
                +
0000ac 5046     +SUBI R20 , LOW ( 6 )
0000ad 4050     +SBCI R21 , HIGH ( 6 )
                 	__SUBWRN 20,21,6
                 ; 0000 0028         }
                 ; 0000 0029 
                 ; 0000 002A         if (PIND.3 == 0) { // Toggle direction
                 _0xF:
0000ae 9983      	SBIC 0x10,3
0000af c008      	RJMP _0x13
                 ; 0000 002B             delay_ms(50);
0000b0 940e 0636 	CALL SUBOPT_0x0
                 ; 0000 002C             while (PIND.3 == 0);
                 _0x14:
0000b2 9b83      	SBIS 0x10,3
0000b3 cffe      	RJMP _0x14
                 ; 0000 002D             direction = !direction;
0000b4 89e8      	LDD  R30,Y+16
0000b5 940e 0909 	CALL __LNEGB1
0000b7 8be8      	STD  Y+16,R30
                 ; 0000 002E         }
                 ; 0000 002F 
                 ; 0000 0030         // ==== LCD UPDATE ====
                 ; 0000 0031         lcd_gotoxy(0, 0);
                 _0x13:
0000b8 e0e0      	LDI  R30,LOW(0)
0000b9 93ea      	ST   -Y,R30
0000ba e0a0      	LDI  R26,LOW(0)
0000bb d094      	RCALL _lcd_gotoxy
                 ; 0000 0032         lcd_putsf("s:");
                +
0000bc e5a4     +LDI R26 , LOW ( 2 * _0x0 + ( 0 ) )
0000bd e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW2FN _0x0,0
0000be d0ce      	RCALL _lcd_putsf
                 ; 0000 0033         if (motor_on) lcd_putsf("on ");
0000bf 3000      	CPI  R16,0
0000c0 f019      	BREQ _0x17
                +
0000c1 e5a7     +LDI R26 , LOW ( 2 * _0x0 + ( 3 ) )
0000c2 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 3 ) )
                 	__POINTW2FN _0x0,3
0000c3 c002      	RJMP _0x27
                 ; 0000 0034         else lcd_putsf("off");
                 _0x17:
                +
0000c4 e5ab     +LDI R26 , LOW ( 2 * _0x0 + ( 7 ) )
0000c5 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 7 ) )
                 	__POINTW2FN _0x0,7
                 _0x27:
0000c6 d0c6      	RCALL _lcd_putsf
                 ; 0000 0035         lcd_putsf(" d:");
                +
0000c7 e5af     +LDI R26 , LOW ( 2 * _0x0 + ( 11 ) )
0000c8 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 11 ) )
                 	__POINTW2FN _0x0,11
0000c9 d0c3      	RCALL _lcd_putsf
                 ; 0000 0036         if (direction) lcd_putsf("left ");
0000ca 89e8      	LDD  R30,Y+16
0000cb 30e0      	CPI  R30,0
0000cc f019      	BREQ _0x19
                +
0000cd e6a3     +LDI R26 , LOW ( 2 * _0x0 + ( 15 ) )
0000ce e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 15 ) )
                 	__POINTW2FN _0x0,15
0000cf c002      	RJMP _0x28
                 ; 0000 0037         else lcd_putsf("right");
                 _0x19:
                +
0000d0 e6a9     +LDI R26 , LOW ( 2 * _0x0 + ( 21 ) )
0000d1 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 21 ) )
                 	__POINTW2FN _0x0,21
                 _0x28:
0000d2 d0ba      	RCALL _lcd_putsf
                 ; 0000 0038 
                 ; 0000 0039         lcd_gotoxy(0, 1);
0000d3 e0e0      	LDI  R30,LOW(0)
0000d4 93ea      	ST   -Y,R30
0000d5 e0a1      	LDI  R26,LOW(1)
0000d6 d079      	RCALL _lcd_gotoxy
                 ; 0000 003A         sprintf(buf, "cur:%d tgt:%d", current_position, target_position);
0000d7 01fe      	MOVW R30,R28
0000d8 93fa      	ST   -Y,R31
0000d9 93ea      	ST   -Y,R30
                +
0000da e6ef     +LDI R30 , LOW ( 2 * _0x0 + ( 27 ) )
0000db e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 27 ) )
                 	__POINTW1FN _0x0,27
0000dc 93fa      	ST   -Y,R31
0000dd 93ea      	ST   -Y,R30
0000de 01f9      	MOVW R30,R18
0000df 940e 0904 	CALL __CWD1
0000e1 940e 0985 	CALL __PUTPARD1
0000e3 01fa      	MOVW R30,R20
0000e4 940e 0904 	CALL __CWD1
0000e6 940e 0985 	CALL __PUTPARD1
0000e8 e088      	LDI  R24,8
0000e9 940e 04f3 	CALL _sprintf
0000eb 962c      	ADIW R28,12
                 ; 0000 003B         lcd_puts(buf);
0000ec 01de      	MOVW R26,R28
0000ed d090      	RCALL _lcd_puts
                 ; 0000 003C         lcd_putsf("   ");
                +
0000ee e7ad     +LDI R26 , LOW ( 2 * _0x0 + ( 41 ) )
0000ef e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 41 ) )
                 	__POINTW2FN _0x0,41
0000f0 d09c      	RCALL _lcd_putsf
                 ; 0000 003D 
                 ; 0000 003E         // ==== MOTOR CONTROL ====
                 ; 0000 003F         if (motor_on) {
0000f1 3000      	CPI  R16,0
0000f2 f1c1      	BREQ _0x1B
                 ; 0000 0040             // Step motor
                 ; 0000 0041             PORTB = step_seq[step_index];
0000f3 2fe1      	MOV  R30,R17
0000f4 e0f0      	LDI  R31,0
0000f5 01de      	MOVW R26,R28
0000f6 9651      	ADIW R26,17
0000f7 0fae      	ADD  R26,R30
0000f8 1fbf      	ADC  R27,R31
0000f9 91ec      	LD   R30,X
0000fa bbe8      	OUT  0x18,R30
                 ; 0000 0042 
                 ; 0000 0043             if (direction == 0) { // right
0000fb 89e8      	LDD  R30,Y+16
0000fc 30e0      	CPI  R30,0
0000fd f469      	BRNE _0x1C
                 ; 0000 0044                 step_index = (step_index + 1) % 4;
0000fe 2fe1      	MOV  R30,R17
0000ff e0f0      	LDI  R31,0
000100 fde7      	SBRC R30,7
000101 efff      	SER  R31
000102 9631      	ADIW R30,1
000103 e0a3      	LDI  R26,LOW(3)
000104 e0b0      	LDI  R27,HIGH(3)
000105 940e 0952 	CALL __MANDW12
000107 2f1e      	MOV  R17,R30
                 ; 0000 0045                 current_position += STEP_DEG;
                +
000108 5f2a     +SUBI R18 , LOW ( - 6 )
000109 4f3f     +SBCI R19 , HIGH ( - 6 )
                 	__ADDWRN 18,19,6
                 ; 0000 0046             } else { // left
00010a c00c      	RJMP _0x1D
                 _0x1C:
                 ; 0000 0047                 step_index = (step_index - 1 + 4) % 4;
00010b 2fe1      	MOV  R30,R17
00010c e0f0      	LDI  R31,0
00010d fde7      	SBRC R30,7
00010e efff      	SER  R31
00010f 9633      	ADIW R30,3
000110 e0a3      	LDI  R26,LOW(3)
000111 e0b0      	LDI  R27,HIGH(3)
000112 940e 0952 	CALL __MANDW12
000114 2f1e      	MOV  R17,R30
                 ; 0000 0048                 current_position -= STEP_DEG;
                +
000115 5026     +SUBI R18 , LOW ( 6 )
000116 4030     +SBCI R19 , HIGH ( 6 )
                 	__SUBWRN 18,19,6
                 ; 0000 0049             }
                 _0x1D:
                 ; 0000 004A 
                 ; 0000 004B             delay_ms(200);
000117 eca8      	LDI  R26,LOW(200)
000118 e0b0      	LDI  R27,0
000119 940e 073b 	CALL _delay_ms
                 ; 0000 004C 
                 ; 0000 004D             // Stop if we reached or passed the target
                 ; 0000 004E             if ((direction == 0 && current_position >= target_position) ||
                 ; 0000 004F                 (direction == 1 && current_position <= target_position)) {
00011b 89a8      	LDD  R26,Y+16
00011c 30a0      	CPI  R26,LOW(0x0)
00011d f419      	BRNE _0x1F
                +
00011e 1724     +CP R18 , R20
00011f 0735     +CPC R19 , R21
                 	__CPWRR 18,19,20,21
000120 f43c      	BRGE _0x21
                 _0x1F:
000121 89a8      	LDD  R26,Y+16
000122 30a1      	CPI  R26,LOW(0x1)
000123 f419      	BRNE _0x22
                +
000124 1742     +CP R20 , R18
000125 0753     +CPC R21 , R19
                 	__CPWRR 20,21,18,19
000126 f40c      	BRGE _0x21
                 _0x22:
000127 c002      	RJMP _0x1E
                 _0x21:
                 ; 0000 0050                 current_position = target_position; // Snap to target
000128 019a      	MOVW R18,R20
                 ; 0000 0051                 motor_on = 0;
000129 e000      	LDI  R16,LOW(0)
                 ; 0000 0052             }
                 ; 0000 0053 
                 ; 0000 0054         } else {
                 _0x1E:
00012a c003      	RJMP _0x25
                 _0x1B:
                 ; 0000 0055             PORTB &= 0xE1; // Motor off
00012b b3e8      	IN   R30,0x18
00012c 7ee1      	ANDI R30,LOW(0xE1)
00012d bbe8      	OUT  0x18,R30
                 ; 0000 0056         }
                 _0x25:
                 ; 0000 0057     }
00012e cf65      	RJMP _0x3
                 ; 0000 0058 }
                 _0x26:
00012f cfff      	RJMP _0x26
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
                 ; .FSTART __lcd_write_nibble_G100
000130 93aa      	ST   -Y,R26
000131 b3eb      	IN   R30,0x1B
000132 70ef      	ANDI R30,LOW(0xF)
000133 2fae      	MOV  R26,R30
000134 81e8      	LD   R30,Y
000135 7fe0      	ANDI R30,LOW(0xF0)
000136 2bea      	OR   R30,R26
000137 bbeb      	OUT  0x1B,R30
                +
000138 e082     +LDI R24 , LOW ( 2 )
                +__DELAY_USB_LOOP :
000139 958a     +DEC R24
00013a f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 2
00013b 9ada      	SBI  0x1B,2
                +
00013c e082     +LDI R24 , LOW ( 2 )
                +__DELAY_USB_LOOP :
00013d 958a     +DEC R24
00013e f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 2
00013f 98da      	CBI  0x1B,2
                +
000140 e082     +LDI R24 , LOW ( 2 )
                +__DELAY_USB_LOOP :
000141 958a     +DEC R24
000142 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 2
000143 c087      	RJMP _0x20C0006
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
000144 93aa      	ST   -Y,R26
000145 81a8      	LD   R26,Y
000146 dfe9      	RCALL __lcd_write_nibble_G100
000147 81e8          ld    r30,y
000148 95e2          swap  r30
000149 83e8          st    y,r30
00014a 81a8      	LD   R26,Y
00014b dfe4      	RCALL __lcd_write_nibble_G100
                +
00014c e181     +LDI R24 , LOW ( 17 )
                +__DELAY_USB_LOOP :
00014d 958a     +DEC R24
00014e f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 17
00014f c07b      	RJMP _0x20C0006
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
000150 93aa      	ST   -Y,R26
000151 81e8      	LD   R30,Y
000152 e0f0      	LDI  R31,0
000153 5ae0      	SUBI R30,LOW(-__base_y_G100)
000154 4ffd      	SBCI R31,HIGH(-__base_y_G100)
000155 81e0      	LD   R30,Z
000156 81a9      	LDD  R26,Y+1
000157 0fae      	ADD  R26,R30
000158 dfeb      	RCALL __lcd_write_data
000159 8059      	LDD  R5,Y+1
00015a 8048      	LDD  R4,Y+0
00015b 9622      	ADIW R28,2
00015c 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
00015d e0a2      	LDI  R26,LOW(2)
00015e 940e 063a 	CALL SUBOPT_0x1
000160 e0ac      	LDI  R26,LOW(12)
000161 dfe2      	RCALL __lcd_write_data
000162 e0a1      	LDI  R26,LOW(1)
000163 940e 063a 	CALL SUBOPT_0x1
000165 e0e0      	LDI  R30,LOW(0)
000166 2e4e      	MOV  R4,R30
000167 2e5e      	MOV  R5,R30
000168 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
000169 93aa      	ST   -Y,R26
00016a 81a8      	LD   R26,Y
00016b 30aa      	CPI  R26,LOW(0xA)
00016c f011      	BREQ _0x2000005
00016d 1457      	CP   R5,R7
00016e f048      	BRLO _0x2000004
                 _0x2000005:
00016f e0e0      	LDI  R30,LOW(0)
000170 93ea      	ST   -Y,R30
000171 9443      	INC  R4
000172 2da4      	MOV  R26,R4
000173 dfdc      	RCALL _lcd_gotoxy
000174 81a8      	LD   R26,Y
000175 30aa      	CPI  R26,LOW(0xA)
000176 f409      	BRNE _0x2000007
000177 c053      	RJMP _0x20C0006
                 _0x2000007:
                 _0x2000004:
000178 9453      	INC  R5
000179 9ad8      	SBI  0x1B,0
00017a 81a8      	LD   R26,Y
00017b dfc8      	RCALL __lcd_write_data
00017c 98d8      	CBI  0x1B,0
00017d c04d      	RJMP _0x20C0006
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
00017e 93ba      	ST   -Y,R27
00017f 93aa      	ST   -Y,R26
000180 931a      	ST   -Y,R17
                 _0x2000008:
000181 81a9      	LDD  R26,Y+1
000182 81ba      	LDD  R27,Y+1+1
000183 91ed      	LD   R30,X+
000184 83a9      	STD  Y+1,R26
000185 83ba      	STD  Y+1+1,R27
000186 2f1e      	MOV  R17,R30
000187 30e0      	CPI  R30,0
000188 f019      	BREQ _0x200000A
000189 2fa1      	MOV  R26,R17
00018a dfde      	RCALL _lcd_putchar
00018b cff5      	RJMP _0x2000008
                 _0x200000A:
00018c c010      	RJMP _0x20C0007
                 ; .FEND
                 _lcd_putsf:
                 ; .FSTART _lcd_putsf
00018d 93ba      	ST   -Y,R27
00018e 93aa      	ST   -Y,R26
00018f 931a      	ST   -Y,R17
                 _0x200000B:
000190 81e9      	LDD  R30,Y+1
000191 81fa      	LDD  R31,Y+1+1
000192 9631      	ADIW R30,1
000193 83e9      	STD  Y+1,R30
000194 83fa      	STD  Y+1+1,R31
000195 9731      	SBIW R30,1
000196 91e4      	LPM  R30,Z
000197 2f1e      	MOV  R17,R30
000198 30e0      	CPI  R30,0
000199 f019      	BREQ _0x200000D
00019a 2fa1      	MOV  R26,R17
00019b dfcd      	RCALL _lcd_putchar
00019c cff3      	RJMP _0x200000B
                 _0x200000D:
                 _0x20C0007:
00019d 8118      	LDD  R17,Y+0
00019e 9623      	ADIW R28,3
00019f 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
0001a0 93aa      	ST   -Y,R26
0001a1 b3ea      	IN   R30,0x1A
0001a2 6fe0      	ORI  R30,LOW(0xF0)
0001a3 bbea      	OUT  0x1A,R30
0001a4 9ad2      	SBI  0x1A,2
0001a5 9ad0      	SBI  0x1A,0
0001a6 9ad1      	SBI  0x1A,1
0001a7 98da      	CBI  0x1B,2
0001a8 98d8      	CBI  0x1B,0
0001a9 98d9      	CBI  0x1B,1
0001aa 8078      	LDD  R7,Y+0
0001ab 81e8      	LD   R30,Y
0001ac 58e0      	SUBI R30,-LOW(128)
                +
0001ad 93e0 0262+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
0001af 81e8      	LD   R30,Y
0001b0 54e0      	SUBI R30,-LOW(192)
                +
0001b1 93e0 0263+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
0001b3 e1a4      	LDI  R26,LOW(20)
0001b4 e0b0      	LDI  R27,0
0001b5 940e 073b 	CALL _delay_ms
0001b7 940e 0640 	CALL SUBOPT_0x2
0001b9 940e 0640 	CALL SUBOPT_0x2
0001bb 940e 0640 	CALL SUBOPT_0x2
0001bd e2a0      	LDI  R26,LOW(32)
0001be df71      	RCALL __lcd_write_nibble_G100
                +
0001bf e281     +LDI R24 , LOW ( 33 )
                +__DELAY_USB_LOOP :
0001c0 958a     +DEC R24
0001c1 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 33
0001c2 e2a8      	LDI  R26,LOW(40)
0001c3 df80      	RCALL __lcd_write_data
0001c4 e0a4      	LDI  R26,LOW(4)
0001c5 df7e      	RCALL __lcd_write_data
0001c6 e8a5      	LDI  R26,LOW(133)
0001c7 df7c      	RCALL __lcd_write_data
0001c8 e0a6      	LDI  R26,LOW(6)
0001c9 df7a      	RCALL __lcd_write_data
0001ca df92      	RCALL _lcd_clear
                 _0x20C0006:
0001cb 9621      	ADIW R28,1
0001cc 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G101:
                 ; .FSTART _put_buff_G101
0001cd 93ba      	ST   -Y,R27
0001ce 93aa      	ST   -Y,R26
0001cf 931a      	ST   -Y,R17
0001d0 930a      	ST   -Y,R16
0001d1 81aa      	LDD  R26,Y+2
0001d2 81bb      	LDD  R27,Y+2+1
0001d3 9612      	ADIW R26,2
0001d4 940e 096c 	CALL __GETW1P
0001d6 9730      	SBIW R30,0
0001d7 f129      	BREQ _0x2020010
0001d8 81aa      	LDD  R26,Y+2
0001d9 81bb      	LDD  R27,Y+2+1
0001da 9614      	ADIW R26,4
0001db 940e 096c 	CALL __GETW1P
0001dd 018f      	MOVW R16,R30
0001de 9730      	SBIW R30,0
0001df f061      	BREQ _0x2020012
                +
0001e0 3002     +CPI R16 , LOW ( 2 )
0001e1 e0e0     +LDI R30 , HIGH ( 2 )
0001e2 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
0001e3 f080      	BRLO _0x2020013
0001e4 01f8      	MOVW R30,R16
0001e5 9731      	SBIW R30,1
0001e6 018f      	MOVW R16,R30
                +
0001e7 81aa     +LDD R26 , Y + 2
0001e8 81bb     +LDD R27 , Y + 2 + 1
0001e9 9614     +ADIW R26 , 4
0001ea 93ed     +ST X + , R30
0001eb 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2020012:
0001ec 81aa      	LDD  R26,Y+2
0001ed 81bb      	LDD  R27,Y+2+1
0001ee 9612      	ADIW R26,2
0001ef 940e 0647 	CALL SUBOPT_0x3
0001f1 9731      	SBIW R30,1
0001f2 81ac      	LDD  R26,Y+4
0001f3 83a0      	STD  Z+0,R26
                 _0x2020013:
0001f4 81aa      	LDD  R26,Y+2
0001f5 81bb      	LDD  R27,Y+2+1
0001f6 940e 096c 	CALL __GETW1P
0001f8 23ff      	TST  R31
0001f9 f012      	BRMI _0x2020014
0001fa 940e 0647 	CALL SUBOPT_0x3
                 _0x2020014:
0001fc c006      	RJMP _0x2020015
                 _0x2020010:
0001fd 81aa      	LDD  R26,Y+2
0001fe 81bb      	LDD  R27,Y+2+1
0001ff efef      	LDI  R30,LOW(65535)
000200 efff      	LDI  R31,HIGH(65535)
000201 93ed      	ST   X+,R30
000202 93fc      	ST   X,R31
                 _0x2020015:
000203 8119      	LDD  R17,Y+1
000204 8108      	LDD  R16,Y+0
000205 9625      	ADIW R28,5
000206 9508      	RET
                 ; .FEND
                 __ftoe_G101:
                 ; .FSTART __ftoe_G101
000207 940e 064d 	CALL SUBOPT_0x4
000209 e8e0      	LDI  R30,LOW(128)
00020a 83ea      	STD  Y+2,R30
00020b e3ef      	LDI  R30,LOW(63)
00020c 83eb      	STD  Y+3,R30
00020d 940e 09a2 	CALL __SAVELOCR4
00020f 85ee      	LDD  R30,Y+14
000210 85ff      	LDD  R31,Y+14+1
000211 3fef      	CPI  R30,LOW(0xFFFF)
000212 efaf      	LDI  R26,HIGH(0xFFFF)
000213 07fa      	CPC  R31,R26
000214 f449      	BRNE _0x2020019
000215 85e8      	LDD  R30,Y+8
000216 85f9      	LDD  R31,Y+8+1
000217 93fa      	ST   -Y,R31
000218 93ea      	ST   -Y,R30
                +
000219 e8a4     +LDI R26 , LOW ( 2 * _0x2020000 + ( 0 ) )
00021a e0b0     +LDI R27 , HIGH ( 2 * _0x2020000 + ( 0 ) )
                 	__POINTW2FN _0x2020000,0
00021b 940e 0527 	CALL _strcpyf
00021d c0b7      	RJMP _0x20C0005
                 _0x2020019:
00021e 3fef      	CPI  R30,LOW(0x7FFF)
00021f e7af      	LDI  R26,HIGH(0x7FFF)
000220 07fa      	CPC  R31,R26
000221 f449      	BRNE _0x2020018
000222 85e8      	LDD  R30,Y+8
000223 85f9      	LDD  R31,Y+8+1
000224 93fa      	ST   -Y,R31
000225 93ea      	ST   -Y,R30
                +
000226 e8a5     +LDI R26 , LOW ( 2 * _0x2020000 + ( 1 ) )
000227 e0b0     +LDI R27 , HIGH ( 2 * _0x2020000 + ( 1 ) )
                 	__POINTW2FN _0x2020000,1
000228 940e 0527 	CALL _strcpyf
00022a c0aa      	RJMP _0x20C0005
                 _0x2020018:
00022b 85ab      	LDD  R26,Y+11
00022c 30a7      	CPI  R26,LOW(0x7)
00022d f010      	BRLO _0x202001B
00022e e0e6      	LDI  R30,LOW(6)
00022f 87eb      	STD  Y+11,R30
                 _0x202001B:
000230 851b      	LDD  R17,Y+11
                 _0x202001C:
000231 2fe1      	MOV  R30,R17
000232 5011      	SUBI R17,1
000233 30e0      	CPI  R30,0
000234 f019      	BREQ _0x202001E
000235 940e 0654 	CALL SUBOPT_0x5
000237 cff9      	RJMP _0x202001C
                 _0x202001E:
                +
000238 85ec     +LDD R30 , Y + 12
000239 85fd     +LDD R31 , Y + 12 + 1
00023a 856e     +LDD R22 , Y + 12 + 2
00023b 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
00023c 940e 099c 	CALL __CPD10
00023e f421      	BRNE _0x202001F
00023f e030      	LDI  R19,LOW(0)
000240 940e 0654 	CALL SUBOPT_0x5
000242 c02d      	RJMP _0x2020020
                 _0x202001F:
000243 853b      	LDD  R19,Y+11
000244 940e 0663 	CALL SUBOPT_0x6
000246 f009      	BREQ PC+2
000247 f408      	BRCC PC+2
000248 c00b      	RJMP _0x2020021
000249 940e 0654 	CALL SUBOPT_0x5
                 _0x2020022:
00024b 940e 0663 	CALL SUBOPT_0x6
00024d f028      	BRLO _0x2020024
00024e 940e 066e 	CALL SUBOPT_0x7
000250 940e 0673 	CALL SUBOPT_0x8
000252 cff8      	RJMP _0x2020022
                 _0x2020024:
000253 c00d      	RJMP _0x2020025
                 _0x2020021:
                 _0x2020026:
000254 940e 0663 	CALL SUBOPT_0x6
000256 f440      	BRSH _0x2020028
000257 940e 066e 	CALL SUBOPT_0x7
000259 940e 067f 	CALL SUBOPT_0x9
00025b 940e 0686 	CALL SUBOPT_0xA
00025d 5031      	SUBI R19,LOW(1)
00025e cff5      	RJMP _0x2020026
                 _0x2020028:
00025f 940e 0654 	CALL SUBOPT_0x5
                 _0x2020025:
                +
000261 85ec     +LDD R30 , Y + 12
000262 85fd     +LDD R31 , Y + 12 + 1
000263 856e     +LDD R22 , Y + 12 + 2
000264 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
000265 940e 068b 	CALL SUBOPT_0xB
000267 940e 0686 	CALL SUBOPT_0xA
000269 940e 0663 	CALL SUBOPT_0x6
00026b f020      	BRLO _0x2020029
00026c 940e 066e 	CALL SUBOPT_0x7
00026e 940e 0673 	CALL SUBOPT_0x8
                 _0x2020029:
                 _0x2020020:
000270 e010      	LDI  R17,LOW(0)
                 _0x202002A:
000271 85eb      	LDD  R30,Y+11
000272 17e1      	CP   R30,R17
000273 f1a8      	BRLO _0x202002C
                +
000274 81ac     +LDD R26 , Y + 4
000275 81bd     +LDD R27 , Y + 4 + 1
000276 818e     +LDD R24 , Y + 4 + 2
000277 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
000278 940e 0692 	CALL SUBOPT_0xC
00027a 940e 068b 	CALL SUBOPT_0xB
00027c 01df      	MOVW R26,R30
00027d 01cb      	MOVW R24,R22
00027e 940e 057e 	CALL _floor
                +
000280 83ec     +STD Y + 4 , R30
000281 83fd     +STD Y + 4 + 1 , R31
000282 836e     +STD Y + 4 + 2 , R22
000283 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
000284 940e 066e 	CALL SUBOPT_0x7
000286 940e 0889 	CALL __DIVF21
000288 940e 0778 	CALL __CFD1U
00028a 2f0e      	MOV  R16,R30
00028b 940e 0699 	CALL SUBOPT_0xD
00028d 940e 06a0 	CALL SUBOPT_0xE
00028f 27ff      	CLR  R31
000290 2766      	CLR  R22
000291 2777      	CLR  R23
000292 940e 07b1 	CALL __CDF1
                +
000294 81ac     +LDD R26 , Y + 4
000295 81bd     +LDD R27 , Y + 4 + 1
000296 818e     +LDD R24 , Y + 4 + 2
000297 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
000298 940e 083b 	CALL __MULF12
00029a 940e 066e 	CALL SUBOPT_0x7
00029c 940e 06a5 	CALL SUBOPT_0xF
00029e 940e 0686 	CALL SUBOPT_0xA
0002a0 2fe1      	MOV  R30,R17
0002a1 5f1f      	SUBI R17,-1
0002a2 30e0      	CPI  R30,0
0002a3 f669      	BRNE _0x202002A
0002a4 940e 0699 	CALL SUBOPT_0xD
0002a6 e2ee      	LDI  R30,LOW(46)
0002a7 93ec      	ST   X,R30
0002a8 cfc8      	RJMP _0x202002A
                 _0x202002C:
0002a9 940e 06aa 	CALL SUBOPT_0x10
0002ab 9731      	SBIW R30,1
0002ac 85aa      	LDD  R26,Y+10
0002ad 83a0      	STD  Z+0,R26
0002ae 3030      	CPI  R19,0
0002af f42c      	BRGE _0x202002E
0002b0 9531      	NEG  R19
0002b1 85a8      	LDD  R26,Y+8
0002b2 85b9      	LDD  R27,Y+8+1
0002b3 e2ed      	LDI  R30,LOW(45)
0002b4 c003      	RJMP _0x2020113
                 _0x202002E:
0002b5 85a8      	LDD  R26,Y+8
0002b6 85b9      	LDD  R27,Y+8+1
0002b7 e2eb      	LDI  R30,LOW(43)
                 _0x2020113:
0002b8 93ec      	ST   X,R30
0002b9 940e 06aa 	CALL SUBOPT_0x10
0002bb 940e 06aa 	CALL SUBOPT_0x10
0002bd 9731      	SBIW R30,1
0002be 01bf      	MOVW R22,R30
0002bf 2fa3      	MOV  R26,R19
0002c0 e0ea      	LDI  R30,LOW(10)
0002c1 940e 091c 	CALL __DIVB21
0002c3 5de0      	SUBI R30,-LOW(48)
0002c4 01db      	MOVW R26,R22
0002c5 93ec      	ST   X,R30
0002c6 940e 06aa 	CALL SUBOPT_0x10
0002c8 9731      	SBIW R30,1
0002c9 01bf      	MOVW R22,R30
0002ca 2fa3      	MOV  R26,R19
0002cb e0ea      	LDI  R30,LOW(10)
0002cc 940e 0946 	CALL __MODB21
0002ce 5de0      	SUBI R30,-LOW(48)
0002cf 01db      	MOVW R26,R22
0002d0 93ec      	ST   X,R30
0002d1 85a8      	LDD  R26,Y+8
0002d2 85b9      	LDD  R27,Y+8+1
0002d3 e0e0      	LDI  R30,LOW(0)
0002d4 93ec      	ST   X,R30
                 _0x20C0005:
0002d5 940e 09a9 	CALL __LOADLOCR4
0002d7 9660      	ADIW R28,16
0002d8 9508      	RET
                 ; .FEND
                 __print_G101:
                 ; .FSTART __print_G101
0002d9 93ba      	ST   -Y,R27
0002da 93aa      	ST   -Y,R26
0002db 97ef      	SBIW R28,63
0002dc 9761      	SBIW R28,17
0002dd 940e 09a0 	CALL __SAVELOCR6
0002df e010      	LDI  R17,0
                +
0002e0 01fe     +MOVW R30 , R28
0002e1 5ae8     +SUBI R30 , LOW ( - 88 )
0002e2 4fff     +SBCI R31 , HIGH ( - 88 )
0002e3 9001     +LD R0 , Z +
0002e4 81f0     +LD R31 , Z
0002e5 2de0     +MOV R30 , R0
                 	__GETW1SX 88
0002e6 87e8      	STD  Y+8,R30
0002e7 87f9      	STD  Y+8+1,R31
                +
0002e8 01fe     +MOVW R30 , R28
0002e9 5aea     +SUBI R30 , LOW ( - 86 )
0002ea 4fff     +SBCI R31 , HIGH ( - 86 )
0002eb 9001     +LD R0 , Z +
0002ec 81f0     +LD R31 , Z
0002ed 2de0     +MOV R30 , R0
                 	__GETW1SX 86
0002ee 83ee      	STD  Y+6,R30
0002ef 83ff      	STD  Y+6+1,R31
0002f0 81ae      	LDD  R26,Y+6
0002f1 81bf      	LDD  R27,Y+6+1
0002f2 e0e0      	LDI  R30,LOW(0)
0002f3 e0f0      	LDI  R31,HIGH(0)
0002f4 93ed      	ST   X+,R30
0002f5 93fc      	ST   X,R31
                 _0x2020030:
0002f6 01de      	MOVW R26,R28
0002f7 5aa4      	SUBI R26,LOW(-(92))
0002f8 4fbf      	SBCI R27,HIGH(-(92))
0002f9 940e 0647 	CALL SUBOPT_0x3
0002fb 9731      	SBIW R30,1
0002fc 91e4      	LPM  R30,Z
0002fd 2f2e      	MOV  R18,R30
0002fe 30e0      	CPI  R30,0
0002ff f409      	BRNE PC+2
000300 c1e9      	RJMP _0x2020032
000301 2fe1      	MOV  R30,R17
000302 30e0      	CPI  R30,0
000303 f439      	BRNE _0x2020036
000304 3225      	CPI  R18,37
000305 f411      	BRNE _0x2020037
000306 e011      	LDI  R17,LOW(1)
000307 c002      	RJMP _0x2020038
                 _0x2020037:
000308 940e 06b0 	CALL SUBOPT_0x11
                 _0x2020038:
00030a c1de      	RJMP _0x2020035
                 _0x2020036:
00030b 30e1      	CPI  R30,LOW(0x1)
00030c f4c1      	BRNE _0x2020039
00030d 3225      	CPI  R18,37
00030e f419      	BRNE _0x202003A
00030f 940e 06b0 	CALL SUBOPT_0x11
000311 c1d6      	RJMP _0x2020114
                 _0x202003A:
000312 e012      	LDI  R17,LOW(2)
000313 e0e0      	LDI  R30,LOW(0)
000314 8bed      	STD  Y+21,R30
000315 e000      	LDI  R16,LOW(0)
000316 322d      	CPI  R18,45
000317 f411      	BRNE _0x202003B
000318 e001      	LDI  R16,LOW(1)
000319 c1cf      	RJMP _0x2020035
                 _0x202003B:
00031a 322b      	CPI  R18,43
00031b f419      	BRNE _0x202003C
00031c e2eb      	LDI  R30,LOW(43)
00031d 8bed      	STD  Y+21,R30
00031e c1ca      	RJMP _0x2020035
                 _0x202003C:
00031f 3220      	CPI  R18,32
000320 f419      	BRNE _0x202003D
000321 e2e0      	LDI  R30,LOW(32)
000322 8bed      	STD  Y+21,R30
000323 c1c5      	RJMP _0x2020035
                 _0x202003D:
000324 c002      	RJMP _0x202003E
                 _0x2020039:
000325 30e2      	CPI  R30,LOW(0x2)
000326 f439      	BRNE _0x202003F
                 _0x202003E:
000327 e050      	LDI  R21,LOW(0)
000328 e013      	LDI  R17,LOW(3)
000329 3320      	CPI  R18,48
00032a f411      	BRNE _0x2020040
00032b 6800      	ORI  R16,LOW(128)
00032c c1bc      	RJMP _0x2020035
                 _0x2020040:
00032d c002      	RJMP _0x2020041
                 _0x202003F:
00032e 30e3      	CPI  R30,LOW(0x3)
00032f f491      	BRNE _0x2020042
                 _0x2020041:
000330 3320      	CPI  R18,48
000331 f010      	BRLO _0x2020044
000332 332a      	CPI  R18,58
000333 f008      	BRLO _0x2020045
                 _0x2020044:
000334 c007      	RJMP _0x2020043
                 _0x2020045:
000335 e0aa      	LDI  R26,LOW(10)
000336 9f5a      	MUL  R21,R26
000337 2d50      	MOV  R21,R0
000338 2fe2      	MOV  R30,R18
000339 53e0      	SUBI R30,LOW(48)
00033a 0f5e      	ADD  R21,R30
00033b c1ad      	RJMP _0x2020035
                 _0x2020043:
00033c e040      	LDI  R20,LOW(0)
00033d 322e      	CPI  R18,46
00033e f411      	BRNE _0x2020046
00033f e014      	LDI  R17,LOW(4)
000340 c1a8      	RJMP _0x2020035
                 _0x2020046:
000341 c00f      	RJMP _0x2020047
                 _0x2020042:
000342 30e4      	CPI  R30,LOW(0x4)
000343 f499      	BRNE _0x2020049
000344 3320      	CPI  R18,48
000345 f010      	BRLO _0x202004B
000346 332a      	CPI  R18,58
000347 f008      	BRLO _0x202004C
                 _0x202004B:
000348 c008      	RJMP _0x202004A
                 _0x202004C:
000349 6200      	ORI  R16,LOW(32)
00034a e0aa      	LDI  R26,LOW(10)
00034b 9f4a      	MUL  R20,R26
00034c 2d40      	MOV  R20,R0
00034d 2fe2      	MOV  R30,R18
00034e 53e0      	SUBI R30,LOW(48)
00034f 0f4e      	ADD  R20,R30
000350 c198      	RJMP _0x2020035
                 _0x202004A:
                 _0x2020047:
000351 362c      	CPI  R18,108
000352 f419      	BRNE _0x202004D
000353 6002      	ORI  R16,LOW(2)
000354 e015      	LDI  R17,LOW(5)
000355 c193      	RJMP _0x2020035
                 _0x202004D:
000356 c003      	RJMP _0x202004E
                 _0x2020049:
000357 30e5      	CPI  R30,LOW(0x5)
000358 f009      	BREQ PC+2
000359 c18f      	RJMP _0x2020035
                 _0x202004E:
00035a 2fe2      	MOV  R30,R18
00035b 36e3      	CPI  R30,LOW(0x63)
00035c f459      	BRNE _0x2020053
00035d 940e 06b7 	CALL SUBOPT_0x12
00035f 940e 06be 	CALL SUBOPT_0x13
000361 940e 06b7 	CALL SUBOPT_0x12
000363 81a4      	LDD  R26,Z+4
000364 93aa      	ST   -Y,R26
000365 940e 06c5 	CALL SUBOPT_0x14
000367 c180      	RJMP _0x2020054
                 _0x2020053:
000368 34e5      	CPI  R30,LOW(0x45)
000369 f011      	BREQ _0x2020057
00036a 36e5      	CPI  R30,LOW(0x65)
00036b f409      	BRNE _0x2020058
                 _0x2020057:
00036c c003      	RJMP _0x2020059
                 _0x2020058:
00036d 36e6      	CPI  R30,LOW(0x66)
00036e f009      	BREQ PC+2
00036f c048      	RJMP _0x202005A
                 _0x2020059:
000370 01fe      	MOVW R30,R28
000371 9676      	ADIW R30,22
000372 87ee      	STD  Y+14,R30
000373 87ff      	STD  Y+14+1,R31
000374 940e 06cb 	CALL SUBOPT_0x15
000376 940e 0970 	CALL __GETD1P
000378 940e 06d2 	CALL SUBOPT_0x16
00037a 940e 06d7 	CALL SUBOPT_0x17
00037c 85ad      	LDD  R26,Y+13
00037d 23aa      	TST  R26
00037e f032      	BRMI _0x202005B
00037f 89ad      	LDD  R26,Y+21
000380 32ab      	CPI  R26,LOW(0x2B)
000381 f059      	BREQ _0x202005D
000382 32a0      	CPI  R26,LOW(0x20)
000383 f081      	BREQ _0x202005F
000384 c017      	RJMP _0x2020060
                 _0x202005B:
000385 940e 06d9 	CALL SUBOPT_0x18
000387 940e 0745 	CALL __ANEGF1
000389 940e 06d2 	CALL SUBOPT_0x16
00038b e2ed      	LDI  R30,LOW(45)
00038c 8bed      	STD  Y+21,R30
                 _0x202005D:
00038d ff07      	SBRS R16,7
00038e c005      	RJMP _0x2020061
00038f 89ed      	LDD  R30,Y+21
000390 93ea      	ST   -Y,R30
000391 940e 06c5 	CALL SUBOPT_0x14
000393 c008      	RJMP _0x2020062
                 _0x2020061:
                 _0x202005F:
000394 85ee      	LDD  R30,Y+14
000395 85ff      	LDD  R31,Y+14+1
000396 9631      	ADIW R30,1
000397 87ee      	STD  Y+14,R30
000398 87ff      	STD  Y+14+1,R31
000399 9731      	SBIW R30,1
00039a 89ad      	LDD  R26,Y+21
00039b 83a0      	STD  Z+0,R26
                 _0x2020062:
                 _0x2020060:
00039c ff05      	SBRS R16,5
00039d e046      	LDI  R20,LOW(6)
00039e 3626      	CPI  R18,102
00039f f451      	BRNE _0x2020064
0003a0 940e 06d9 	CALL SUBOPT_0x18
0003a2 940e 0985 	CALL __PUTPARD1
0003a4 934a      	ST   -Y,R20
0003a5 89ab      	LDD  R26,Y+19
0003a6 89bc      	LDD  R27,Y+19+1
0003a7 940e 0595 	CALL _ftoa
0003a9 c009      	RJMP _0x2020065
                 _0x2020064:
0003aa 940e 06d9 	CALL SUBOPT_0x18
0003ac 940e 0985 	CALL __PUTPARD1
0003ae 934a      	ST   -Y,R20
0003af 932a      	ST   -Y,R18
0003b0 89ac      	LDD  R26,Y+20
0003b1 89bd      	LDD  R27,Y+20+1
0003b2 de54      	RCALL __ftoe_G101
                 _0x2020065:
0003b3 01fe      	MOVW R30,R28
0003b4 9676      	ADIW R30,22
0003b5 940e 06de 	CALL SUBOPT_0x19
0003b7 c01e      	RJMP _0x2020066
                 _0x202005A:
0003b8 37e3      	CPI  R30,LOW(0x73)
0003b9 f439      	BRNE _0x2020068
0003ba 940e 06d7 	CALL SUBOPT_0x17
0003bc 940e 06e6 	CALL SUBOPT_0x1A
0003be 940e 06de 	CALL SUBOPT_0x19
0003c0 c00e      	RJMP _0x2020069
                 _0x2020068:
0003c1 37e0      	CPI  R30,LOW(0x70)
0003c2 f4c1      	BRNE _0x202006B
0003c3 940e 06d7 	CALL SUBOPT_0x17
0003c5 940e 06e6 	CALL SUBOPT_0x1A
0003c7 87ee      	STD  Y+14,R30
0003c8 87ff      	STD  Y+14+1,R31
0003c9 85ae      	LDD  R26,Y+14
0003ca 85bf      	LDD  R27,Y+14+1
0003cb 940e 0540 	CALL _strlenf
0003cd 2f1e      	MOV  R17,R30
0003ce 6008      	ORI  R16,LOW(8)
                 _0x2020069:
0003cf 770f      	ANDI R16,LOW(127)
0003d0 3040      	CPI  R20,0
0003d1 f011      	BREQ _0x202006D
0003d2 1741      	CP   R20,R17
0003d3 f008      	BRLO _0x202006E
                 _0x202006D:
0003d4 c001      	RJMP _0x202006C
                 _0x202006E:
0003d5 2f14      	MOV  R17,R20
                 _0x202006C:
                 _0x2020066:
0003d6 e040      	LDI  R20,LOW(0)
0003d7 e0e0      	LDI  R30,LOW(0)
0003d8 8bec      	STD  Y+20,R30
0003d9 e030      	LDI  R19,LOW(0)
0003da c06d      	RJMP _0x202006F
                 _0x202006B:
0003db 36e4      	CPI  R30,LOW(0x64)
0003dc f011      	BREQ _0x2020072
0003dd 36e9      	CPI  R30,LOW(0x69)
0003de f411      	BRNE _0x2020073
                 _0x2020072:
0003df 6004      	ORI  R16,LOW(4)
0003e0 c002      	RJMP _0x2020074
                 _0x2020073:
0003e1 37e5      	CPI  R30,LOW(0x75)
0003e2 f4a1      	BRNE _0x2020075
                 _0x2020074:
0003e3 e0ea      	LDI  R30,LOW(10)
0003e4 8bec      	STD  Y+20,R30
0003e5 ff01      	SBRS R16,1
0003e6 c008      	RJMP _0x2020076
                +
0003e7 e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
0003e8 ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
0003e9 e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
0003ea e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
0003eb 940e 06eb 	CALL SUBOPT_0x1B
0003ed e01a      	LDI  R17,LOW(10)
0003ee c022      	RJMP _0x2020077
                 _0x2020076:
                +
0003ef e1e0     +LDI R30 , LOW ( 0x2710 )
0003f0 e2f7     +LDI R31 , HIGH ( 0x2710 )
0003f1 e060     +LDI R22 , BYTE3 ( 0x2710 )
0003f2 e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
0003f3 940e 06eb 	CALL SUBOPT_0x1B
0003f5 e015      	LDI  R17,LOW(5)
0003f6 c01a      	RJMP _0x2020077
                 _0x2020075:
0003f7 35e8      	CPI  R30,LOW(0x58)
0003f8 f411      	BRNE _0x2020079
0003f9 6008      	ORI  R16,LOW(8)
0003fa c003      	RJMP _0x202007A
                 _0x2020079:
0003fb 37e8      	CPI  R30,LOW(0x78)
0003fc f009      	BREQ PC+2
0003fd c0ea      	RJMP _0x20200B8
                 _0x202007A:
0003fe e1e0      	LDI  R30,LOW(16)
0003ff 8bec      	STD  Y+20,R30
000400 ff01      	SBRS R16,1
000401 c008      	RJMP _0x202007C
                +
000402 e0e0     +LDI R30 , LOW ( 0x10000000 )
000403 e0f0     +LDI R31 , HIGH ( 0x10000000 )
000404 e060     +LDI R22 , BYTE3 ( 0x10000000 )
000405 e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
000406 940e 06eb 	CALL SUBOPT_0x1B
000408 e018      	LDI  R17,LOW(8)
000409 c007      	RJMP _0x2020077
                 _0x202007C:
                +
00040a e0e0     +LDI R30 , LOW ( 0x1000 )
00040b e1f0     +LDI R31 , HIGH ( 0x1000 )
00040c e060     +LDI R22 , BYTE3 ( 0x1000 )
00040d e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
00040e 940e 06eb 	CALL SUBOPT_0x1B
000410 e014      	LDI  R17,LOW(4)
                 _0x2020077:
000411 3040      	CPI  R20,0
000412 f011      	BREQ _0x202007D
000413 770f      	ANDI R16,LOW(127)
000414 c001      	RJMP _0x202007E
                 _0x202007D:
000415 e041      	LDI  R20,LOW(1)
                 _0x202007E:
000416 ff01      	SBRS R16,1
000417 c008      	RJMP _0x202007F
000418 940e 06d7 	CALL SUBOPT_0x17
00041a 940e 06cb 	CALL SUBOPT_0x15
00041c 9614      	ADIW R26,4
00041d 940e 0970 	CALL __GETD1P
00041f c00f      	RJMP _0x2020115
                 _0x202007F:
000420 ff02      	SBRS R16,2
000421 c007      	RJMP _0x2020081
000422 940e 06d7 	CALL SUBOPT_0x17
000424 940e 06e6 	CALL SUBOPT_0x1A
000426 940e 0904 	CALL __CWD1
000428 c006      	RJMP _0x2020115
                 _0x2020081:
000429 940e 06d7 	CALL SUBOPT_0x17
00042b 940e 06e6 	CALL SUBOPT_0x1A
00042d 2766      	CLR  R22
00042e 2777      	CLR  R23
                 _0x2020115:
                +
00042f 87ea     +STD Y + 10 , R30
000430 87fb     +STD Y + 10 + 1 , R31
000431 876c     +STD Y + 10 + 2 , R22
000432 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000433 ff02      	SBRS R16,2
000434 c012      	RJMP _0x2020083
000435 85ad      	LDD  R26,Y+13
000436 23aa      	TST  R26
000437 f442      	BRPL _0x2020084
000438 940e 06d9 	CALL SUBOPT_0x18
00043a 940e 08f6 	CALL __ANEGD1
00043c 940e 06d2 	CALL SUBOPT_0x16
00043e e2ed      	LDI  R30,LOW(45)
00043f 8bed      	STD  Y+21,R30
                 _0x2020084:
000440 89ed      	LDD  R30,Y+21
000441 30e0      	CPI  R30,0
000442 f019      	BREQ _0x2020085
000443 5f1f      	SUBI R17,-LOW(1)
000444 5f4f      	SUBI R20,-LOW(1)
000445 c001      	RJMP _0x2020086
                 _0x2020085:
000446 7f0b      	ANDI R16,LOW(251)
                 _0x2020086:
                 _0x2020083:
000447 2f34      	MOV  R19,R20
                 _0x202006F:
000448 fd00      	SBRC R16,0
000449 c014      	RJMP _0x2020087
                 _0x2020088:
00044a 1715      	CP   R17,R21
00044b f410      	BRSH _0x202008B
00044c 1735      	CP   R19,R21
00044d f008      	BRLO _0x202008C
                 _0x202008B:
00044e c00f      	RJMP _0x202008A
                 _0x202008C:
00044f ff07      	SBRS R16,7
000450 c008      	RJMP _0x202008D
000451 ff02      	SBRS R16,2
000452 c004      	RJMP _0x202008E
000453 7f0b      	ANDI R16,LOW(251)
000454 892d      	LDD  R18,Y+21
000455 5011      	SUBI R17,LOW(1)
000456 c001      	RJMP _0x202008F
                 _0x202008E:
000457 e320      	LDI  R18,LOW(48)
                 _0x202008F:
000458 c001      	RJMP _0x2020090
                 _0x202008D:
000459 e220      	LDI  R18,LOW(32)
                 _0x2020090:
00045a 940e 06b0 	CALL SUBOPT_0x11
00045c 5051      	SUBI R21,LOW(1)
00045d cfec      	RJMP _0x2020088
                 _0x202008A:
                 _0x2020087:
                 _0x2020091:
00045e 1714      	CP   R17,R20
00045f f490      	BRSH _0x2020093
000460 6100      	ORI  R16,LOW(16)
000461 ff02      	SBRS R16,2
000462 c006      	RJMP _0x2020094
000463 940e 06f0 	CALL SUBOPT_0x1C
000465 f009      	BREQ _0x2020095
000466 5051      	SUBI R21,LOW(1)
                 _0x2020095:
000467 5011      	SUBI R17,LOW(1)
000468 5041      	SUBI R20,LOW(1)
                 _0x2020094:
000469 e3e0      	LDI  R30,LOW(48)
00046a 93ea      	ST   -Y,R30
00046b 940e 06c5 	CALL SUBOPT_0x14
00046d 3050      	CPI  R21,0
00046e f009      	BREQ _0x2020096
00046f 5051      	SUBI R21,LOW(1)
                 _0x2020096:
000470 5041      	SUBI R20,LOW(1)
000471 cfec      	RJMP _0x2020091
                 _0x2020093:
000472 2f31      	MOV  R19,R17
000473 89ec      	LDD  R30,Y+20
000474 30e0      	CPI  R30,0
000475 f4b9      	BRNE _0x2020097
                 _0x2020098:
000476 3030      	CPI  R19,0
000477 f0a1      	BREQ _0x202009A
000478 ff03      	SBRS R16,3
000479 c006      	RJMP _0x202009B
00047a 85ee      	LDD  R30,Y+14
00047b 85ff      	LDD  R31,Y+14+1
00047c 9125      	LPM  R18,Z+
00047d 87ee      	STD  Y+14,R30
00047e 87ff      	STD  Y+14+1,R31
00047f c005      	RJMP _0x202009C
                 _0x202009B:
000480 85ae      	LDD  R26,Y+14
000481 85bf      	LDD  R27,Y+14+1
000482 912d      	LD   R18,X+
000483 87ae      	STD  Y+14,R26
000484 87bf      	STD  Y+14+1,R27
                 _0x202009C:
000485 940e 06b0 	CALL SUBOPT_0x11
000487 3050      	CPI  R21,0
000488 f009      	BREQ _0x202009D
000489 5051      	SUBI R21,LOW(1)
                 _0x202009D:
00048a 5031      	SUBI R19,LOW(1)
00048b cfea      	RJMP _0x2020098
                 _0x202009A:
00048c c051      	RJMP _0x202009E
                 _0x2020097:
                 _0x20200A0:
00048d 940e 0702 	CALL SUBOPT_0x1D
00048f 940e 0921 	CALL __DIVD21U
000491 2f2e      	MOV  R18,R30
000492 302a      	CPI  R18,10
000493 f030      	BRLO _0x20200A2
000494 ff03      	SBRS R16,3
000495 c002      	RJMP _0x20200A3
000496 5c29      	SUBI R18,-LOW(55)
000497 c001      	RJMP _0x20200A4
                 _0x20200A3:
000498 5a29      	SUBI R18,-LOW(87)
                 _0x20200A4:
000499 c001      	RJMP _0x20200A5
                 _0x20200A2:
00049a 5d20      	SUBI R18,-LOW(48)
                 _0x20200A5:
00049b fd04      	SBRC R16,4
00049c c021      	RJMP _0x20200A7
00049d 3321      	CPI  R18,49
00049e f460      	BRSH _0x20200A9
                +
00049f 89a8     +LDD R26 , Y + 16
0004a0 89b9     +LDD R27 , Y + 16 + 1
0004a1 898a     +LDD R24 , Y + 16 + 2
0004a2 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
                +
0004a3 30a1     +CPI R26 , LOW ( 0x1 )
0004a4 e0e0     +LDI R30 , HIGH ( 0x1 )
0004a5 07be     +CPC R27 , R30
0004a6 e0e0     +LDI R30 , BYTE3 ( 0x1 )
0004a7 078e     +CPC R24 , R30
0004a8 e0e0     +LDI R30 , BYTE4 ( 0x1 )
0004a9 079e     +CPC R25 , R30
                 	__CPD2N 0x1
0004aa f409      	BRNE _0x20200A8
                 _0x20200A9:
0004ab c00b      	RJMP _0x20200AB
                 _0x20200A8:
0004ac 1743      	CP   R20,R19
0004ad f440      	BRSH _0x2020116
0004ae 1753      	CP   R21,R19
0004af f010      	BRLO _0x20200AE
0004b0 ff00      	SBRS R16,0
0004b1 c001      	RJMP _0x20200AF
                 _0x20200AE:
0004b2 c010      	RJMP _0x20200AD
                 _0x20200AF:
0004b3 e220      	LDI  R18,LOW(32)
0004b4 ff07      	SBRS R16,7
0004b5 c008      	RJMP _0x20200B0
                 _0x2020116:
0004b6 e320      	LDI  R18,LOW(48)
                 _0x20200AB:
0004b7 6100      	ORI  R16,LOW(16)
0004b8 ff02      	SBRS R16,2
0004b9 c004      	RJMP _0x20200B1
0004ba 940e 06f0 	CALL SUBOPT_0x1C
0004bc f009      	BREQ _0x20200B2
0004bd 5051      	SUBI R21,LOW(1)
                 _0x20200B2:
                 _0x20200B1:
                 _0x20200B0:
                 _0x20200A7:
0004be 940e 06b0 	CALL SUBOPT_0x11
0004c0 3050      	CPI  R21,0
0004c1 f009      	BREQ _0x20200B3
0004c2 5051      	SUBI R21,LOW(1)
                 _0x20200B3:
                 _0x20200AD:
0004c3 5031      	SUBI R19,LOW(1)
0004c4 940e 0702 	CALL SUBOPT_0x1D
0004c6 940e 095c 	CALL __MODD21U
0004c8 940e 06d2 	CALL SUBOPT_0x16
0004ca 89ec      	LDD  R30,Y+20
                +
0004cb 89a8     +LDD R26 , Y + 16
0004cc 89b9     +LDD R27 , Y + 16 + 1
0004cd 898a     +LDD R24 , Y + 16 + 2
0004ce 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
0004cf 27ff      	CLR  R31
0004d0 2766      	CLR  R22
0004d1 2777      	CLR  R23
0004d2 940e 0921 	CALL __DIVD21U
0004d4 940e 06eb 	CALL SUBOPT_0x1B
                +
0004d6 89e8     +LDD R30 , Y + 16
0004d7 89f9     +LDD R31 , Y + 16 + 1
0004d8 896a     +LDD R22 , Y + 16 + 2
0004d9 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
0004da 940e 099c 	CALL __CPD10
0004dc f009      	BREQ _0x20200A1
0004dd cfaf      	RJMP _0x20200A0
                 _0x20200A1:
                 _0x202009E:
0004de ff00      	SBRS R16,0
0004df c008      	RJMP _0x20200B4
                 _0x20200B5:
0004e0 3050      	CPI  R21,0
0004e1 f031      	BREQ _0x20200B7
0004e2 5051      	SUBI R21,LOW(1)
0004e3 e2e0      	LDI  R30,LOW(32)
0004e4 93ea      	ST   -Y,R30
0004e5 940e 06c5 	CALL SUBOPT_0x14
0004e7 cff8      	RJMP _0x20200B5
                 _0x20200B7:
                 _0x20200B4:
                 _0x20200B8:
                 _0x2020054:
                 _0x2020114:
0004e8 e010      	LDI  R17,LOW(0)
                 _0x2020035:
0004e9 ce0c      	RJMP _0x2020030
                 _0x2020032:
0004ea 81ae      	LDD  R26,Y+6
0004eb 81bf      	LDD  R27,Y+6+1
0004ec 940e 096c 	CALL __GETW1P
0004ee 940e 09a7 	CALL __LOADLOCR6
0004f0 96ef      	ADIW R28,63
0004f1 966f      	ADIW R28,31
0004f2 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
0004f3 92ff      	PUSH R15
0004f4 2ef8      	MOV  R15,R24
0004f5 9726      	SBIW R28,6
0004f6 940e 09a2 	CALL __SAVELOCR4
0004f8 940e 070b 	CALL SUBOPT_0x1E
0004fa 9730      	SBIW R30,0
0004fb f419      	BRNE _0x20200B9
0004fc efef      	LDI  R30,LOW(65535)
0004fd efff      	LDI  R31,HIGH(65535)
0004fe c023      	RJMP _0x20C0004
                 _0x20200B9:
0004ff 01de      	MOVW R26,R28
000500 9616      	ADIW R26,6
000501 940e 08ee 	CALL __ADDW2R15
000503 018d      	MOVW R16,R26
000504 940e 070b 	CALL SUBOPT_0x1E
000506 83ee      	STD  Y+6,R30
000507 83ff      	STD  Y+6+1,R31
000508 e0e0      	LDI  R30,LOW(0)
000509 87e8      	STD  Y+8,R30
00050a 87e9      	STD  Y+8+1,R30
00050b 01de      	MOVW R26,R28
00050c 961a      	ADIW R26,10
00050d 940e 08ee 	CALL __ADDW2R15
00050f 940e 096c 	CALL __GETW1P
000511 93fa      	ST   -Y,R31
000512 93ea      	ST   -Y,R30
000513 931a      	ST   -Y,R17
000514 930a      	ST   -Y,R16
000515 eced      	LDI  R30,LOW(_put_buff_G101)
000516 e0f1      	LDI  R31,HIGH(_put_buff_G101)
000517 93fa      	ST   -Y,R31
000518 93ea      	ST   -Y,R30
000519 01de      	MOVW R26,R28
00051a 961a      	ADIW R26,10
00051b ddbd      	RCALL __print_G101
00051c 019f      	MOVW R18,R30
00051d 81ae      	LDD  R26,Y+6
00051e 81bf      	LDD  R27,Y+6+1
00051f e0e0      	LDI  R30,LOW(0)
000520 93ec      	ST   X,R30
000521 01f9      	MOVW R30,R18
                 _0x20C0004:
000522 940e 09a9 	CALL __LOADLOCR4
000524 962a      	ADIW R28,10
000525 90ff      	POP  R15
000526 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strcpyf:
                 ; .FSTART _strcpyf
000527 93ba      	ST   -Y,R27
000528 93aa      	ST   -Y,R26
000529 91e9          ld   r30,y+
00052a 91f9          ld   r31,y+
00052b 91a9          ld   r26,y+
00052c 91b9          ld   r27,y+
00052d 01cd          movw r24,r26
                 strcpyf0:
00052e 9005      	lpm  r0,z+
00052f 920d          st   x+,r0
000530 2000          tst  r0
000531 f7e1          brne strcpyf0
000532 01fc          movw r30,r24
000533 9508          ret
                 ; .FEND
                 _strlen:
                 ; .FSTART _strlen
000534 93ba      	ST   -Y,R27
000535 93aa      	ST   -Y,R26
000536 91a9          ld   r26,y+
000537 91b9          ld   r27,y+
000538 27ee          clr  r30
000539 27ff          clr  r31
                 strlen0:
00053a 916d          ld   r22,x+
00053b 2366          tst  r22
00053c f011          breq strlen1
00053d 9631          adiw r30,1
00053e cffb          rjmp strlen0
                 strlen1:
00053f 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
000540 93ba      	ST   -Y,R27
000541 93aa      	ST   -Y,R26
000542 27aa          clr  r26
000543 27bb          clr  r27
000544 91e9          ld   r30,y+
000545 91f9          ld   r31,y+
                 strlenf0:
000546 9005      	lpm  r0,z+
000547 2000          tst  r0
000548 f011          breq strlenf1
000549 9611          adiw r26,1
00054a cffb          rjmp strlenf0
                 strlenf1:
00054b 01fd          movw r30,r26
00054c 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 _ftrunc:
                 ; .FSTART _ftrunc
00054d 940e 098a 	CALL __PUTPARD2
00054f 817b         ldd  r23,y+3
000550 816a         ldd  r22,y+2
000551 81f9         ldd  r31,y+1
000552 81e8         ld   r30,y
000553 fb77         bst  r23,7
000554 0f77         lsl  r23
000555 fd67         sbrc r22,7
000556 6071         sbr  r23,1
000557 2f97         mov  r25,r23
000558 579e         subi r25,0x7e
000559 f081         breq __ftrunc0
00055a f078         brcs __ftrunc0
00055b 3198         cpi  r25,24
00055c f490         brsh __ftrunc1
00055d 27aa         clr  r26
00055e 27bb         clr  r27
00055f 2788         clr  r24
                 __ftrunc2:
000560 9408         sec
000561 9587         ror  r24
000562 95b7         ror  r27
000563 95a7         ror  r26
000564 959a         dec  r25
000565 f7d1         brne __ftrunc2
000566 23ea         and  r30,r26
000567 23fb         and  r31,r27
000568 2368         and  r22,r24
000569 c005         rjmp __ftrunc1
                 __ftrunc0:
00056a 94e8         clt
00056b 2777         clr  r23
00056c 27ee         clr  r30
00056d 27ff         clr  r31
00056e 2766         clr  r22
                 __ftrunc1:
00056f 776f         cbr  r22,0x80
000570 9576         lsr  r23
000571 f408         brcc __ftrunc3
000572 6860         sbr  r22,0x80
                 __ftrunc3:
000573 f977         bld  r23,7
000574 91a9         ld   r26,y+
000575 91b9         ld   r27,y+
000576 9189         ld   r24,y+
000577 9199         ld   r25,y+
000578 17ea         cp   r30,r26
000579 07fb         cpc  r31,r27
00057a 0768         cpc  r22,r24
00057b 0779         cpc  r23,r25
00057c fb97         bst  r25,7
00057d 9508         ret
                 ; .FEND
                 _floor:
                 ; .FSTART _floor
00057e 940e 098a 	CALL __PUTPARD2
000580 940e 097b 	CALL __GETD2S0
000582 940e 054d 	CALL _ftrunc
000584 940e 0980 	CALL __PUTD1S0
000586 f419          brne __floor1
                 __floor0:
000587 940e 0976 	CALL __GETD1S0
000589 c009      	RJMP _0x20C0003
                 __floor1:
00058a f7e6          brtc __floor0
00058b 940e 0976 	CALL __GETD1S0
                +
00058d e0a0     +LDI R26 , LOW ( 0x3F800000 )
00058e e0b0     +LDI R27 , HIGH ( 0x3F800000 )
00058f e880     +LDI R24 , BYTE3 ( 0x3F800000 )
000590 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
000591 940e 07e4 	CALL __SUBF12
                 _0x20C0003:
000593 9624      	ADIW R28,4
000594 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _ftoa:
                 ; .FSTART _ftoa
000595 d0b7      	RCALL SUBOPT_0x4
000596 e0e0      	LDI  R30,LOW(0)
000597 83ea      	STD  Y+2,R30
000598 e3ef      	LDI  R30,LOW(63)
000599 83eb      	STD  Y+3,R30
00059a 931a      	ST   -Y,R17
00059b 930a      	ST   -Y,R16
00059c 85eb      	LDD  R30,Y+11
00059d 85fc      	LDD  R31,Y+11+1
00059e 3fef      	CPI  R30,LOW(0xFFFF)
00059f efaf      	LDI  R26,HIGH(0xFFFF)
0005a0 07fa      	CPC  R31,R26
0005a1 f431      	BRNE _0x20A000D
0005a2 d16f      	RCALL SUBOPT_0x1F
                +
0005a3 e8ac     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 0 ) )
0005a4 e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 0 ) )
                 	__POINTW2FN _0x20A0000,0
0005a5 940e 0527 	CALL _strcpyf
0005a7 c08a      	RJMP _0x20C0002
                 _0x20A000D:
0005a8 3fef      	CPI  R30,LOW(0x7FFF)
0005a9 e7af      	LDI  R26,HIGH(0x7FFF)
0005aa 07fa      	CPC  R31,R26
0005ab f431      	BRNE _0x20A000C
0005ac d165      	RCALL SUBOPT_0x1F
                +
0005ad e8ad     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 1 ) )
0005ae e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 1 ) )
                 	__POINTW2FN _0x20A0000,1
0005af 940e 0527 	CALL _strcpyf
0005b1 c080      	RJMP _0x20C0002
                 _0x20A000C:
0005b2 85ac      	LDD  R26,Y+12
0005b3 23aa      	TST  R26
0005b4 f452      	BRPL _0x20A000F
                +
0005b5 85e9     +LDD R30 , Y + 9
0005b6 85fa     +LDD R31 , Y + 9 + 1
0005b7 856b     +LDD R22 , Y + 9 + 2
0005b8 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
0005b9 940e 0745 	CALL __ANEGF1
0005bb d15b      	RCALL SUBOPT_0x20
0005bc d15f      	RCALL SUBOPT_0x21
0005bd e2ed      	LDI  R30,LOW(45)
0005be 93ec      	ST   X,R30
                 _0x20A000F:
0005bf 85a8      	LDD  R26,Y+8
0005c0 30a7      	CPI  R26,LOW(0x7)
0005c1 f010      	BRLO _0x20A0010
0005c2 e0e6      	LDI  R30,LOW(6)
0005c3 87e8      	STD  Y+8,R30
                 _0x20A0010:
0005c4 8518      	LDD  R17,Y+8
                 _0x20A0011:
0005c5 2fe1      	MOV  R30,R17
0005c6 5011      	SUBI R17,1
0005c7 30e0      	CPI  R30,0
0005c8 f021      	BREQ _0x20A0013
0005c9 d159      	RCALL SUBOPT_0x22
0005ca d0c7      	RCALL SUBOPT_0xC
0005cb d15c      	RCALL SUBOPT_0x23
0005cc cff8      	RJMP _0x20A0011
                 _0x20A0013:
0005cd d15f      	RCALL SUBOPT_0x24
0005ce 940e 07eb 	CALL __ADDF12
0005d0 d146      	RCALL SUBOPT_0x20
0005d1 e010      	LDI  R17,LOW(0)
                +
0005d2 e0e0     +LDI R30 , LOW ( 0x3F800000 )
0005d3 e0f0     +LDI R31 , HIGH ( 0x3F800000 )
0005d4 e860     +LDI R22 , BYTE3 ( 0x3F800000 )
0005d5 e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
0005d6 d151      	RCALL SUBOPT_0x23
                 _0x20A0014:
0005d7 d155      	RCALL SUBOPT_0x24
0005d8 940e 08ce 	CALL __CMPF12
0005da f068      	BRLO _0x20A0016
0005db d147      	RCALL SUBOPT_0x22
0005dc d0a2      	RCALL SUBOPT_0x9
0005dd d14a      	RCALL SUBOPT_0x23
0005de 5f1f      	SUBI R17,-LOW(1)
0005df 3217      	CPI  R17,39
0005e0 f030      	BRLO _0x20A0017
0005e1 d130      	RCALL SUBOPT_0x1F
                +
0005e2 e9a1     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 5 ) )
0005e3 e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 5 ) )
                 	__POINTW2FN _0x20A0000,5
0005e4 940e 0527 	CALL _strcpyf
0005e6 c04b      	RJMP _0x20C0002
                 _0x20A0017:
0005e7 cfef      	RJMP _0x20A0014
                 _0x20A0016:
0005e8 3010      	CPI  R17,0
0005e9 f421      	BRNE _0x20A0018
0005ea d131      	RCALL SUBOPT_0x21
0005eb e3e0      	LDI  R30,LOW(48)
0005ec 93ec      	ST   X,R30
0005ed c020      	RJMP _0x20A0019
                 _0x20A0018:
                 _0x20A001A:
0005ee 2fe1      	MOV  R30,R17
0005ef 5011      	SUBI R17,1
0005f0 30e0      	CPI  R30,0
0005f1 f0e1      	BREQ _0x20A001C
0005f2 d130      	RCALL SUBOPT_0x22
0005f3 d09e      	RCALL SUBOPT_0xC
0005f4 d096      	RCALL SUBOPT_0xB
0005f5 01df      	MOVW R26,R30
0005f6 01cb      	MOVW R24,R22
0005f7 940e 057e 	CALL _floor
0005f9 d12e      	RCALL SUBOPT_0x23
0005fa d132      	RCALL SUBOPT_0x24
0005fb 940e 0889 	CALL __DIVF21
0005fd 940e 0778 	CALL __CFD1U
0005ff 2f0e      	MOV  R16,R30
000600 d11b      	RCALL SUBOPT_0x21
000601 d09e      	RCALL SUBOPT_0xE
000602 e0f0      	LDI  R31,0
000603 d11f      	RCALL SUBOPT_0x22
000604 940e 0904 	CALL __CWD1
000606 940e 07b1 	CALL __CDF1
000608 940e 083b 	CALL __MULF12
00060a d12b      	RCALL SUBOPT_0x25
00060b d099      	RCALL SUBOPT_0xF
00060c d10a      	RCALL SUBOPT_0x20
00060d cfe0      	RJMP _0x20A001A
                 _0x20A001C:
                 _0x20A0019:
00060e 85e8      	LDD  R30,Y+8
00060f 30e0      	CPI  R30,0
000610 f0e9      	BREQ _0x20C0001
000611 d10a      	RCALL SUBOPT_0x21
000612 e2ee      	LDI  R30,LOW(46)
000613 93ec      	ST   X,R30
                 _0x20A001E:
000614 85e8      	LDD  R30,Y+8
000615 50e1      	SUBI R30,LOW(1)
000616 87e8      	STD  Y+8,R30
000617 5fef      	SUBI R30,-LOW(1)
000618 f0a9      	BREQ _0x20A0020
000619 d11c      	RCALL SUBOPT_0x25
00061a d064      	RCALL SUBOPT_0x9
00061b d0fb      	RCALL SUBOPT_0x20
                +
00061c 85e9     +LDD R30 , Y + 9
00061d 85fa     +LDD R31 , Y + 9 + 1
00061e 856b     +LDD R22 , Y + 9 + 2
00061f 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000620 940e 0778 	CALL __CFD1U
000622 2f0e      	MOV  R16,R30
000623 d0f8      	RCALL SUBOPT_0x21
000624 d07b      	RCALL SUBOPT_0xE
000625 e0f0      	LDI  R31,0
000626 d10f      	RCALL SUBOPT_0x25
000627 940e 0904 	CALL __CWD1
000629 940e 07b1 	CALL __CDF1
00062b d079      	RCALL SUBOPT_0xF
00062c d0ea      	RCALL SUBOPT_0x20
00062d cfe6      	RJMP _0x20A001E
                 _0x20A0020:
                 _0x20C0001:
00062e 81ae      	LDD  R26,Y+6
00062f 81bf      	LDD  R27,Y+6+1
000630 e0e0      	LDI  R30,LOW(0)
000631 93ec      	ST   X,R30
                 _0x20C0002:
000632 8119      	LDD  R17,Y+1
000633 8108      	LDD  R16,Y+0
000634 962d      	ADIW R28,13
000635 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 __base_y_G100:
000260           	.BYTE 0x4
                 __seed_G105:
000264           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x0:
000636 e3a2      	LDI  R26,LOW(50)
000637 e0b0      	LDI  R27,0
000638 940c 073b 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1:
00063a 940e 0144 	CALL __lcd_write_data
00063c e0a3      	LDI  R26,LOW(3)
00063d e0b0      	LDI  R27,0
00063e 940c 073b 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2:
000640 e3a0      	LDI  R26,LOW(48)
000641 940e 0130 	CALL __lcd_write_nibble_G100
                +
000643 e281     +LDI R24 , LOW ( 33 )
                +__DELAY_USB_LOOP :
000644 958a     +DEC R24
000645 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 33
000646 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3:
000647 91ed      	LD   R30,X+
000648 91fd      	LD   R31,X+
000649 9631      	ADIW R30,1
00064a 93fe      	ST   -X,R31
00064b 93ee      	ST   -X,R30
00064c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x4:
00064d 93ba      	ST   -Y,R27
00064e 93aa      	ST   -Y,R26
00064f 9724      	SBIW R28,4
000650 e0e0      	LDI  R30,LOW(0)
000651 83e8      	ST   Y,R30
000652 83e9      	STD  Y+1,R30
000653 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x5:
                +
000654 81ac     +LDD R26 , Y + 4
000655 81bd     +LDD R27 , Y + 4 + 1
000656 818e     +LDD R24 , Y + 4 + 2
000657 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
000658 e0e0     +LDI R30 , LOW ( 0x41200000 )
000659 e0f0     +LDI R31 , HIGH ( 0x41200000 )
00065a e260     +LDI R22 , BYTE3 ( 0x41200000 )
00065b e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
00065c 940e 083b 	CALL __MULF12
                +
00065e 83ec     +STD Y + 4 , R30
00065f 83fd     +STD Y + 4 + 1 , R31
000660 836e     +STD Y + 4 + 2 , R22
000661 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
000662 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x6:
                +
000663 81ec     +LDD R30 , Y + 4
000664 81fd     +LDD R31 , Y + 4 + 1
000665 816e     +LDD R22 , Y + 4 + 2
000666 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
000667 85ac     +LDD R26 , Y + 12
000668 85bd     +LDD R27 , Y + 12 + 1
000669 858e     +LDD R24 , Y + 12 + 2
00066a 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
00066b 940e 08ce 	CALL __CMPF12
00066d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x7:
                +
00066e 85ac     +LDD R26 , Y + 12
00066f 85bd     +LDD R27 , Y + 12 + 1
000670 858e     +LDD R24 , Y + 12 + 2
000671 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000672 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x8:
                +
000673 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000674 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000675 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000676 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000677 940e 083b 	CALL __MULF12
                +
000679 87ec     +STD Y + 12 , R30
00067a 87fd     +STD Y + 12 + 1 , R31
00067b 876e     +STD Y + 12 + 2 , R22
00067c 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
00067d 5f3f      	SUBI R19,-LOW(1)
00067e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x9:
                +
00067f e0e0     +LDI R30 , LOW ( 0x41200000 )
000680 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000681 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000682 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000683 940e 083b 	CALL __MULF12
000685 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xA:
                +
000686 87ec     +STD Y + 12 , R30
000687 87fd     +STD Y + 12 + 1 , R31
000688 876e     +STD Y + 12 + 2 , R22
000689 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
00068a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xB:
                +
00068b e0a0     +LDI R26 , LOW ( 0x3F000000 )
00068c e0b0     +LDI R27 , HIGH ( 0x3F000000 )
00068d e080     +LDI R24 , BYTE3 ( 0x3F000000 )
00068e e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
00068f 940e 07eb 	CALL __ADDF12
000691 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xC:
                +
000692 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000693 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000694 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000695 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000696 940e 083b 	CALL __MULF12
000698 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xD:
000699 85a8      	LDD  R26,Y+8
00069a 85b9      	LDD  R27,Y+8+1
00069b 9611      	ADIW R26,1
00069c 87a8      	STD  Y+8,R26
00069d 87b9      	STD  Y+8+1,R27
00069e 9711      	SBIW R26,1
00069f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xE:
0006a0 2fe0      	MOV  R30,R16
0006a1 5de0      	SUBI R30,-LOW(48)
0006a2 93ec      	ST   X,R30
0006a3 2fe0      	MOV  R30,R16
0006a4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF:
0006a5 940e 098f 	CALL __SWAPD12
0006a7 940e 07e4 	CALL __SUBF12
0006a9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x10:
0006aa 85e8      	LDD  R30,Y+8
0006ab 85f9      	LDD  R31,Y+8+1
0006ac 9631      	ADIW R30,1
0006ad 87e8      	STD  Y+8,R30
0006ae 87f9      	STD  Y+8+1,R31
0006af 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x11:
0006b0 932a      	ST   -Y,R18
0006b1 81af      	LDD  R26,Y+7
0006b2 85b8      	LDD  R27,Y+7+1
0006b3 85e9      	LDD  R30,Y+9
0006b4 85fa      	LDD  R31,Y+9+1
0006b5 9509      	ICALL
0006b6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x12:
                +
0006b7 01fe     +MOVW R30 , R28
0006b8 5ae6     +SUBI R30 , LOW ( - 90 )
0006b9 4fff     +SBCI R31 , HIGH ( - 90 )
0006ba 9001     +LD R0 , Z +
0006bb 81f0     +LD R31 , Z
0006bc 2de0     +MOV R30 , R0
                 	__GETW1SX 90
0006bd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x13:
0006be 9734      	SBIW R30,4
                +
0006bf 01de     +MOVW R26 , R28
0006c0 5aa6     +SUBI R26 , LOW ( - 90 )
0006c1 4fbf     +SBCI R27 , HIGH ( - 90 )
0006c2 93ed     +ST X + , R30
0006c3 93fc     +ST X , R31
                 	__PUTW1SX 90
0006c4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x14:
0006c5 81af      	LDD  R26,Y+7
0006c6 85b8      	LDD  R27,Y+7+1
0006c7 85e9      	LDD  R30,Y+9
0006c8 85fa      	LDD  R31,Y+9+1
0006c9 9509      	ICALL
0006ca 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x15:
                +
0006cb 01de     +MOVW R26 , R28
0006cc 5aa6     +SUBI R26 , LOW ( - 90 )
0006cd 4fbf     +SBCI R27 , HIGH ( - 90 )
0006ce 900d     +LD R0 , X +
0006cf 91bc     +LD R27 , X
0006d0 2da0     +MOV R26 , R0
                 	__GETW2SX 90
0006d1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x16:
                +
0006d2 87ea     +STD Y + 10 , R30
0006d3 87fb     +STD Y + 10 + 1 , R31
0006d4 876c     +STD Y + 10 + 2 , R22
0006d5 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
0006d6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x17:
0006d7 dfdf      	RCALL SUBOPT_0x12
0006d8 cfe5      	RJMP SUBOPT_0x13
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x18:
                +
0006d9 85ea     +LDD R30 , Y + 10
0006da 85fb     +LDD R31 , Y + 10 + 1
0006db 856c     +LDD R22 , Y + 10 + 2
0006dc 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
0006dd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x19:
0006de 87ee      	STD  Y+14,R30
0006df 87ff      	STD  Y+14+1,R31
0006e0 85ae      	LDD  R26,Y+14
0006e1 85bf      	LDD  R27,Y+14+1
0006e2 940e 0534 	CALL _strlen
0006e4 2f1e      	MOV  R17,R30
0006e5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x1A:
0006e6 dfe4      	RCALL SUBOPT_0x15
0006e7 9614      	ADIW R26,4
0006e8 940e 096c 	CALL __GETW1P
0006ea 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1B:
                +
0006eb 8be8     +STD Y + 16 , R30
0006ec 8bf9     +STD Y + 16 + 1 , R31
0006ed 8b6a     +STD Y + 16 + 2 , R22
0006ee 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
0006ef 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x1C:
0006f0 7f0b      	ANDI R16,LOW(251)
0006f1 89ed      	LDD  R30,Y+21
0006f2 93ea      	ST   -Y,R30
                +
0006f3 01de     +MOVW R26 , R28
0006f4 5aa9     +SUBI R26 , LOW ( - 87 )
0006f5 4fbf     +SBCI R27 , HIGH ( - 87 )
0006f6 900d     +LD R0 , X +
0006f7 91bc     +LD R27 , X
0006f8 2da0     +MOV R26 , R0
                 	__GETW2SX 87
                +
0006f9 01fe     +MOVW R30 , R28
0006fa 5ae7     +SUBI R30 , LOW ( - 89 )
0006fb 4fff     +SBCI R31 , HIGH ( - 89 )
0006fc 9001     +LD R0 , Z +
0006fd 81f0     +LD R31 , Z
0006fe 2de0     +MOV R30 , R0
                 	__GETW1SX 89
0006ff 9509      	ICALL
000700 3050      	CPI  R21,0
000701 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1D:
                +
000702 89e8     +LDD R30 , Y + 16
000703 89f9     +LDD R31 , Y + 16 + 1
000704 896a     +LDD R22 , Y + 16 + 2
000705 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
000706 85aa     +LDD R26 , Y + 10
000707 85bb     +LDD R27 , Y + 10 + 1
000708 858c     +LDD R24 , Y + 10 + 2
000709 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
00070a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1E:
00070b 01de      	MOVW R26,R28
00070c 961c      	ADIW R26,12
00070d 940e 08ee 	CALL __ADDW2R15
00070f 940e 096c 	CALL __GETW1P
000711 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1F:
000712 81ee      	LDD  R30,Y+6
000713 81ff      	LDD  R31,Y+6+1
000714 93fa      	ST   -Y,R31
000715 93ea      	ST   -Y,R30
000716 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x20:
                +
000717 87e9     +STD Y + 9 , R30
000718 87fa     +STD Y + 9 + 1 , R31
000719 876b     +STD Y + 9 + 2 , R22
00071a 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
00071b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x21:
00071c 81ae      	LDD  R26,Y+6
00071d 81bf      	LDD  R27,Y+6+1
00071e 9611      	ADIW R26,1
00071f 83ae      	STD  Y+6,R26
000720 83bf      	STD  Y+6+1,R27
000721 9711      	SBIW R26,1
000722 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x22:
                +
000723 81aa     +LDD R26 , Y + 2
000724 81bb     +LDD R27 , Y + 2 + 1
000725 818c     +LDD R24 , Y + 2 + 2
000726 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
000727 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x23:
                +
000728 83ea     +STD Y + 2 , R30
000729 83fb     +STD Y + 2 + 1 , R31
00072a 836c     +STD Y + 2 + 2 , R22
00072b 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
00072c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x24:
                +
00072d 81ea     +LDD R30 , Y + 2
00072e 81fb     +LDD R31 , Y + 2 + 1
00072f 816c     +LDD R22 , Y + 2 + 2
000730 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
000731 85a9     +LDD R26 , Y + 9
000732 85ba     +LDD R27 , Y + 9 + 1
000733 858b     +LDD R24 , Y + 9 + 2
000734 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000735 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x25:
                +
000736 85a9     +LDD R26 , Y + 9
000737 85ba     +LDD R27 , Y + 9 + 1
000738 858b     +LDD R24 , Y + 9 + 2
000739 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
00073a 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
00073b 9610      	adiw r26,0
00073c f039      	breq __delay_ms1
                 __delay_ms0:
                +
00073d ef8a     +LDI R24 , LOW ( 0xFA )
00073e e090     +LDI R25 , HIGH ( 0xFA )
                +__DELAY_USW_LOOP :
00073f 9701     +SBIW R24 , 1
000740 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xFA
000741 95a8      	wdr
000742 9711      	sbiw r26,1
000743 f7c9      	brne __delay_ms0
                 __delay_ms1:
000744 9508      	ret
                 
                 __ANEGF1:
000745 9730      	SBIW R30,0
000746 4060      	SBCI R22,0
000747 4070      	SBCI R23,0
000748 f009      	BREQ __ANEGF10
000749 5870      	SUBI R23,0x80
                 __ANEGF10:
00074a 9508      	RET
                 
                 __ROUND_REPACK:
00074b 2355      	TST  R21
00074c f442      	BRPL __REPACK
00074d 3850      	CPI  R21,0x80
00074e f411      	BRNE __ROUND_REPACK0
00074f ffe0      	SBRS R30,0
000750 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
000751 9631      	ADIW R30,1
000752 1f69      	ADC  R22,R25
000753 1f79      	ADC  R23,R25
000754 f06b      	BRVS __REPACK1
                 
                 __REPACK:
000755 e850      	LDI  R21,0x80
000756 2757      	EOR  R21,R23
000757 f411      	BRNE __REPACK0
000758 935f      	PUSH R21
000759 c0cf      	RJMP __ZERORES
                 __REPACK0:
00075a 3f5f      	CPI  R21,0xFF
00075b f031      	BREQ __REPACK1
00075c 0f66      	LSL  R22
00075d 0c00      	LSL  R0
00075e 9557      	ROR  R21
00075f 9567      	ROR  R22
000760 2f75      	MOV  R23,R21
000761 9508      	RET
                 __REPACK1:
000762 935f      	PUSH R21
000763 2000      	TST  R0
000764 f00a      	BRMI __REPACK2
000765 c0cf      	RJMP __MAXRES
                 __REPACK2:
000766 c0c8      	RJMP __MINRES
                 
                 __UNPACK:
000767 e850      	LDI  R21,0x80
000768 2e19      	MOV  R1,R25
000769 2215      	AND  R1,R21
00076a 0f88      	LSL  R24
00076b 1f99      	ROL  R25
00076c 2795      	EOR  R25,R21
00076d 0f55      	LSL  R21
00076e 9587      	ROR  R24
                 
                 __UNPACK1:
00076f e850      	LDI  R21,0x80
000770 2e07      	MOV  R0,R23
000771 2205      	AND  R0,R21
000772 0f66      	LSL  R22
000773 1f77      	ROL  R23
000774 2775      	EOR  R23,R21
000775 0f55      	LSL  R21
000776 9567      	ROR  R22
000777 9508      	RET
                 
                 __CFD1U:
000778 9468      	SET
000779 c001      	RJMP __CFD1U0
                 __CFD1:
00077a 94e8      	CLT
                 __CFD1U0:
00077b 935f      	PUSH R21
00077c dff2      	RCALL __UNPACK1
00077d 3870      	CPI  R23,0x80
00077e f018      	BRLO __CFD10
00077f 3f7f      	CPI  R23,0xFF
000780 f408      	BRCC __CFD10
000781 c0a7      	RJMP __ZERORES
                 __CFD10:
000782 e156      	LDI  R21,22
000783 1b57      	SUB  R21,R23
000784 f4aa      	BRPL __CFD11
000785 9551      	NEG  R21
000786 3058      	CPI  R21,8
000787 f40e      	BRTC __CFD19
000788 3059      	CPI  R21,9
                 __CFD19:
000789 f030      	BRLO __CFD17
00078a efef      	SER  R30
00078b efff      	SER  R31
00078c ef6f      	SER  R22
00078d e77f      	LDI  R23,0x7F
00078e f977      	BLD  R23,7
00078f c01a      	RJMP __CFD15
                 __CFD17:
000790 2777      	CLR  R23
000791 2355      	TST  R21
000792 f0b9      	BREQ __CFD15
                 __CFD18:
000793 0fee      	LSL  R30
000794 1fff      	ROL  R31
000795 1f66      	ROL  R22
000796 1f77      	ROL  R23
000797 955a      	DEC  R21
000798 f7d1      	BRNE __CFD18
000799 c010      	RJMP __CFD15
                 __CFD11:
00079a 2777      	CLR  R23
                 __CFD12:
00079b 3058      	CPI  R21,8
00079c f028      	BRLO __CFD13
00079d 2fef      	MOV  R30,R31
00079e 2ff6      	MOV  R31,R22
00079f 2f67      	MOV  R22,R23
0007a0 5058      	SUBI R21,8
0007a1 cff9      	RJMP __CFD12
                 __CFD13:
0007a2 2355      	TST  R21
0007a3 f031      	BREQ __CFD15
                 __CFD14:
0007a4 9576      	LSR  R23
0007a5 9567      	ROR  R22
0007a6 95f7      	ROR  R31
0007a7 95e7      	ROR  R30
0007a8 955a      	DEC  R21
0007a9 f7d1      	BRNE __CFD14
                 __CFD15:
0007aa 2000      	TST  R0
0007ab f40a      	BRPL __CFD16
0007ac d149      	RCALL __ANEGD1
                 __CFD16:
0007ad 915f      	POP  R21
0007ae 9508      	RET
                 
                 __CDF1U:
0007af 9468      	SET
0007b0 c001      	RJMP __CDF1U0
                 __CDF1:
0007b1 94e8      	CLT
                 __CDF1U0:
0007b2 9730      	SBIW R30,0
0007b3 4060      	SBCI R22,0
0007b4 4070      	SBCI R23,0
0007b5 f0b1      	BREQ __CDF10
0007b6 2400      	CLR  R0
0007b7 f026      	BRTS __CDF11
0007b8 2377      	TST  R23
0007b9 f412      	BRPL __CDF11
0007ba 9400      	COM  R0
0007bb d13a      	RCALL __ANEGD1
                 __CDF11:
0007bc 2e17      	MOV  R1,R23
0007bd e17e      	LDI  R23,30
0007be 2011      	TST  R1
                 __CDF12:
0007bf f032      	BRMI __CDF13
0007c0 957a      	DEC  R23
0007c1 0fee      	LSL  R30
0007c2 1fff      	ROL  R31
0007c3 1f66      	ROL  R22
0007c4 1c11      	ROL  R1
0007c5 cff9      	RJMP __CDF12
                 __CDF13:
0007c6 2fef      	MOV  R30,R31
0007c7 2ff6      	MOV  R31,R22
0007c8 2d61      	MOV  R22,R1
0007c9 935f      	PUSH R21
0007ca df8a      	RCALL __REPACK
0007cb 915f      	POP  R21
                 __CDF10:
0007cc 9508      	RET
                 
                 __SWAPACC:
0007cd 934f      	PUSH R20
0007ce 01af      	MOVW R20,R30
0007cf 01fd      	MOVW R30,R26
0007d0 01da      	MOVW R26,R20
0007d1 01ab      	MOVW R20,R22
0007d2 01bc      	MOVW R22,R24
0007d3 01ca      	MOVW R24,R20
0007d4 2d40      	MOV  R20,R0
0007d5 2c01      	MOV  R0,R1
0007d6 2e14      	MOV  R1,R20
0007d7 914f      	POP  R20
0007d8 9508      	RET
                 
                 __UADD12:
0007d9 0fea      	ADD  R30,R26
0007da 1ffb      	ADC  R31,R27
0007db 1f68      	ADC  R22,R24
0007dc 9508      	RET
                 
                 __NEGMAN1:
0007dd 95e0      	COM  R30
0007de 95f0      	COM  R31
0007df 9560      	COM  R22
0007e0 5fef      	SUBI R30,-1
0007e1 4fff      	SBCI R31,-1
0007e2 4f6f      	SBCI R22,-1
0007e3 9508      	RET
                 
                 __SUBF12:
0007e4 935f      	PUSH R21
0007e5 df81      	RCALL __UNPACK
0007e6 3890      	CPI  R25,0x80
0007e7 f171      	BREQ __ADDF129
0007e8 e850      	LDI  R21,0x80
0007e9 2615      	EOR  R1,R21
                 
0007ea c004      	RJMP __ADDF120
                 
                 __ADDF12:
0007eb 935f      	PUSH R21
0007ec df7a      	RCALL __UNPACK
0007ed 3890      	CPI  R25,0x80
0007ee f139      	BREQ __ADDF129
                 
                 __ADDF120:
0007ef 3870      	CPI  R23,0x80
0007f0 f121      	BREQ __ADDF128
                 __ADDF121:
0007f1 2f57      	MOV  R21,R23
0007f2 1b59      	SUB  R21,R25
0007f3 f12b      	BRVS __ADDF1211
0007f4 f412      	BRPL __ADDF122
0007f5 dfd7      	RCALL __SWAPACC
0007f6 cffa      	RJMP __ADDF121
                 __ADDF122:
0007f7 3158      	CPI  R21,24
0007f8 f018      	BRLO __ADDF123
0007f9 27aa      	CLR  R26
0007fa 27bb      	CLR  R27
0007fb 2788      	CLR  R24
                 __ADDF123:
0007fc 3058      	CPI  R21,8
0007fd f028      	BRLO __ADDF124
0007fe 2fab      	MOV  R26,R27
0007ff 2fb8      	MOV  R27,R24
000800 2788      	CLR  R24
000801 5058      	SUBI R21,8
000802 cff9      	RJMP __ADDF123
                 __ADDF124:
000803 2355      	TST  R21
000804 f029      	BREQ __ADDF126
                 __ADDF125:
000805 9586      	LSR  R24
000806 95b7      	ROR  R27
000807 95a7      	ROR  R26
000808 955a      	DEC  R21
000809 f7d9      	BRNE __ADDF125
                 __ADDF126:
00080a 2d50      	MOV  R21,R0
00080b 2551      	EOR  R21,R1
00080c f072      	BRMI __ADDF127
00080d dfcb      	RCALL __UADD12
00080e f438      	BRCC __ADDF129
00080f 9567      	ROR  R22
000810 95f7      	ROR  R31
000811 95e7      	ROR  R30
000812 9573      	INC  R23
000813 f413      	BRVC __ADDF129
000814 c020      	RJMP __MAXRES
                 __ADDF128:
000815 dfb7      	RCALL __SWAPACC
                 __ADDF129:
000816 df3e      	RCALL __REPACK
000817 915f      	POP  R21
000818 9508      	RET
                 __ADDF1211:
000819 f7d8      	BRCC __ADDF128
00081a cffb      	RJMP __ADDF129
                 __ADDF127:
00081b 1bea      	SUB  R30,R26
00081c 0bfb      	SBC  R31,R27
00081d 0b68      	SBC  R22,R24
00081e f051      	BREQ __ZERORES
00081f f410      	BRCC __ADDF1210
000820 9400      	COM  R0
000821 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
000822 2366      	TST  R22
000823 f392      	BRMI __ADDF129
000824 0fee      	LSL  R30
000825 1fff      	ROL  R31
000826 1f66      	ROL  R22
000827 957a      	DEC  R23
000828 f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
000829 27ee      	CLR  R30
00082a 27ff      	CLR  R31
00082b 2766      	CLR  R22
00082c 2777      	CLR  R23
00082d 915f      	POP  R21
00082e 9508      	RET
                 
                 __MINRES:
00082f efef      	SER  R30
000830 efff      	SER  R31
000831 e76f      	LDI  R22,0x7F
000832 ef7f      	SER  R23
000833 915f      	POP  R21
000834 9508      	RET
                 
                 __MAXRES:
000835 efef      	SER  R30
000836 efff      	SER  R31
000837 e76f      	LDI  R22,0x7F
000838 e77f      	LDI  R23,0x7F
000839 915f      	POP  R21
00083a 9508      	RET
                 
                 __MULF12:
00083b 935f      	PUSH R21
00083c df2a      	RCALL __UNPACK
00083d 3870      	CPI  R23,0x80
00083e f351      	BREQ __ZERORES
00083f 3890      	CPI  R25,0x80
000840 f341      	BREQ __ZERORES
000841 2401      	EOR  R0,R1
000842 9408      	SEC
000843 1f79      	ADC  R23,R25
000844 f423      	BRVC __MULF124
000845 f31c      	BRLT __ZERORES
                 __MULF125:
000846 2000      	TST  R0
000847 f33a      	BRMI __MINRES
000848 cfec      	RJMP __MAXRES
                 __MULF124:
000849 920f      	PUSH R0
00084a 931f      	PUSH R17
00084b 932f      	PUSH R18
00084c 933f      	PUSH R19
00084d 934f      	PUSH R20
00084e 2711      	CLR  R17
00084f 2722      	CLR  R18
000850 2799      	CLR  R25
000851 9f68      	MUL  R22,R24
000852 01a0      	MOVW R20,R0
000853 9f8f      	MUL  R24,R31
000854 2d30      	MOV  R19,R0
000855 0d41      	ADD  R20,R1
000856 1f59      	ADC  R21,R25
000857 9f6b      	MUL  R22,R27
000858 0d30      	ADD  R19,R0
000859 1d41      	ADC  R20,R1
00085a 1f59      	ADC  R21,R25
00085b 9f8e      	MUL  R24,R30
00085c d027      	RCALL __MULF126
00085d 9fbf      	MUL  R27,R31
00085e d025      	RCALL __MULF126
00085f 9f6a      	MUL  R22,R26
000860 d023      	RCALL __MULF126
000861 9fbe      	MUL  R27,R30
000862 d01d      	RCALL __MULF127
000863 9faf      	MUL  R26,R31
000864 d01b      	RCALL __MULF127
000865 9fae      	MUL  R26,R30
000866 0d11      	ADD  R17,R1
000867 1f29      	ADC  R18,R25
000868 1f39      	ADC  R19,R25
000869 1f49      	ADC  R20,R25
00086a 1f59      	ADC  R21,R25
00086b 2fe3      	MOV  R30,R19
00086c 2ff4      	MOV  R31,R20
00086d 2f65      	MOV  R22,R21
00086e 2f52      	MOV  R21,R18
00086f 914f      	POP  R20
000870 913f      	POP  R19
000871 912f      	POP  R18
000872 911f      	POP  R17
000873 900f      	POP  R0
000874 2366      	TST  R22
000875 f02a      	BRMI __MULF122
000876 0f55      	LSL  R21
000877 1fee      	ROL  R30
000878 1fff      	ROL  R31
000879 1f66      	ROL  R22
00087a c002      	RJMP __MULF123
                 __MULF122:
00087b 9573      	INC  R23
00087c f24b      	BRVS __MULF125
                 __MULF123:
00087d decd      	RCALL __ROUND_REPACK
00087e 915f      	POP  R21
00087f 9508      	RET
                 
                 __MULF127:
000880 0d10      	ADD  R17,R0
000881 1d21      	ADC  R18,R1
000882 1f39      	ADC  R19,R25
000883 c002      	RJMP __MULF128
                 __MULF126:
000884 0d20      	ADD  R18,R0
000885 1d31      	ADC  R19,R1
                 __MULF128:
000886 1f49      	ADC  R20,R25
000887 1f59      	ADC  R21,R25
000888 9508      	RET
                 
                 __DIVF21:
000889 935f      	PUSH R21
00088a dedc      	RCALL __UNPACK
00088b 3870      	CPI  R23,0x80
00088c f421      	BRNE __DIVF210
00088d 2011      	TST  R1
                 __DIVF211:
00088e f40a      	BRPL __DIVF219
00088f cf9f      	RJMP __MINRES
                 __DIVF219:
000890 cfa4      	RJMP __MAXRES
                 __DIVF210:
000891 3890      	CPI  R25,0x80
000892 f409      	BRNE __DIVF218
                 __DIVF217:
000893 cf95      	RJMP __ZERORES
                 __DIVF218:
000894 2401      	EOR  R0,R1
000895 9408      	SEC
000896 0b97      	SBC  R25,R23
000897 f41b      	BRVC __DIVF216
000898 f3d4      	BRLT __DIVF217
000899 2000      	TST  R0
00089a cff3      	RJMP __DIVF211
                 __DIVF216:
00089b 2f79      	MOV  R23,R25
00089c 931f      	PUSH R17
00089d 932f      	PUSH R18
00089e 933f      	PUSH R19
00089f 934f      	PUSH R20
0008a0 2411      	CLR  R1
0008a1 2711      	CLR  R17
0008a2 2722      	CLR  R18
0008a3 2733      	CLR  R19
0008a4 2744      	CLR  R20
0008a5 2755      	CLR  R21
0008a6 e290      	LDI  R25,32
                 __DIVF212:
0008a7 17ae      	CP   R26,R30
0008a8 07bf      	CPC  R27,R31
0008a9 0786      	CPC  R24,R22
0008aa 0741      	CPC  R20,R17
0008ab f030      	BRLO __DIVF213
0008ac 1bae      	SUB  R26,R30
0008ad 0bbf      	SBC  R27,R31
0008ae 0b86      	SBC  R24,R22
0008af 0b41      	SBC  R20,R17
0008b0 9408      	SEC
0008b1 c001      	RJMP __DIVF214
                 __DIVF213:
0008b2 9488      	CLC
                 __DIVF214:
0008b3 1f55      	ROL  R21
0008b4 1f22      	ROL  R18
0008b5 1f33      	ROL  R19
0008b6 1c11      	ROL  R1
0008b7 1faa      	ROL  R26
0008b8 1fbb      	ROL  R27
0008b9 1f88      	ROL  R24
0008ba 1f44      	ROL  R20
0008bb 959a      	DEC  R25
0008bc f751      	BRNE __DIVF212
0008bd 01f9      	MOVW R30,R18
0008be 2d61      	MOV  R22,R1
0008bf 914f      	POP  R20
0008c0 913f      	POP  R19
0008c1 912f      	POP  R18
0008c2 911f      	POP  R17
0008c3 2366      	TST  R22
0008c4 f032      	BRMI __DIVF215
0008c5 0f55      	LSL  R21
0008c6 1fee      	ROL  R30
0008c7 1fff      	ROL  R31
0008c8 1f66      	ROL  R22
0008c9 957a      	DEC  R23
0008ca f243      	BRVS __DIVF217
                 __DIVF215:
0008cb de7f      	RCALL __ROUND_REPACK
0008cc 915f      	POP  R21
0008cd 9508      	RET
                 
                 __CMPF12:
0008ce 2399      	TST  R25
0008cf f09a      	BRMI __CMPF120
0008d0 2377      	TST  R23
0008d1 f042      	BRMI __CMPF121
0008d2 1797      	CP   R25,R23
0008d3 f048      	BRLO __CMPF122
0008d4 f429      	BRNE __CMPF121
0008d5 17ae      	CP   R26,R30
0008d6 07bf      	CPC  R27,R31
0008d7 0786      	CPC  R24,R22
0008d8 f020      	BRLO __CMPF122
0008d9 f031      	BREQ __CMPF123
                 __CMPF121:
0008da 9498      	CLZ
0008db 9488      	CLC
0008dc 9508      	RET
                 __CMPF122:
0008dd 9498      	CLZ
0008de 9408      	SEC
0008df 9508      	RET
                 __CMPF123:
0008e0 9418      	SEZ
0008e1 9488      	CLC
0008e2 9508      	RET
                 __CMPF120:
0008e3 2377      	TST  R23
0008e4 f7c2      	BRPL __CMPF122
0008e5 1797      	CP   R25,R23
0008e6 f398      	BRLO __CMPF121
0008e7 f7a9      	BRNE __CMPF122
0008e8 17ea      	CP   R30,R26
0008e9 07fb      	CPC  R31,R27
0008ea 0768      	CPC  R22,R24
0008eb f388      	BRLO __CMPF122
0008ec f399      	BREQ __CMPF123
0008ed cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
0008ee 2400      	CLR  R0
0008ef 0daf      	ADD  R26,R15
0008f0 1db0      	ADC  R27,R0
0008f1 9508      	RET
                 
                 __ANEGW1:
0008f2 95f1      	NEG  R31
0008f3 95e1      	NEG  R30
0008f4 40f0      	SBCI R31,0
0008f5 9508      	RET
                 
                 __ANEGD1:
0008f6 95f0      	COM  R31
0008f7 9560      	COM  R22
0008f8 9570      	COM  R23
0008f9 95e1      	NEG  R30
0008fa 4fff      	SBCI R31,-1
0008fb 4f6f      	SBCI R22,-1
0008fc 4f7f      	SBCI R23,-1
0008fd 9508      	RET
                 
                 __CBD1:
0008fe 2ffe      	MOV  R31,R30
0008ff 0fff      	ADD  R31,R31
000900 0bff      	SBC  R31,R31
000901 2f6f      	MOV  R22,R31
000902 2f7f      	MOV  R23,R31
000903 9508      	RET
                 
                 __CWD1:
000904 2f6f      	MOV  R22,R31
000905 0f66      	ADD  R22,R22
000906 0b66      	SBC  R22,R22
000907 2f76      	MOV  R23,R22
000908 9508      	RET
                 
                 __LNEGB1:
000909 23ee      	TST  R30
00090a e0e1      	LDI  R30,1
00090b f009      	BREQ __LNEGB1F
00090c 27ee      	CLR  R30
                 __LNEGB1F:
00090d 9508      	RET
                 
                 __DIVB21U:
00090e 2400      	CLR  R0
00090f e098      	LDI  R25,8
                 __DIVB21U1:
000910 0faa      	LSL  R26
000911 1c00      	ROL  R0
000912 1a0e      	SUB  R0,R30
000913 f410      	BRCC __DIVB21U2
000914 0e0e      	ADD  R0,R30
000915 c001      	RJMP __DIVB21U3
                 __DIVB21U2:
000916 60a1      	SBR  R26,1
                 __DIVB21U3:
000917 959a      	DEC  R25
000918 f7b9      	BRNE __DIVB21U1
000919 2fea      	MOV  R30,R26
00091a 2da0      	MOV  R26,R0
00091b 9508      	RET
                 
                 __DIVB21:
00091c d043      	RCALL __CHKSIGNB
00091d dff0      	RCALL __DIVB21U
00091e f40e      	BRTC __DIVB211
00091f 95e1      	NEG  R30
                 __DIVB211:
000920 9508      	RET
                 
                 __DIVD21U:
000921 933f      	PUSH R19
000922 934f      	PUSH R20
000923 935f      	PUSH R21
000924 2400      	CLR  R0
000925 2411      	CLR  R1
000926 2744      	CLR  R20
000927 2755      	CLR  R21
000928 e230      	LDI  R19,32
                 __DIVD21U1:
000929 0faa      	LSL  R26
00092a 1fbb      	ROL  R27
00092b 1f88      	ROL  R24
00092c 1f99      	ROL  R25
00092d 1c00      	ROL  R0
00092e 1c11      	ROL  R1
00092f 1f44      	ROL  R20
000930 1f55      	ROL  R21
000931 1a0e      	SUB  R0,R30
000932 0a1f      	SBC  R1,R31
000933 0b46      	SBC  R20,R22
000934 0b57      	SBC  R21,R23
000935 f428      	BRCC __DIVD21U2
000936 0e0e      	ADD  R0,R30
000937 1e1f      	ADC  R1,R31
000938 1f46      	ADC  R20,R22
000939 1f57      	ADC  R21,R23
00093a c001      	RJMP __DIVD21U3
                 __DIVD21U2:
00093b 60a1      	SBR  R26,1
                 __DIVD21U3:
00093c 953a      	DEC  R19
00093d f759      	BRNE __DIVD21U1
00093e 01fd      	MOVW R30,R26
00093f 01bc      	MOVW R22,R24
000940 01d0      	MOVW R26,R0
000941 01ca      	MOVW R24,R20
000942 915f      	POP  R21
000943 914f      	POP  R20
000944 913f      	POP  R19
000945 9508      	RET
                 
                 __MODB21:
000946 94e8      	CLT
000947 ffa7      	SBRS R26,7
000948 c002      	RJMP __MODB211
000949 95a1      	NEG  R26
00094a 9468      	SET
                 __MODB211:
00094b fde7      	SBRC R30,7
00094c 95e1      	NEG  R30
00094d dfc0      	RCALL __DIVB21U
00094e 2fea      	MOV  R30,R26
00094f f40e      	BRTC __MODB212
000950 95e1      	NEG  R30
                 __MODB212:
000951 9508      	RET
                 
                 __MANDW12:
000952 94e8      	CLT
000953 fff7      	SBRS R31,7
000954 c002      	RJMP __MANDW121
000955 df9c      	RCALL __ANEGW1
000956 9468      	SET
                 __MANDW121:
000957 23ea      	AND  R30,R26
000958 23fb      	AND  R31,R27
000959 f40e      	BRTC __MANDW122
00095a df97      	RCALL __ANEGW1
                 __MANDW122:
00095b 9508      	RET
                 
                 __MODD21U:
00095c dfc4      	RCALL __DIVD21U
00095d 01fd      	MOVW R30,R26
00095e 01bc      	MOVW R22,R24
00095f 9508      	RET
                 
                 __CHKSIGNB:
000960 94e8      	CLT
000961 ffe7      	SBRS R30,7
000962 c002      	RJMP __CHKSB1
000963 95e1      	NEG  R30
000964 9468      	SET
                 __CHKSB1:
000965 ffa7      	SBRS R26,7
000966 c004      	RJMP __CHKSB2
000967 95a1      	NEG  R26
000968 f800      	BLD  R0,0
000969 9403      	INC  R0
00096a fa00      	BST  R0,0
                 __CHKSB2:
00096b 9508      	RET
                 
                 __GETW1P:
00096c 91ed      	LD   R30,X+
00096d 91fc      	LD   R31,X
00096e 9711      	SBIW R26,1
00096f 9508      	RET
                 
                 __GETD1P:
000970 91ed      	LD   R30,X+
000971 91fd      	LD   R31,X+
000972 916d      	LD   R22,X+
000973 917c      	LD   R23,X
000974 9713      	SBIW R26,3
000975 9508      	RET
                 
                 __GETD1S0:
000976 81e8      	LD   R30,Y
000977 81f9      	LDD  R31,Y+1
000978 816a      	LDD  R22,Y+2
000979 817b      	LDD  R23,Y+3
00097a 9508      	RET
                 
                 __GETD2S0:
00097b 81a8      	LD   R26,Y
00097c 81b9      	LDD  R27,Y+1
00097d 818a      	LDD  R24,Y+2
00097e 819b      	LDD  R25,Y+3
00097f 9508      	RET
                 
                 __PUTD1S0:
000980 83e8      	ST   Y,R30
000981 83f9      	STD  Y+1,R31
000982 836a      	STD  Y+2,R22
000983 837b      	STD  Y+3,R23
000984 9508      	RET
                 
                 __PUTPARD1:
000985 937a      	ST   -Y,R23
000986 936a      	ST   -Y,R22
000987 93fa      	ST   -Y,R31
000988 93ea      	ST   -Y,R30
000989 9508      	RET
                 
                 __PUTPARD2:
00098a 939a      	ST   -Y,R25
00098b 938a      	ST   -Y,R24
00098c 93ba      	ST   -Y,R27
00098d 93aa      	ST   -Y,R26
00098e 9508      	RET
                 
                 __SWAPD12:
00098f 2e18      	MOV  R1,R24
000990 2f86      	MOV  R24,R22
000991 2d61      	MOV  R22,R1
000992 2e19      	MOV  R1,R25
000993 2f97      	MOV  R25,R23
000994 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
000995 2e1b      	MOV  R1,R27
000996 2fbf      	MOV  R27,R31
000997 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
000998 2e1a      	MOV  R1,R26
000999 2fae      	MOV  R26,R30
00099a 2de1      	MOV  R30,R1
00099b 9508      	RET
                 
                 __CPD10:
00099c 9730      	SBIW R30,0
00099d 4060      	SBCI R22,0
00099e 4070      	SBCI R23,0
00099f 9508      	RET
                 
                 __SAVELOCR6:
0009a0 935a      	ST   -Y,R21
                 __SAVELOCR5:
0009a1 934a      	ST   -Y,R20
                 __SAVELOCR4:
0009a2 933a      	ST   -Y,R19
                 __SAVELOCR3:
0009a3 932a      	ST   -Y,R18
                 __SAVELOCR2:
0009a4 931a      	ST   -Y,R17
0009a5 930a      	ST   -Y,R16
0009a6 9508      	RET
                 
                 __LOADLOCR6:
0009a7 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0009a8 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0009a9 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0009aa 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0009ab 8119      	LDD  R17,Y+1
0009ac 8108      	LD   R16,Y
0009ad 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :  60 r1 :  34 r2 :   0 r3 :   0 r4 :   4 r5 :   4 r6 :   0 r7 :   2 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  55 r17:  69 r18:  56 r19:  41 r20:  58 r21:  96 r22: 107 r23:  93 
r24:  72 r25:  59 r26: 227 r27: 105 r28:  34 r29:   1 r30: 402 r31: 151 
x  :  41 y  : 386 z  :  25 
Registers used: 25 out of 35 (71.4%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  22 add   :  15 
adiw  :  36 and   :   7 andi  :   8 asr   :   0 bclr  :   0 bld   :   3 
brbc  :   0 brbs  :   0 brcc  :   8 brcs  :   1 break :   0 breq  :  53 
brge  :   3 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  27 
brlt  :   2 brmi  :  11 brne  :  62 brpl  :   9 brsh  :   6 brtc  :   5 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   0 bst   :   3 call  : 171 
cbi   :   5 cbr   :   1 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  48 cls   :   0 clt   :   6 clv   :   0 clz   :   2 com   :   8 
cp    :  17 cpc   :  21 cpi   :  88 cpse  :   0 dec   :  17 des   :   0 
eor   :   7 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   3 ijmp  :   0 
in    :   3 inc   :   5 jmp   :  24 ld    :  51 ldd   : 198 ldi   : 226 
lds   :   0 lpm   :  14 lsl   :  14 lsr   :   3 mov   :  89 movw  :  54 
mul   :  11 muls  :   0 mulsu :   0 neg   :  11 nop   :   0 or    :   1 
ori   :   9 out   :  11 pop   :  22 push  :  22 rcall :  90 ret   :  92 
reti  :   0 rjmp  : 150 rol   :  32 ror   :  15 sbc   :  11 sbci  :  25 
sbi   :   5 sbic  :   4 sbis  :   4 sbiw  :  29 sbr   :   4 sbrc  :   6 
sbrs  :  21 sec   :   5 seh   :   0 sei   :   0 sen   :   0 ser   :  10 
ses   :   0 set   :   5 sev   :   0 sez   :   1 sleep :   0 spm   :   0 
st    :  97 std   :  94 sts   :   2 sub   :   6 subi  :  52 swap  :   1 
tst   :  25 wdr   :   1 
Instructions used: 80 out of 116 (69.0%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x00135c   4876     80   4956   32768  15.1%
[.dseg] 0x000060 0x000268      0      8      8    2048   0.4%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 7 warnings
