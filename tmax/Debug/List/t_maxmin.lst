
AVRASM ver. 2.1.30  C:\Users\Bardia\Desktop\17mordad\3\Debug\List\t_maxmin.asm Thu Aug 07 17:06:14 2025

C:\Users\Bardia\Desktop\17mordad\3\Debug\List\t_maxmin.asm(1088): warning: Register r5 already defined by the .DEF directive
C:\Users\Bardia\Desktop\17mordad\3\Debug\List\t_maxmin.asm(1089): warning: Register r4 already defined by the .DEF directive
C:\Users\Bardia\Desktop\17mordad\3\Debug\List\t_maxmin.asm(1090): warning: Register r7 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32
                 ;Program type           : Application
                 ;Clock frequency        : 1.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : float, width, precision
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF __lcd_x=R5
                 	.DEF __lcd_y=R4
                 	.DEF __lcd_maxx=R7
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 005a 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _0x6:
00002a 0001
00002b 0001
00002c 0001
00002d 0000      	.DB  0x1,0x0,0x1,0x0,0x1,0x0,0x0,0x0
00002e 0000      	.DB  0x0,0x0
                 _0x0:
00002f 6d54
000030 7861
000031 253d
000032 6432      	.DB  0x54,0x6D,0x61,0x78,0x3D,0x25,0x32,0x64
000033 5420
000034 696d
000035 3d6e
000036 3225      	.DB  0x20,0x54,0x6D,0x69,0x6E,0x3D,0x25,0x32
000037 0064
000038 6146
000039 3a6e
00003a 4e4f      	.DB  0x64,0x0,0x46,0x61,0x6E,0x3A,0x4F,0x4E
00003b 2020
00003c 6554
00003d 706d
00003e 253a      	.DB  0x20,0x20,0x54,0x65,0x6D,0x70,0x3A,0x25
00003f 6432
000040 4600
000041 6e61
000042 4f3a      	.DB  0x32,0x64,0x0,0x46,0x61,0x6E,0x3A,0x4F
000043 4646
000044 5420
000045 6d65
000046 3a70      	.DB  0x46,0x46,0x20,0x54,0x65,0x6D,0x70,0x3A
000047 3225
000048 0064      	.DB  0x25,0x32,0x64,0x0
                 _0x2000003:
000049 c080      	.DB  0x80,0xC0
                 _0x2020000:
00004a 4e2d
00004b 4e41
C:\Users\Bardia\Desktop\17mordad\3\Debug\List\t_maxmin.asm(1135): warning: .cseg .db misalignment - padding zero byte
00004c 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 _0x20A0060:
C:\Users\Bardia\Desktop\17mordad\3\Debug\List\t_maxmin.asm(1137): warning: .cseg .db misalignment - padding zero byte
00004d 0001      	.DB  0x1
                 _0x20A0000:
00004e 4e2d
00004f 4e41
000050 4900
000051 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Users\Bardia\Desktop\17mordad\3\Debug\List\t_maxmin.asm(1140): warning: .cseg .db misalignment - padding zero byte
000052 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
000053 0002      	.DW  0x02
000054 0260      	.DW  __base_y_G100
000055 0092      	.DW  _0x2000003*2
                 
000056 0001      	.DW  0x01
000057 0264      	.DW  __seed_G105
000058 009a      	.DW  _0x20A0060*2
                 
                 _0xFFFFFFFF:
000059 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00005a 94f8      	CLI
00005b 27ee      	CLR  R30
00005c bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00005d e0f1      	LDI  R31,1
00005e bffb      	OUT  GICR,R31
00005f bfeb      	OUT  GICR,R30
000060 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000061 e08d      	LDI  R24,(14-2)+1
000062 e0a2      	LDI  R26,2
000063 27bb      	CLR  R27
                 __CLEAR_REG:
000064 93ed      	ST   X+,R30
000065 958a      	DEC  R24
000066 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000067 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000068 e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000069 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
00006a 93ed      	ST   X+,R30
00006b 9701      	SBIW R24,1
00006c f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00006d eae6      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00006e e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00006f 9185      	LPM  R24,Z+
000070 9195      	LPM  R25,Z+
000071 9700      	SBIW R24,0
000072 f061      	BREQ __GLOBAL_INI_END
000073 91a5      	LPM  R26,Z+
000074 91b5      	LPM  R27,Z+
000075 9005      	LPM  R0,Z+
000076 9015      	LPM  R1,Z+
000077 01bf      	MOVW R22,R30
000078 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000079 9005      	LPM  R0,Z+
00007a 920d      	ST   X+,R0
00007b 9701      	SBIW R24,1
00007c f7e1      	BRNE __GLOBAL_INI_LOOP
00007d 01fb      	MOVW R30,R22
00007e cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00007f e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000080 bfed      	OUT  SPL,R30
000081 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000082 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000083 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000084 e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000085 940c 0095 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;#include <mega32.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include <alcd.h>
                 ;#include <stdio.h>
                 ;#define ADC_VREF_TYPE ((1<<REFS1) | (1<<REFS0) | (0<<ADLAR))
                 ;
                 ;unsigned int read_adc(unsigned char adc_input)
                 ; 0000 0008 {
                 
                 	.CSEG
                 _read_adc:
                 ; .FSTART _read_adc
                 ; 0000 0009 ADMUX=adc_input | ADC_VREF_TYPE;
000087 93aa      	ST   -Y,R26
                 ;	adc_input -> Y+0
000088 81e8      	LD   R30,Y
000089 6ce0      	ORI  R30,LOW(0xC0)
00008a b9e7      	OUT  0x7,R30
                 ; 0000 000A // Delay needed for the stabilization of the ADC input voltage
                 ; 0000 000B delay_us(10);
                +
00008b e083     +LDI R24 , LOW ( 3 )
                +__DELAY_USB_LOOP :
00008c 958a     +DEC R24
00008d f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 3
                 ; 0000 000C // Start the AD conversion
                 ; 0000 000D ADCSRA|=(1<<ADSC);
00008e 9a36      	SBI  0x6,6
                 ; 0000 000E // Wait for the AD conversion to complete
                 ; 0000 000F while ((ADCSRA & (1<<ADIF))==0);
                 _0x3:
00008f 9b34      	SBIS 0x6,4
000090 cffe      	RJMP _0x3
                 ; 0000 0010 ADCSRA|=(1<<ADIF);
000091 9a34      	SBI  0x6,4
                 ; 0000 0011 return ADCW;
000092 b1e4      	IN   R30,0x4
000093 b1f5      	IN   R31,0x4+1
000094 c18e      	RJMP _0x20C0006
                 ; 0000 0012 }
                 ; .FEND
                 ;
                 ;void main(void)
                 ; 0000 0015 {
                 _main:
                 ; .FSTART _main
                 ; 0000 0016     int t_max = 30;
                 ; 0000 0017     int t_min = 20;
                 ; 0000 0018     int current_temp = 0;    // Current temperature reading
                 ; 0000 0019     int fan_state = 0;       // Fan state: 0 = OFF, 1 = ON
                 ; 0000 001A     int edit_mode = 0;       // 0 = edit T_max, 1 = edit T_min
                 ; 0000 001B     //int cursor_pos = 0;
                 ; 0000 001C     // Button state variables
                 ; 0000 001D     int last_btn0 = 1, last_btn1 = 1, last_btn2 = 1;
                 ; 0000 001E     char buffer[17];
                 ; 0000 001F 
                 ; 0000 0020 DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
000095 976b      	SBIW R28,27
000096 e08a      	LDI  R24,10
000097 e1a1      	LDI  R26,LOW(17)
000098 e0b0      	LDI  R27,HIGH(17)
000099 e5e4      	LDI  R30,LOW(_0x6*2)
00009a e0f0      	LDI  R31,HIGH(_0x6*2)
00009b 940e 09fd 	CALL __INITLOCB
                 ;	t_max -> R16,R17
                 ;	t_min -> R18,R19
                 ;	current_temp -> R20,R21
                 ;	fan_state -> Y+25
                 ;	edit_mode -> Y+23
                 ;	last_btn0 -> Y+21
                 ;	last_btn1 -> Y+19
                 ;	last_btn2 -> Y+17
                 ;	buffer -> Y+0
                +
00009d e10e     +LDI R16 , LOW ( 30 )
00009e e010     +LDI R17 , HIGH ( 30 )
                 	__GETWRN 16,17,30
                +
00009f e124     +LDI R18 , LOW ( 20 )
0000a0 e030     +LDI R19 , HIGH ( 20 )
                 	__GETWRN 18,19,20
                +
0000a1 e040     +LDI R20 , LOW ( 0 )
0000a2 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
0000a3 e0e0      	LDI  R30,LOW(0)
0000a4 bbea      	OUT  0x1A,R30
                 ; 0000 0021 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0022 PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
0000a5 bbeb      	OUT  0x1B,R30
                 ; 0000 0023 
                 ; 0000 0024 // Port B initialization
                 ; 0000 0025 // Function: Bit7=Out Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0026 DDRB=(1<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
0000a6 e8e0      	LDI  R30,LOW(128)
0000a7 bbe7      	OUT  0x17,R30
                 ; 0000 0027 // State: Bit7=0 Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0028 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
0000a8 e0e0      	LDI  R30,LOW(0)
0000a9 bbe8      	OUT  0x18,R30
                 ; 0000 0029 
                 ; 0000 002A // Port C initialization
                 ; 0000 002B // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 002C DDRC=(0<<DDC7) | (0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
0000aa bbe4      	OUT  0x14,R30
                 ; 0000 002D // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 002E PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
0000ab bbe5      	OUT  0x15,R30
                 ; 0000 002F 
                 ; 0000 0030 // Port D initialization
                 ; 0000 0031 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0032 DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
0000ac bbe1      	OUT  0x11,R30
                 ; 0000 0033 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0034 PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
0000ad bbe2      	OUT  0x12,R30
                 ; 0000 0035 
                 ; 0000 0036 // Timer/Counter 0 initialization
                 ; 0000 0037 // Clock source: System Clock
                 ; 0000 0038 // Clock value: Timer 0 Stopped
                 ; 0000 0039 // Mode: Normal top=0xFF
                 ; 0000 003A // OC0 output: Disconnected
                 ; 0000 003B TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (0<<CS01) | (0<<CS00);
0000ae bfe3      	OUT  0x33,R30
                 ; 0000 003C TCNT0=0x00;
0000af bfe2      	OUT  0x32,R30
                 ; 0000 003D OCR0=0x00;
0000b0 bfec      	OUT  0x3C,R30
                 ; 0000 003E 
                 ; 0000 003F TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
0000b1 bdef      	OUT  0x2F,R30
                 ; 0000 0040 TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
0000b2 bdee      	OUT  0x2E,R30
                 ; 0000 0041 TCNT1H=0x00;
0000b3 bded      	OUT  0x2D,R30
                 ; 0000 0042 TCNT1L=0x00;
0000b4 bdec      	OUT  0x2C,R30
                 ; 0000 0043 ICR1H=0x00;
0000b5 bde7      	OUT  0x27,R30
                 ; 0000 0044 ICR1L=0x00;
0000b6 bde6      	OUT  0x26,R30
                 ; 0000 0045 OCR1AH=0x00;
0000b7 bdeb      	OUT  0x2B,R30
                 ; 0000 0046 OCR1AL=0x00;
0000b8 bdea      	OUT  0x2A,R30
                 ; 0000 0047 OCR1BH=0x00;
0000b9 bde9      	OUT  0x29,R30
                 ; 0000 0048 OCR1BL=0x00;
0000ba bde8      	OUT  0x28,R30
                 ; 0000 0049 
                 ; 0000 004A ASSR=0<<AS2;
0000bb bde2      	OUT  0x22,R30
                 ; 0000 004B TCCR2=(0<<PWM2) | (0<<COM21) | (0<<COM20) | (0<<CTC2) | (0<<CS22) | (0<<CS21) | (0<<CS20);
0000bc bde5      	OUT  0x25,R30
                 ; 0000 004C TCNT2=0x00;
0000bd bde4      	OUT  0x24,R30
                 ; 0000 004D OCR2=0x00;
0000be bde3      	OUT  0x23,R30
                 ; 0000 004E 
                 ; 0000 004F // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 0050 TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (0<<TOIE0);
0000bf bfe9      	OUT  0x39,R30
                 ; 0000 0051 
                 ; 0000 0052 MCUCR=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
0000c0 bfe5      	OUT  0x35,R30
                 ; 0000 0053 MCUCSR=(0<<ISC2);
0000c1 bfe4      	OUT  0x34,R30
                 ; 0000 0054 
                 ; 0000 0055 UCSRB=(0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (0<<RXEN) | (0<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
0000c2 b9ea      	OUT  0xA,R30
                 ; 0000 0056 
                 ; 0000 0057 ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
0000c3 e8e0      	LDI  R30,LOW(128)
0000c4 b9e8      	OUT  0x8,R30
                 ; 0000 0058 
                 ; 0000 0059 ADMUX=ADC_VREF_TYPE;
0000c5 ece0      	LDI  R30,LOW(192)
0000c6 b9e7      	OUT  0x7,R30
                 ; 0000 005A ADCSRA=(1<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (1<<ADPS1) | (1<<ADPS0);
0000c7 e8e3      	LDI  R30,LOW(131)
0000c8 b9e6      	OUT  0x6,R30
                 ; 0000 005B SFIOR=(0<<ADTS2) | (0<<ADTS1) | (0<<ADTS0);
0000c9 e0e0      	LDI  R30,LOW(0)
0000ca bfe0      	OUT  0x30,R30
                 ; 0000 005C 
                 ; 0000 005D SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
0000cb b9ed      	OUT  0xD,R30
                 ; 0000 005E 
                 ; 0000 005F TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
0000cc bfe6      	OUT  0x36,R30
                 ; 0000 0060 
                 ; 0000 0061 lcd_init(16);
0000cd e1a0      	LDI  R26,LOW(16)
0000ce d129      	RCALL _lcd_init
                 ; 0000 0062 
                 ; 0000 0063 while (1)
                 _0x7:
                 ; 0000 0064       {
                 ; 0000 0065 
                 ; 0000 0066          unsigned int adc_result = read_adc(3);
                 ; 0000 0067          current_temp = (int)(adc_result * 2.56 / 1024.0 * 100);
0000cf 9722      	SBIW R28,2
                 ;	fan_state -> Y+27
                 ;	edit_mode -> Y+25
                 ;	last_btn0 -> Y+23
                 ;	last_btn1 -> Y+21
                 ;	last_btn2 -> Y+19
                 ;	buffer -> Y+2
                 ;	adc_result -> Y+0
0000d0 e0a3      	LDI  R26,LOW(3)
0000d1 dfb5      	RCALL _read_adc
0000d2 83e8      	ST   Y,R30
0000d3 83f9      	STD  Y+1,R31
0000d4 2766      	CLR  R22
0000d5 2777      	CLR  R23
0000d6 940e 0813 	CALL __CDF1
                +
0000d8 e0aa     +LDI R26 , LOW ( 0x4023D70A )
0000d9 edb7     +LDI R27 , HIGH ( 0x4023D70A )
0000da e283     +LDI R24 , BYTE3 ( 0x4023D70A )
0000db e490     +LDI R25 , BYTE4 ( 0x4023D70A )
                 	__GETD2N 0x4023D70A
0000dc 940e 089d 	CALL __MULF12
0000de 01df      	MOVW R26,R30
0000df 01cb      	MOVW R24,R22
                +
0000e0 e0e0     +LDI R30 , LOW ( 0x44800000 )
0000e1 e0f0     +LDI R31 , HIGH ( 0x44800000 )
0000e2 e860     +LDI R22 , BYTE3 ( 0x44800000 )
0000e3 e474     +LDI R23 , BYTE4 ( 0x44800000 )
                 	__GETD1N 0x44800000
0000e4 940e 08eb 	CALL __DIVF21
                +
0000e6 e0a0     +LDI R26 , LOW ( 0x42C80000 )
0000e7 e0b0     +LDI R27 , HIGH ( 0x42C80000 )
0000e8 ec88     +LDI R24 , BYTE3 ( 0x42C80000 )
0000e9 e492     +LDI R25 , BYTE4 ( 0x42C80000 )
                 	__GETD2N 0x42C80000
0000ea 940e 089d 	CALL __MULF12
0000ec 940e 07dc 	CALL __CFD1
0000ee 01af      	MOVW R20,R30
                 ; 0000 0068 
                 ; 0000 0069         //BUTTON
                 ; 0000 006A        // edit_mode = 0: You're editing T_max
                 ; 0000 006B         //edit_mode = 1: You're editing T_min
                 ; 0000 006C         if (PINC.0 == 0 && last_btn0 == 1)
0000ef 9998      	SBIC 0x13,0
0000f0 c004      	RJMP _0xB
0000f1 89af      	LDD  R26,Y+23
0000f2 8db8      	LDD  R27,Y+23+1
0000f3 9711      	SBIW R26,1
0000f4 f009      	BREQ _0xC
                 _0xB:
0000f5 c00a      	RJMP _0xA
                 _0xC:
                 ; 0000 006D          {
                 ; 0000 006E             edit_mode ^= 1; // Toggle edit target
0000f6 8da9      	LDD  R26,Y+25
0000f7 8dba      	LDD  R27,Y+25+1
0000f8 e0e1      	LDI  R30,LOW(1)
0000f9 e0f0      	LDI  R31,HIGH(1)
0000fa 27ea      	EOR  R30,R26
0000fb 27fb      	EOR  R31,R27
0000fc 8fe9      	STD  Y+25,R30
0000fd 8ffa      	STD  Y+25+1,R31
                 ; 0000 006F             delay_ms(200);
0000fe 940e 068e 	CALL SUBOPT_0x0
                 ; 0000 0070             }
                 ; 0000 0071             last_btn0 = PINC.0;
                 _0xA:
000100 e0e0      	LDI  R30,0
000101 9998      	SBIC 0x13,0
000102 e0e1      	LDI  R30,1
000103 e0f0      	LDI  R31,0
000104 8bef      	STD  Y+23,R30
000105 8ff8      	STD  Y+23+1,R31
                 ; 0000 0072 
                 ; 0000 0073         if (PINC.1 == 0 && last_btn1 == 1)
000106 9999      	SBIC 0x13,1
000107 c004      	RJMP _0xE
000108 89ad      	LDD  R26,Y+21
000109 89be      	LDD  R27,Y+21+1
00010a 9711      	SBIW R26,1
00010b f009      	BREQ _0xF
                 _0xE:
00010c c014      	RJMP _0xD
                 _0xF:
                 ; 0000 0074          {
                 ; 0000 0075             if (edit_mode == 0)
00010d 8de9      	LDD  R30,Y+25
00010e 8dfa      	LDD  R31,Y+25+1
00010f 9730      	SBIW R30,0
000110 f439      	BRNE _0x10
                 ; 0000 0076              {
                 ; 0000 0077                 if (t_max < 50) t_max++;
                +
000111 3302     +CPI R16 , LOW ( 50 )
000112 e0e0     +LDI R30 , HIGH ( 50 )
000113 071e     +CPC R17 , R30
                 	__CPWRN 16,17,50
000114 f414      	BRGE _0x11
                +
000115 5f0f     +SUBI R16 , LOW ( - 1 )
000116 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 ; 0000 0078              }
                 _0x11:
                 ; 0000 0079 
                 ; 0000 007A                  else
000117 c007      	RJMP _0x12
                 _0x10:
                 ; 0000 007B                  {
                 ; 0000 007C                     if (t_min < t_max - 1) t_min++;
000118 01f8      	MOVW R30,R16
000119 9731      	SBIW R30,1
00011a 172e      	CP   R18,R30
00011b 073f      	CPC  R19,R31
00011c f414      	BRGE _0x13
                +
00011d 5f2f     +SUBI R18 , LOW ( - 1 )
00011e 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
                 ; 0000 007D                     }
                 _0x13:
                 _0x12:
                 ; 0000 007E                     delay_ms(200);
00011f 940e 068e 	CALL SUBOPT_0x0
                 ; 0000 007F          }
                 ; 0000 0080         last_btn1 = PINC.1;
                 _0xD:
000121 e0e0      	LDI  R30,0
000122 9999      	SBIC 0x13,1
000123 e0e1      	LDI  R30,1
000124 e0f0      	LDI  R31,0
000125 8bed      	STD  Y+21,R30
000126 8bfe      	STD  Y+21+1,R31
                 ; 0000 0081 
                 ; 0000 0082     if (PINC.2 == 0 && last_btn2 == 1)
000127 999a      	SBIC 0x13,2
000128 c004      	RJMP _0x15
000129 89ab      	LDD  R26,Y+19
00012a 89bc      	LDD  R27,Y+19+1
00012b 9711      	SBIW R26,1
00012c f009      	BREQ _0x16
                 _0x15:
00012d c014      	RJMP _0x14
                 _0x16:
                 ; 0000 0083          {
                 ; 0000 0084                 if (edit_mode == 0)
00012e 8de9      	LDD  R30,Y+25
00012f 8dfa      	LDD  R31,Y+25+1
000130 9730      	SBIW R30,0
000131 f441      	BRNE _0x17
                 ; 0000 0085                  {
                 ; 0000 0086                     if (t_max > t_min + 1) t_max--;
000132 01f9      	MOVW R30,R18
000133 9631      	ADIW R30,1
000134 17e0      	CP   R30,R16
000135 07f1      	CPC  R31,R17
000136 f414      	BRGE _0x18
                +
000137 5001     +SUBI R16 , LOW ( 1 )
000138 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
                 ; 0000 0087                  }
                 _0x18:
                 ; 0000 0088                      else
000139 c006      	RJMP _0x19
                 _0x17:
                 ; 0000 0089                         {
                 ; 0000 008A                              if (t_min > 0) t_min--;
00013a 2400      	CLR  R0
00013b 1602      	CP   R0,R18
00013c 0603      	CPC  R0,R19
00013d f414      	BRGE _0x1A
                +
00013e 5021     +SUBI R18 , LOW ( 1 )
00013f 4030     +SBCI R19 , HIGH ( 1 )
                 	__SUBWRN 18,19,1
                 ; 0000 008B                         }
                 _0x1A:
                 _0x19:
                 ; 0000 008C                             delay_ms(200);
000140 940e 068e 	CALL SUBOPT_0x0
                 ; 0000 008D         }
                 ; 0000 008E                 last_btn2 = PINC.2;
                 _0x14:
000142 e0e0      	LDI  R30,0
000143 999a      	SBIC 0x13,2
000144 e0e1      	LDI  R30,1
000145 e0f0      	LDI  R31,0
000146 8beb      	STD  Y+19,R30
000147 8bfc      	STD  Y+19+1,R31
                 ; 0000 008F 
                 ; 0000 0090     // ----------- FAN CONTROL -----------
                 ; 0000 0091     if (current_temp >= t_max && fan_state == 0)
                +
000148 1740     +CP R20 , R16
000149 0751     +CPC R21 , R17
                 	__CPWRR 20,21,16,17
00014a f024      	BRLT _0x1C
00014b 8dab      	LDD  R26,Y+27
00014c 8dbc      	LDD  R27,Y+27+1
00014d 9710      	SBIW R26,0
00014e f009      	BREQ _0x1D
                 _0x1C:
00014f c006      	RJMP _0x1B
                 _0x1D:
                 ; 0000 0092          {
                 ; 0000 0093             fan_state = 1;
000150 e0e1      	LDI  R30,LOW(1)
000151 e0f0      	LDI  R31,HIGH(1)
000152 8feb      	STD  Y+27,R30
000153 8ffc      	STD  Y+27+1,R31
                 ; 0000 0094             PORTB.7 = 1;
000154 9ac7      	SBI  0x18,7
                 ; 0000 0095          }
                 ; 0000 0096      else if (current_temp <= t_min && fan_state == 1)
000155 c00c      	RJMP _0x20
                 _0x1B:
                +
000156 1724     +CP R18 , R20
000157 0735     +CPC R19 , R21
                 	__CPWRR 18,19,20,21
000158 f024      	BRLT _0x22
000159 8dab      	LDD  R26,Y+27
00015a 8dbc      	LDD  R27,Y+27+1
00015b 9711      	SBIW R26,1
00015c f009      	BREQ _0x23
                 _0x22:
00015d c004      	RJMP _0x21
                 _0x23:
                 ; 0000 0097         {
                 ; 0000 0098             fan_state = 0;
00015e e0e0      	LDI  R30,LOW(0)
00015f 8feb      	STD  Y+27,R30
000160 8fec      	STD  Y+27+1,R30
                 ; 0000 0099             PORTB.7 = 0;
000161 98c7      	CBI  0x18,7
                 ; 0000 009A         }
                 ; 0000 009B 
                 ; 0000 009C     // ----------- LCD DISPLAY -----------
                 ; 0000 009D 
                 ; 0000 009E     lcd_gotoxy(0, 0);
                 _0x21:
                 _0x20:
000162 e0e0      	LDI  R30,LOW(0)
000163 93ea      	ST   -Y,R30
000164 e0a0      	LDI  R26,LOW(0)
000165 d053      	RCALL _lcd_gotoxy
                 ; 0000 009F     sprintf(buffer, "Tmax=%2d Tmin=%2d", t_max, t_min);
000166 940e 0692 	CALL SUBOPT_0x1
                +
000168 e5ee     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
000169 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
00016a 93fa      	ST   -Y,R31
00016b 93ea      	ST   -Y,R30
00016c 01f8      	MOVW R30,R16
00016d 940e 0697 	CALL SUBOPT_0x2
00016f 01f9      	MOVW R30,R18
000170 940e 0697 	CALL SUBOPT_0x2
000172 e088      	LDI  R24,8
000173 940e 054b 	CALL _sprintf
000175 962c      	ADIW R28,12
                 ; 0000 00A0     lcd_puts(buffer);
000176 01de      	MOVW R26,R28
000177 9612      	ADIW R26,2
000178 d06e      	RCALL _lcd_puts
                 ; 0000 00A1 
                 ; 0000 00A2     lcd_gotoxy(0, 1);
000179 e0e0      	LDI  R30,LOW(0)
00017a 93ea      	ST   -Y,R30
00017b e0a1      	LDI  R26,LOW(1)
00017c d03c      	RCALL _lcd_gotoxy
                 ; 0000 00A3     if (fan_state == 1)
00017d 8dab      	LDD  R26,Y+27
00017e 8dbc      	LDD  R27,Y+27+1
00017f 9711      	SBIW R26,1
000180 f429      	BRNE _0x26
                 ; 0000 00A4         {
                 ; 0000 00A5         sprintf(buffer, "Fan:ON  Temp:%2d", current_temp);
000181 940e 0692 	CALL SUBOPT_0x1
                +
000183 e7e0     +LDI R30 , LOW ( 2 * _0x0 + ( 18 ) )
000184 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 18 ) )
                 	__POINTW1FN _0x0,18
000185 c004      	RJMP _0x29
                 ; 0000 00A6         }
                 ; 0000 00A7     else
                 _0x26:
                 ; 0000 00A8         {
                 ; 0000 00A9         sprintf(buffer, "Fan:OFF Temp:%2d", current_temp);
000186 940e 0692 	CALL SUBOPT_0x1
                +
000188 e8e1     +LDI R30 , LOW ( 2 * _0x0 + ( 35 ) )
000189 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 35 ) )
                 	__POINTW1FN _0x0,35
                 _0x29:
00018a 93fa      	ST   -Y,R31
00018b 93ea      	ST   -Y,R30
00018c 01fa      	MOVW R30,R20
00018d 940e 0697 	CALL SUBOPT_0x2
00018f e084      	LDI  R24,4
000190 940e 054b 	CALL _sprintf
000192 9628      	ADIW R28,8
                 ; 0000 00AA         }
                 ; 0000 00AB     lcd_puts(buffer);
000193 01de      	MOVW R26,R28
000194 9612      	ADIW R26,2
000195 d051      	RCALL _lcd_puts
                 ; 0000 00AC 
                 ; 0000 00AD 
                 ; 0000 00AE 
                 ; 0000 00AF     }
000196 9622      	ADIW R28,2
000197 cf37      	RJMP _0x7
                 ; 0000 00B0 
                 ; 0000 00B1 }
                 _0x28:
000198 cfff      	RJMP _0x28
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
                 ; .FSTART __lcd_write_nibble_G100
000199 93aa      	ST   -Y,R26
00019a b3eb      	IN   R30,0x1B
00019b 70ef      	ANDI R30,LOW(0xF)
00019c 2fae      	MOV  R26,R30
00019d 81e8      	LD   R30,Y
00019e 7fe0      	ANDI R30,LOW(0xF0)
00019f 2bea      	OR   R30,R26
0001a0 bbeb      	OUT  0x1B,R30
                +
0001a1 e082     +LDI R24 , LOW ( 2 )
                +__DELAY_USB_LOOP :
0001a2 958a     +DEC R24
0001a3 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 2
0001a4 9ada      	SBI  0x1B,2
                +
0001a5 e082     +LDI R24 , LOW ( 2 )
                +__DELAY_USB_LOOP :
0001a6 958a     +DEC R24
0001a7 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 2
0001a8 98da      	CBI  0x1B,2
                +
0001a9 e082     +LDI R24 , LOW ( 2 )
                +__DELAY_USB_LOOP :
0001aa 958a     +DEC R24
0001ab f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 2
0001ac c076      	RJMP _0x20C0006
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
0001ad 93aa      	ST   -Y,R26
0001ae 81a8      	LD   R26,Y
0001af dfe9      	RCALL __lcd_write_nibble_G100
0001b0 81e8          ld    r30,y
0001b1 95e2          swap  r30
0001b2 83e8          st    y,r30
0001b3 81a8      	LD   R26,Y
0001b4 dfe4      	RCALL __lcd_write_nibble_G100
                +
0001b5 e181     +LDI R24 , LOW ( 17 )
                +__DELAY_USB_LOOP :
0001b6 958a     +DEC R24
0001b7 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 17
0001b8 c06a      	RJMP _0x20C0006
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
0001b9 93aa      	ST   -Y,R26
0001ba 81e8      	LD   R30,Y
0001bb e0f0      	LDI  R31,0
0001bc 5ae0      	SUBI R30,LOW(-__base_y_G100)
0001bd 4ffd      	SBCI R31,HIGH(-__base_y_G100)
0001be 81e0      	LD   R30,Z
0001bf 81a9      	LDD  R26,Y+1
0001c0 0fae      	ADD  R26,R30
0001c1 dfeb      	RCALL __lcd_write_data
0001c2 8059      	LDD  R5,Y+1
0001c3 8048      	LDD  R4,Y+0
0001c4 9622      	ADIW R28,2
0001c5 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
0001c6 e0a2      	LDI  R26,LOW(2)
0001c7 940e 069c 	CALL SUBOPT_0x3
0001c9 e0ac      	LDI  R26,LOW(12)
0001ca dfe2      	RCALL __lcd_write_data
0001cb e0a1      	LDI  R26,LOW(1)
0001cc 940e 069c 	CALL SUBOPT_0x3
0001ce e0e0      	LDI  R30,LOW(0)
0001cf 2e4e      	MOV  R4,R30
0001d0 2e5e      	MOV  R5,R30
0001d1 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
0001d2 93aa      	ST   -Y,R26
0001d3 81a8      	LD   R26,Y
0001d4 30aa      	CPI  R26,LOW(0xA)
0001d5 f011      	BREQ _0x2000005
0001d6 1457      	CP   R5,R7
0001d7 f048      	BRLO _0x2000004
                 _0x2000005:
0001d8 e0e0      	LDI  R30,LOW(0)
0001d9 93ea      	ST   -Y,R30
0001da 9443      	INC  R4
0001db 2da4      	MOV  R26,R4
0001dc dfdc      	RCALL _lcd_gotoxy
0001dd 81a8      	LD   R26,Y
0001de 30aa      	CPI  R26,LOW(0xA)
0001df f409      	BRNE _0x2000007
0001e0 c042      	RJMP _0x20C0006
                 _0x2000007:
                 _0x2000004:
0001e1 9453      	INC  R5
0001e2 9ad8      	SBI  0x1B,0
0001e3 81a8      	LD   R26,Y
0001e4 dfc8      	RCALL __lcd_write_data
0001e5 98d8      	CBI  0x1B,0
0001e6 c03c      	RJMP _0x20C0006
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
0001e7 93ba      	ST   -Y,R27
0001e8 93aa      	ST   -Y,R26
0001e9 931a      	ST   -Y,R17
                 _0x2000008:
0001ea 81a9      	LDD  R26,Y+1
0001eb 81ba      	LDD  R27,Y+1+1
0001ec 91ed      	LD   R30,X+
0001ed 83a9      	STD  Y+1,R26
0001ee 83ba      	STD  Y+1+1,R27
0001ef 2f1e      	MOV  R17,R30
0001f0 30e0      	CPI  R30,0
0001f1 f019      	BREQ _0x200000A
0001f2 2fa1      	MOV  R26,R17
0001f3 dfde      	RCALL _lcd_putchar
0001f4 cff5      	RJMP _0x2000008
                 _0x200000A:
0001f5 8118      	LDD  R17,Y+0
0001f6 9623      	ADIW R28,3
0001f7 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
0001f8 93aa      	ST   -Y,R26
0001f9 b3ea      	IN   R30,0x1A
0001fa 6fe0      	ORI  R30,LOW(0xF0)
0001fb bbea      	OUT  0x1A,R30
0001fc 9ad2      	SBI  0x1A,2
0001fd 9ad0      	SBI  0x1A,0
0001fe 9ad1      	SBI  0x1A,1
0001ff 98da      	CBI  0x1B,2
000200 98d8      	CBI  0x1B,0
000201 98d9      	CBI  0x1B,1
000202 8078      	LDD  R7,Y+0
000203 81e8      	LD   R30,Y
000204 58e0      	SUBI R30,-LOW(128)
                +
000205 93e0 0262+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
000207 81e8      	LD   R30,Y
000208 54e0      	SUBI R30,-LOW(192)
                +
000209 93e0 0263+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
00020b e1a4      	LDI  R26,LOW(20)
00020c e0b0      	LDI  R27,0
00020d 940e 079d 	CALL _delay_ms
00020f 940e 06a2 	CALL SUBOPT_0x4
000211 940e 06a2 	CALL SUBOPT_0x4
000213 940e 06a2 	CALL SUBOPT_0x4
000215 e2a0      	LDI  R26,LOW(32)
000216 df82      	RCALL __lcd_write_nibble_G100
                +
000217 e281     +LDI R24 , LOW ( 33 )
                +__DELAY_USB_LOOP :
000218 958a     +DEC R24
000219 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 33
00021a e2a8      	LDI  R26,LOW(40)
00021b df91      	RCALL __lcd_write_data
00021c e0a4      	LDI  R26,LOW(4)
00021d df8f      	RCALL __lcd_write_data
00021e e8a5      	LDI  R26,LOW(133)
00021f df8d      	RCALL __lcd_write_data
000220 e0a6      	LDI  R26,LOW(6)
000221 df8b      	RCALL __lcd_write_data
000222 dfa3      	RCALL _lcd_clear
                 _0x20C0006:
000223 9621      	ADIW R28,1
000224 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G101:
                 ; .FSTART _put_buff_G101
000225 93ba      	ST   -Y,R27
000226 93aa      	ST   -Y,R26
000227 931a      	ST   -Y,R17
000228 930a      	ST   -Y,R16
000229 81aa      	LDD  R26,Y+2
00022a 81bb      	LDD  R27,Y+2+1
00022b 9612      	ADIW R26,2
00022c 940e 09bb 	CALL __GETW1P
00022e 9730      	SBIW R30,0
00022f f129      	BREQ _0x2020010
000230 81aa      	LDD  R26,Y+2
000231 81bb      	LDD  R27,Y+2+1
000232 9614      	ADIW R26,4
000233 940e 09bb 	CALL __GETW1P
000235 018f      	MOVW R16,R30
000236 9730      	SBIW R30,0
000237 f061      	BREQ _0x2020012
                +
000238 3002     +CPI R16 , LOW ( 2 )
000239 e0e0     +LDI R30 , HIGH ( 2 )
00023a 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
00023b f080      	BRLO _0x2020013
00023c 01f8      	MOVW R30,R16
00023d 9731      	SBIW R30,1
00023e 018f      	MOVW R16,R30
                +
00023f 81aa     +LDD R26 , Y + 2
000240 81bb     +LDD R27 , Y + 2 + 1
000241 9614     +ADIW R26 , 4
000242 93ed     +ST X + , R30
000243 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2020012:
000244 81aa      	LDD  R26,Y+2
000245 81bb      	LDD  R27,Y+2+1
000246 9612      	ADIW R26,2
000247 940e 06a9 	CALL SUBOPT_0x5
000249 9731      	SBIW R30,1
00024a 81ac      	LDD  R26,Y+4
00024b 83a0      	STD  Z+0,R26
                 _0x2020013:
00024c 81aa      	LDD  R26,Y+2
00024d 81bb      	LDD  R27,Y+2+1
00024e 940e 09bb 	CALL __GETW1P
000250 23ff      	TST  R31
000251 f012      	BRMI _0x2020014
000252 940e 06a9 	CALL SUBOPT_0x5
                 _0x2020014:
000254 c006      	RJMP _0x2020015
                 _0x2020010:
000255 81aa      	LDD  R26,Y+2
000256 81bb      	LDD  R27,Y+2+1
000257 efef      	LDI  R30,LOW(65535)
000258 efff      	LDI  R31,HIGH(65535)
000259 93ed      	ST   X+,R30
00025a 93fc      	ST   X,R31
                 _0x2020015:
00025b 8119      	LDD  R17,Y+1
00025c 8108      	LDD  R16,Y+0
00025d 9625      	ADIW R28,5
00025e 9508      	RET
                 ; .FEND
                 __ftoe_G101:
                 ; .FSTART __ftoe_G101
00025f 940e 06af 	CALL SUBOPT_0x6
000261 e8e0      	LDI  R30,LOW(128)
000262 83ea      	STD  Y+2,R30
000263 e3ef      	LDI  R30,LOW(63)
000264 83eb      	STD  Y+3,R30
000265 940e 09f1 	CALL __SAVELOCR4
000267 85ee      	LDD  R30,Y+14
000268 85ff      	LDD  R31,Y+14+1
000269 3fef      	CPI  R30,LOW(0xFFFF)
00026a efaf      	LDI  R26,HIGH(0xFFFF)
00026b 07fa      	CPC  R31,R26
00026c f449      	BRNE _0x2020019
00026d 85e8      	LDD  R30,Y+8
00026e 85f9      	LDD  R31,Y+8+1
00026f 93fa      	ST   -Y,R31
000270 93ea      	ST   -Y,R30
                +
000271 e9a4     +LDI R26 , LOW ( 2 * _0x2020000 + ( 0 ) )
000272 e0b0     +LDI R27 , HIGH ( 2 * _0x2020000 + ( 0 ) )
                 	__POINTW2FN _0x2020000,0
000273 940e 057f 	CALL _strcpyf
000275 c0b7      	RJMP _0x20C0005
                 _0x2020019:
000276 3fef      	CPI  R30,LOW(0x7FFF)
000277 e7af      	LDI  R26,HIGH(0x7FFF)
000278 07fa      	CPC  R31,R26
000279 f449      	BRNE _0x2020018
00027a 85e8      	LDD  R30,Y+8
00027b 85f9      	LDD  R31,Y+8+1
00027c 93fa      	ST   -Y,R31
00027d 93ea      	ST   -Y,R30
                +
00027e e9a5     +LDI R26 , LOW ( 2 * _0x2020000 + ( 1 ) )
00027f e0b0     +LDI R27 , HIGH ( 2 * _0x2020000 + ( 1 ) )
                 	__POINTW2FN _0x2020000,1
000280 940e 057f 	CALL _strcpyf
000282 c0aa      	RJMP _0x20C0005
                 _0x2020018:
000283 85ab      	LDD  R26,Y+11
000284 30a7      	CPI  R26,LOW(0x7)
000285 f010      	BRLO _0x202001B
000286 e0e6      	LDI  R30,LOW(6)
000287 87eb      	STD  Y+11,R30
                 _0x202001B:
000288 851b      	LDD  R17,Y+11
                 _0x202001C:
000289 2fe1      	MOV  R30,R17
00028a 5011      	SUBI R17,1
00028b 30e0      	CPI  R30,0
00028c f019      	BREQ _0x202001E
00028d 940e 06b6 	CALL SUBOPT_0x7
00028f cff9      	RJMP _0x202001C
                 _0x202001E:
                +
000290 85ec     +LDD R30 , Y + 12
000291 85fd     +LDD R31 , Y + 12 + 1
000292 856e     +LDD R22 , Y + 12 + 2
000293 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
000294 940e 09eb 	CALL __CPD10
000296 f421      	BRNE _0x202001F
000297 e030      	LDI  R19,LOW(0)
000298 940e 06b6 	CALL SUBOPT_0x7
00029a c02d      	RJMP _0x2020020
                 _0x202001F:
00029b 853b      	LDD  R19,Y+11
00029c 940e 06c5 	CALL SUBOPT_0x8
00029e f009      	BREQ PC+2
00029f f408      	BRCC PC+2
0002a0 c00b      	RJMP _0x2020021
0002a1 940e 06b6 	CALL SUBOPT_0x7
                 _0x2020022:
0002a3 940e 06c5 	CALL SUBOPT_0x8
0002a5 f028      	BRLO _0x2020024
0002a6 940e 06d0 	CALL SUBOPT_0x9
0002a8 940e 06d5 	CALL SUBOPT_0xA
0002aa cff8      	RJMP _0x2020022
                 _0x2020024:
0002ab c00d      	RJMP _0x2020025
                 _0x2020021:
                 _0x2020026:
0002ac 940e 06c5 	CALL SUBOPT_0x8
0002ae f440      	BRSH _0x2020028
0002af 940e 06d0 	CALL SUBOPT_0x9
0002b1 940e 06e1 	CALL SUBOPT_0xB
0002b3 940e 06e8 	CALL SUBOPT_0xC
0002b5 5031      	SUBI R19,LOW(1)
0002b6 cff5      	RJMP _0x2020026
                 _0x2020028:
0002b7 940e 06b6 	CALL SUBOPT_0x7
                 _0x2020025:
                +
0002b9 85ec     +LDD R30 , Y + 12
0002ba 85fd     +LDD R31 , Y + 12 + 1
0002bb 856e     +LDD R22 , Y + 12 + 2
0002bc 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
0002bd 940e 06ed 	CALL SUBOPT_0xD
0002bf 940e 06e8 	CALL SUBOPT_0xC
0002c1 940e 06c5 	CALL SUBOPT_0x8
0002c3 f020      	BRLO _0x2020029
0002c4 940e 06d0 	CALL SUBOPT_0x9
0002c6 940e 06d5 	CALL SUBOPT_0xA
                 _0x2020029:
                 _0x2020020:
0002c8 e010      	LDI  R17,LOW(0)
                 _0x202002A:
0002c9 85eb      	LDD  R30,Y+11
0002ca 17e1      	CP   R30,R17
0002cb f1a8      	BRLO _0x202002C
                +
0002cc 81ac     +LDD R26 , Y + 4
0002cd 81bd     +LDD R27 , Y + 4 + 1
0002ce 818e     +LDD R24 , Y + 4 + 2
0002cf 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
0002d0 940e 06f4 	CALL SUBOPT_0xE
0002d2 940e 06ed 	CALL SUBOPT_0xD
0002d4 01df      	MOVW R26,R30
0002d5 01cb      	MOVW R24,R22
0002d6 940e 05d6 	CALL _floor
                +
0002d8 83ec     +STD Y + 4 , R30
0002d9 83fd     +STD Y + 4 + 1 , R31
0002da 836e     +STD Y + 4 + 2 , R22
0002db 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
0002dc 940e 06d0 	CALL SUBOPT_0x9
0002de 940e 08eb 	CALL __DIVF21
0002e0 940e 07da 	CALL __CFD1U
0002e2 2f0e      	MOV  R16,R30
0002e3 940e 06fb 	CALL SUBOPT_0xF
0002e5 940e 0702 	CALL SUBOPT_0x10
0002e7 27ff      	CLR  R31
0002e8 2766      	CLR  R22
0002e9 2777      	CLR  R23
0002ea 940e 0813 	CALL __CDF1
                +
0002ec 81ac     +LDD R26 , Y + 4
0002ed 81bd     +LDD R27 , Y + 4 + 1
0002ee 818e     +LDD R24 , Y + 4 + 2
0002ef 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
0002f0 940e 089d 	CALL __MULF12
0002f2 940e 06d0 	CALL SUBOPT_0x9
0002f4 940e 0707 	CALL SUBOPT_0x11
0002f6 940e 06e8 	CALL SUBOPT_0xC
0002f8 2fe1      	MOV  R30,R17
0002f9 5f1f      	SUBI R17,-1
0002fa 30e0      	CPI  R30,0
0002fb f669      	BRNE _0x202002A
0002fc 940e 06fb 	CALL SUBOPT_0xF
0002fe e2ee      	LDI  R30,LOW(46)
0002ff 93ec      	ST   X,R30
000300 cfc8      	RJMP _0x202002A
                 _0x202002C:
000301 940e 070c 	CALL SUBOPT_0x12
000303 9731      	SBIW R30,1
000304 85aa      	LDD  R26,Y+10
000305 83a0      	STD  Z+0,R26
000306 3030      	CPI  R19,0
000307 f42c      	BRGE _0x202002E
000308 9531      	NEG  R19
000309 85a8      	LDD  R26,Y+8
00030a 85b9      	LDD  R27,Y+8+1
00030b e2ed      	LDI  R30,LOW(45)
00030c c003      	RJMP _0x2020113
                 _0x202002E:
00030d 85a8      	LDD  R26,Y+8
00030e 85b9      	LDD  R27,Y+8+1
00030f e2eb      	LDI  R30,LOW(43)
                 _0x2020113:
000310 93ec      	ST   X,R30
000311 940e 070c 	CALL SUBOPT_0x12
000313 940e 070c 	CALL SUBOPT_0x12
000315 9731      	SBIW R30,1
000316 01bf      	MOVW R22,R30
000317 2fa3      	MOV  R26,R19
000318 e0ea      	LDI  R30,LOW(10)
000319 940e 0975 	CALL __DIVB21
00031b 5de0      	SUBI R30,-LOW(48)
00031c 01db      	MOVW R26,R22
00031d 93ec      	ST   X,R30
00031e 940e 070c 	CALL SUBOPT_0x12
000320 9731      	SBIW R30,1
000321 01bf      	MOVW R22,R30
000322 2fa3      	MOV  R26,R19
000323 e0ea      	LDI  R30,LOW(10)
000324 940e 099f 	CALL __MODB21
000326 5de0      	SUBI R30,-LOW(48)
000327 01db      	MOVW R26,R22
000328 93ec      	ST   X,R30
000329 85a8      	LDD  R26,Y+8
00032a 85b9      	LDD  R27,Y+8+1
00032b e0e0      	LDI  R30,LOW(0)
00032c 93ec      	ST   X,R30
                 _0x20C0005:
00032d 940e 09f8 	CALL __LOADLOCR4
00032f 9660      	ADIW R28,16
000330 9508      	RET
                 ; .FEND
                 __print_G101:
                 ; .FSTART __print_G101
000331 93ba      	ST   -Y,R27
000332 93aa      	ST   -Y,R26
000333 97ef      	SBIW R28,63
000334 9761      	SBIW R28,17
000335 940e 09ef 	CALL __SAVELOCR6
000337 e010      	LDI  R17,0
                +
000338 01fe     +MOVW R30 , R28
000339 5ae8     +SUBI R30 , LOW ( - 88 )
00033a 4fff     +SBCI R31 , HIGH ( - 88 )
00033b 9001     +LD R0 , Z +
00033c 81f0     +LD R31 , Z
00033d 2de0     +MOV R30 , R0
                 	__GETW1SX 88
00033e 87e8      	STD  Y+8,R30
00033f 87f9      	STD  Y+8+1,R31
                +
000340 01fe     +MOVW R30 , R28
000341 5aea     +SUBI R30 , LOW ( - 86 )
000342 4fff     +SBCI R31 , HIGH ( - 86 )
000343 9001     +LD R0 , Z +
000344 81f0     +LD R31 , Z
000345 2de0     +MOV R30 , R0
                 	__GETW1SX 86
000346 83ee      	STD  Y+6,R30
000347 83ff      	STD  Y+6+1,R31
000348 81ae      	LDD  R26,Y+6
000349 81bf      	LDD  R27,Y+6+1
00034a e0e0      	LDI  R30,LOW(0)
00034b e0f0      	LDI  R31,HIGH(0)
00034c 93ed      	ST   X+,R30
00034d 93fc      	ST   X,R31
                 _0x2020030:
00034e 01de      	MOVW R26,R28
00034f 5aa4      	SUBI R26,LOW(-(92))
000350 4fbf      	SBCI R27,HIGH(-(92))
000351 940e 06a9 	CALL SUBOPT_0x5
000353 9731      	SBIW R30,1
000354 91e4      	LPM  R30,Z
000355 2f2e      	MOV  R18,R30
000356 30e0      	CPI  R30,0
000357 f409      	BRNE PC+2
000358 c1e9      	RJMP _0x2020032
000359 2fe1      	MOV  R30,R17
00035a 30e0      	CPI  R30,0
00035b f439      	BRNE _0x2020036
00035c 3225      	CPI  R18,37
00035d f411      	BRNE _0x2020037
00035e e011      	LDI  R17,LOW(1)
00035f c002      	RJMP _0x2020038
                 _0x2020037:
000360 940e 0712 	CALL SUBOPT_0x13
                 _0x2020038:
000362 c1de      	RJMP _0x2020035
                 _0x2020036:
000363 30e1      	CPI  R30,LOW(0x1)
000364 f4c1      	BRNE _0x2020039
000365 3225      	CPI  R18,37
000366 f419      	BRNE _0x202003A
000367 940e 0712 	CALL SUBOPT_0x13
000369 c1d6      	RJMP _0x2020114
                 _0x202003A:
00036a e012      	LDI  R17,LOW(2)
00036b e0e0      	LDI  R30,LOW(0)
00036c 8bed      	STD  Y+21,R30
00036d e000      	LDI  R16,LOW(0)
00036e 322d      	CPI  R18,45
00036f f411      	BRNE _0x202003B
000370 e001      	LDI  R16,LOW(1)
000371 c1cf      	RJMP _0x2020035
                 _0x202003B:
000372 322b      	CPI  R18,43
000373 f419      	BRNE _0x202003C
000374 e2eb      	LDI  R30,LOW(43)
000375 8bed      	STD  Y+21,R30
000376 c1ca      	RJMP _0x2020035
                 _0x202003C:
000377 3220      	CPI  R18,32
000378 f419      	BRNE _0x202003D
000379 e2e0      	LDI  R30,LOW(32)
00037a 8bed      	STD  Y+21,R30
00037b c1c5      	RJMP _0x2020035
                 _0x202003D:
00037c c002      	RJMP _0x202003E
                 _0x2020039:
00037d 30e2      	CPI  R30,LOW(0x2)
00037e f439      	BRNE _0x202003F
                 _0x202003E:
00037f e050      	LDI  R21,LOW(0)
000380 e013      	LDI  R17,LOW(3)
000381 3320      	CPI  R18,48
000382 f411      	BRNE _0x2020040
000383 6800      	ORI  R16,LOW(128)
000384 c1bc      	RJMP _0x2020035
                 _0x2020040:
000385 c002      	RJMP _0x2020041
                 _0x202003F:
000386 30e3      	CPI  R30,LOW(0x3)
000387 f491      	BRNE _0x2020042
                 _0x2020041:
000388 3320      	CPI  R18,48
000389 f010      	BRLO _0x2020044
00038a 332a      	CPI  R18,58
00038b f008      	BRLO _0x2020045
                 _0x2020044:
00038c c007      	RJMP _0x2020043
                 _0x2020045:
00038d e0aa      	LDI  R26,LOW(10)
00038e 9f5a      	MUL  R21,R26
00038f 2d50      	MOV  R21,R0
000390 2fe2      	MOV  R30,R18
000391 53e0      	SUBI R30,LOW(48)
000392 0f5e      	ADD  R21,R30
000393 c1ad      	RJMP _0x2020035
                 _0x2020043:
000394 e040      	LDI  R20,LOW(0)
000395 322e      	CPI  R18,46
000396 f411      	BRNE _0x2020046
000397 e014      	LDI  R17,LOW(4)
000398 c1a8      	RJMP _0x2020035
                 _0x2020046:
000399 c00f      	RJMP _0x2020047
                 _0x2020042:
00039a 30e4      	CPI  R30,LOW(0x4)
00039b f499      	BRNE _0x2020049
00039c 3320      	CPI  R18,48
00039d f010      	BRLO _0x202004B
00039e 332a      	CPI  R18,58
00039f f008      	BRLO _0x202004C
                 _0x202004B:
0003a0 c008      	RJMP _0x202004A
                 _0x202004C:
0003a1 6200      	ORI  R16,LOW(32)
0003a2 e0aa      	LDI  R26,LOW(10)
0003a3 9f4a      	MUL  R20,R26
0003a4 2d40      	MOV  R20,R0
0003a5 2fe2      	MOV  R30,R18
0003a6 53e0      	SUBI R30,LOW(48)
0003a7 0f4e      	ADD  R20,R30
0003a8 c198      	RJMP _0x2020035
                 _0x202004A:
                 _0x2020047:
0003a9 362c      	CPI  R18,108
0003aa f419      	BRNE _0x202004D
0003ab 6002      	ORI  R16,LOW(2)
0003ac e015      	LDI  R17,LOW(5)
0003ad c193      	RJMP _0x2020035
                 _0x202004D:
0003ae c003      	RJMP _0x202004E
                 _0x2020049:
0003af 30e5      	CPI  R30,LOW(0x5)
0003b0 f009      	BREQ PC+2
0003b1 c18f      	RJMP _0x2020035
                 _0x202004E:
0003b2 2fe2      	MOV  R30,R18
0003b3 36e3      	CPI  R30,LOW(0x63)
0003b4 f459      	BRNE _0x2020053
0003b5 940e 0719 	CALL SUBOPT_0x14
0003b7 940e 0720 	CALL SUBOPT_0x15
0003b9 940e 0719 	CALL SUBOPT_0x14
0003bb 81a4      	LDD  R26,Z+4
0003bc 93aa      	ST   -Y,R26
0003bd 940e 0727 	CALL SUBOPT_0x16
0003bf c180      	RJMP _0x2020054
                 _0x2020053:
0003c0 34e5      	CPI  R30,LOW(0x45)
0003c1 f011      	BREQ _0x2020057
0003c2 36e5      	CPI  R30,LOW(0x65)
0003c3 f409      	BRNE _0x2020058
                 _0x2020057:
0003c4 c003      	RJMP _0x2020059
                 _0x2020058:
0003c5 36e6      	CPI  R30,LOW(0x66)
0003c6 f009      	BREQ PC+2
0003c7 c048      	RJMP _0x202005A
                 _0x2020059:
0003c8 01fe      	MOVW R30,R28
0003c9 9676      	ADIW R30,22
0003ca 87ee      	STD  Y+14,R30
0003cb 87ff      	STD  Y+14+1,R31
0003cc 940e 072d 	CALL SUBOPT_0x17
0003ce 940e 09bf 	CALL __GETD1P
0003d0 940e 0734 	CALL SUBOPT_0x18
0003d2 940e 0739 	CALL SUBOPT_0x19
0003d4 85ad      	LDD  R26,Y+13
0003d5 23aa      	TST  R26
0003d6 f032      	BRMI _0x202005B
0003d7 89ad      	LDD  R26,Y+21
0003d8 32ab      	CPI  R26,LOW(0x2B)
0003d9 f059      	BREQ _0x202005D
0003da 32a0      	CPI  R26,LOW(0x20)
0003db f081      	BREQ _0x202005F
0003dc c017      	RJMP _0x2020060
                 _0x202005B:
0003dd 940e 073b 	CALL SUBOPT_0x1A
0003df 940e 07a7 	CALL __ANEGF1
0003e1 940e 0734 	CALL SUBOPT_0x18
0003e3 e2ed      	LDI  R30,LOW(45)
0003e4 8bed      	STD  Y+21,R30
                 _0x202005D:
0003e5 ff07      	SBRS R16,7
0003e6 c005      	RJMP _0x2020061
0003e7 89ed      	LDD  R30,Y+21
0003e8 93ea      	ST   -Y,R30
0003e9 940e 0727 	CALL SUBOPT_0x16
0003eb c008      	RJMP _0x2020062
                 _0x2020061:
                 _0x202005F:
0003ec 85ee      	LDD  R30,Y+14
0003ed 85ff      	LDD  R31,Y+14+1
0003ee 9631      	ADIW R30,1
0003ef 87ee      	STD  Y+14,R30
0003f0 87ff      	STD  Y+14+1,R31
0003f1 9731      	SBIW R30,1
0003f2 89ad      	LDD  R26,Y+21
0003f3 83a0      	STD  Z+0,R26
                 _0x2020062:
                 _0x2020060:
0003f4 ff05      	SBRS R16,5
0003f5 e046      	LDI  R20,LOW(6)
0003f6 3626      	CPI  R18,102
0003f7 f451      	BRNE _0x2020064
0003f8 940e 073b 	CALL SUBOPT_0x1A
0003fa 940e 09d4 	CALL __PUTPARD1
0003fc 934a      	ST   -Y,R20
0003fd 89ab      	LDD  R26,Y+19
0003fe 89bc      	LDD  R27,Y+19+1
0003ff 940e 05ed 	CALL _ftoa
000401 c009      	RJMP _0x2020065
                 _0x2020064:
000402 940e 073b 	CALL SUBOPT_0x1A
000404 940e 09d4 	CALL __PUTPARD1
000406 934a      	ST   -Y,R20
000407 932a      	ST   -Y,R18
000408 89ac      	LDD  R26,Y+20
000409 89bd      	LDD  R27,Y+20+1
00040a de54      	RCALL __ftoe_G101
                 _0x2020065:
00040b 01fe      	MOVW R30,R28
00040c 9676      	ADIW R30,22
00040d 940e 0740 	CALL SUBOPT_0x1B
00040f c01e      	RJMP _0x2020066
                 _0x202005A:
000410 37e3      	CPI  R30,LOW(0x73)
000411 f439      	BRNE _0x2020068
000412 940e 0739 	CALL SUBOPT_0x19
000414 940e 0748 	CALL SUBOPT_0x1C
000416 940e 0740 	CALL SUBOPT_0x1B
000418 c00e      	RJMP _0x2020069
                 _0x2020068:
000419 37e0      	CPI  R30,LOW(0x70)
00041a f4c1      	BRNE _0x202006B
00041b 940e 0739 	CALL SUBOPT_0x19
00041d 940e 0748 	CALL SUBOPT_0x1C
00041f 87ee      	STD  Y+14,R30
000420 87ff      	STD  Y+14+1,R31
000421 85ae      	LDD  R26,Y+14
000422 85bf      	LDD  R27,Y+14+1
000423 940e 0598 	CALL _strlenf
000425 2f1e      	MOV  R17,R30
000426 6008      	ORI  R16,LOW(8)
                 _0x2020069:
000427 770f      	ANDI R16,LOW(127)
000428 3040      	CPI  R20,0
000429 f011      	BREQ _0x202006D
00042a 1741      	CP   R20,R17
00042b f008      	BRLO _0x202006E
                 _0x202006D:
00042c c001      	RJMP _0x202006C
                 _0x202006E:
00042d 2f14      	MOV  R17,R20
                 _0x202006C:
                 _0x2020066:
00042e e040      	LDI  R20,LOW(0)
00042f e0e0      	LDI  R30,LOW(0)
000430 8bec      	STD  Y+20,R30
000431 e030      	LDI  R19,LOW(0)
000432 c06d      	RJMP _0x202006F
                 _0x202006B:
000433 36e4      	CPI  R30,LOW(0x64)
000434 f011      	BREQ _0x2020072
000435 36e9      	CPI  R30,LOW(0x69)
000436 f411      	BRNE _0x2020073
                 _0x2020072:
000437 6004      	ORI  R16,LOW(4)
000438 c002      	RJMP _0x2020074
                 _0x2020073:
000439 37e5      	CPI  R30,LOW(0x75)
00043a f4a1      	BRNE _0x2020075
                 _0x2020074:
00043b e0ea      	LDI  R30,LOW(10)
00043c 8bec      	STD  Y+20,R30
00043d ff01      	SBRS R16,1
00043e c008      	RJMP _0x2020076
                +
00043f e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
000440 ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
000441 e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
000442 e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
000443 940e 074d 	CALL SUBOPT_0x1D
000445 e01a      	LDI  R17,LOW(10)
000446 c022      	RJMP _0x2020077
                 _0x2020076:
                +
000447 e1e0     +LDI R30 , LOW ( 0x2710 )
000448 e2f7     +LDI R31 , HIGH ( 0x2710 )
000449 e060     +LDI R22 , BYTE3 ( 0x2710 )
00044a e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
00044b 940e 074d 	CALL SUBOPT_0x1D
00044d e015      	LDI  R17,LOW(5)
00044e c01a      	RJMP _0x2020077
                 _0x2020075:
00044f 35e8      	CPI  R30,LOW(0x58)
000450 f411      	BRNE _0x2020079
000451 6008      	ORI  R16,LOW(8)
000452 c003      	RJMP _0x202007A
                 _0x2020079:
000453 37e8      	CPI  R30,LOW(0x78)
000454 f009      	BREQ PC+2
000455 c0ea      	RJMP _0x20200B8
                 _0x202007A:
000456 e1e0      	LDI  R30,LOW(16)
000457 8bec      	STD  Y+20,R30
000458 ff01      	SBRS R16,1
000459 c008      	RJMP _0x202007C
                +
00045a e0e0     +LDI R30 , LOW ( 0x10000000 )
00045b e0f0     +LDI R31 , HIGH ( 0x10000000 )
00045c e060     +LDI R22 , BYTE3 ( 0x10000000 )
00045d e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
00045e 940e 074d 	CALL SUBOPT_0x1D
000460 e018      	LDI  R17,LOW(8)
000461 c007      	RJMP _0x2020077
                 _0x202007C:
                +
000462 e0e0     +LDI R30 , LOW ( 0x1000 )
000463 e1f0     +LDI R31 , HIGH ( 0x1000 )
000464 e060     +LDI R22 , BYTE3 ( 0x1000 )
000465 e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
000466 940e 074d 	CALL SUBOPT_0x1D
000468 e014      	LDI  R17,LOW(4)
                 _0x2020077:
000469 3040      	CPI  R20,0
00046a f011      	BREQ _0x202007D
00046b 770f      	ANDI R16,LOW(127)
00046c c001      	RJMP _0x202007E
                 _0x202007D:
00046d e041      	LDI  R20,LOW(1)
                 _0x202007E:
00046e ff01      	SBRS R16,1
00046f c008      	RJMP _0x202007F
000470 940e 0739 	CALL SUBOPT_0x19
000472 940e 072d 	CALL SUBOPT_0x17
000474 9614      	ADIW R26,4
000475 940e 09bf 	CALL __GETD1P
000477 c00f      	RJMP _0x2020115
                 _0x202007F:
000478 ff02      	SBRS R16,2
000479 c007      	RJMP _0x2020081
00047a 940e 0739 	CALL SUBOPT_0x19
00047c 940e 0748 	CALL SUBOPT_0x1C
00047e 940e 0962 	CALL __CWD1
000480 c006      	RJMP _0x2020115
                 _0x2020081:
000481 940e 0739 	CALL SUBOPT_0x19
000483 940e 0748 	CALL SUBOPT_0x1C
000485 2766      	CLR  R22
000486 2777      	CLR  R23
                 _0x2020115:
                +
000487 87ea     +STD Y + 10 , R30
000488 87fb     +STD Y + 10 + 1 , R31
000489 876c     +STD Y + 10 + 2 , R22
00048a 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
00048b ff02      	SBRS R16,2
00048c c012      	RJMP _0x2020083
00048d 85ad      	LDD  R26,Y+13
00048e 23aa      	TST  R26
00048f f442      	BRPL _0x2020084
000490 940e 073b 	CALL SUBOPT_0x1A
000492 940e 0954 	CALL __ANEGD1
000494 940e 0734 	CALL SUBOPT_0x18
000496 e2ed      	LDI  R30,LOW(45)
000497 8bed      	STD  Y+21,R30
                 _0x2020084:
000498 89ed      	LDD  R30,Y+21
000499 30e0      	CPI  R30,0
00049a f019      	BREQ _0x2020085
00049b 5f1f      	SUBI R17,-LOW(1)
00049c 5f4f      	SUBI R20,-LOW(1)
00049d c001      	RJMP _0x2020086
                 _0x2020085:
00049e 7f0b      	ANDI R16,LOW(251)
                 _0x2020086:
                 _0x2020083:
00049f 2f34      	MOV  R19,R20
                 _0x202006F:
0004a0 fd00      	SBRC R16,0
0004a1 c014      	RJMP _0x2020087
                 _0x2020088:
0004a2 1715      	CP   R17,R21
0004a3 f410      	BRSH _0x202008B
0004a4 1735      	CP   R19,R21
0004a5 f008      	BRLO _0x202008C
                 _0x202008B:
0004a6 c00f      	RJMP _0x202008A
                 _0x202008C:
0004a7 ff07      	SBRS R16,7
0004a8 c008      	RJMP _0x202008D
0004a9 ff02      	SBRS R16,2
0004aa c004      	RJMP _0x202008E
0004ab 7f0b      	ANDI R16,LOW(251)
0004ac 892d      	LDD  R18,Y+21
0004ad 5011      	SUBI R17,LOW(1)
0004ae c001      	RJMP _0x202008F
                 _0x202008E:
0004af e320      	LDI  R18,LOW(48)
                 _0x202008F:
0004b0 c001      	RJMP _0x2020090
                 _0x202008D:
0004b1 e220      	LDI  R18,LOW(32)
                 _0x2020090:
0004b2 940e 0712 	CALL SUBOPT_0x13
0004b4 5051      	SUBI R21,LOW(1)
0004b5 cfec      	RJMP _0x2020088
                 _0x202008A:
                 _0x2020087:
                 _0x2020091:
0004b6 1714      	CP   R17,R20
0004b7 f490      	BRSH _0x2020093
0004b8 6100      	ORI  R16,LOW(16)
0004b9 ff02      	SBRS R16,2
0004ba c006      	RJMP _0x2020094
0004bb 940e 0752 	CALL SUBOPT_0x1E
0004bd f009      	BREQ _0x2020095
0004be 5051      	SUBI R21,LOW(1)
                 _0x2020095:
0004bf 5011      	SUBI R17,LOW(1)
0004c0 5041      	SUBI R20,LOW(1)
                 _0x2020094:
0004c1 e3e0      	LDI  R30,LOW(48)
0004c2 93ea      	ST   -Y,R30
0004c3 940e 0727 	CALL SUBOPT_0x16
0004c5 3050      	CPI  R21,0
0004c6 f009      	BREQ _0x2020096
0004c7 5051      	SUBI R21,LOW(1)
                 _0x2020096:
0004c8 5041      	SUBI R20,LOW(1)
0004c9 cfec      	RJMP _0x2020091
                 _0x2020093:
0004ca 2f31      	MOV  R19,R17
0004cb 89ec      	LDD  R30,Y+20
0004cc 30e0      	CPI  R30,0
0004cd f4b9      	BRNE _0x2020097
                 _0x2020098:
0004ce 3030      	CPI  R19,0
0004cf f0a1      	BREQ _0x202009A
0004d0 ff03      	SBRS R16,3
0004d1 c006      	RJMP _0x202009B
0004d2 85ee      	LDD  R30,Y+14
0004d3 85ff      	LDD  R31,Y+14+1
0004d4 9125      	LPM  R18,Z+
0004d5 87ee      	STD  Y+14,R30
0004d6 87ff      	STD  Y+14+1,R31
0004d7 c005      	RJMP _0x202009C
                 _0x202009B:
0004d8 85ae      	LDD  R26,Y+14
0004d9 85bf      	LDD  R27,Y+14+1
0004da 912d      	LD   R18,X+
0004db 87ae      	STD  Y+14,R26
0004dc 87bf      	STD  Y+14+1,R27
                 _0x202009C:
0004dd 940e 0712 	CALL SUBOPT_0x13
0004df 3050      	CPI  R21,0
0004e0 f009      	BREQ _0x202009D
0004e1 5051      	SUBI R21,LOW(1)
                 _0x202009D:
0004e2 5031      	SUBI R19,LOW(1)
0004e3 cfea      	RJMP _0x2020098
                 _0x202009A:
0004e4 c051      	RJMP _0x202009E
                 _0x2020097:
                 _0x20200A0:
0004e5 940e 0764 	CALL SUBOPT_0x1F
0004e7 940e 097a 	CALL __DIVD21U
0004e9 2f2e      	MOV  R18,R30
0004ea 302a      	CPI  R18,10
0004eb f030      	BRLO _0x20200A2
0004ec ff03      	SBRS R16,3
0004ed c002      	RJMP _0x20200A3
0004ee 5c29      	SUBI R18,-LOW(55)
0004ef c001      	RJMP _0x20200A4
                 _0x20200A3:
0004f0 5a29      	SUBI R18,-LOW(87)
                 _0x20200A4:
0004f1 c001      	RJMP _0x20200A5
                 _0x20200A2:
0004f2 5d20      	SUBI R18,-LOW(48)
                 _0x20200A5:
0004f3 fd04      	SBRC R16,4
0004f4 c021      	RJMP _0x20200A7
0004f5 3321      	CPI  R18,49
0004f6 f460      	BRSH _0x20200A9
                +
0004f7 89a8     +LDD R26 , Y + 16
0004f8 89b9     +LDD R27 , Y + 16 + 1
0004f9 898a     +LDD R24 , Y + 16 + 2
0004fa 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
                +
0004fb 30a1     +CPI R26 , LOW ( 0x1 )
0004fc e0e0     +LDI R30 , HIGH ( 0x1 )
0004fd 07be     +CPC R27 , R30
0004fe e0e0     +LDI R30 , BYTE3 ( 0x1 )
0004ff 078e     +CPC R24 , R30
000500 e0e0     +LDI R30 , BYTE4 ( 0x1 )
000501 079e     +CPC R25 , R30
                 	__CPD2N 0x1
000502 f409      	BRNE _0x20200A8
                 _0x20200A9:
000503 c00b      	RJMP _0x20200AB
                 _0x20200A8:
000504 1743      	CP   R20,R19
000505 f440      	BRSH _0x2020116
000506 1753      	CP   R21,R19
000507 f010      	BRLO _0x20200AE
000508 ff00      	SBRS R16,0
000509 c001      	RJMP _0x20200AF
                 _0x20200AE:
00050a c010      	RJMP _0x20200AD
                 _0x20200AF:
00050b e220      	LDI  R18,LOW(32)
00050c ff07      	SBRS R16,7
00050d c008      	RJMP _0x20200B0
                 _0x2020116:
00050e e320      	LDI  R18,LOW(48)
                 _0x20200AB:
00050f 6100      	ORI  R16,LOW(16)
000510 ff02      	SBRS R16,2
000511 c004      	RJMP _0x20200B1
000512 940e 0752 	CALL SUBOPT_0x1E
000514 f009      	BREQ _0x20200B2
000515 5051      	SUBI R21,LOW(1)
                 _0x20200B2:
                 _0x20200B1:
                 _0x20200B0:
                 _0x20200A7:
000516 940e 0712 	CALL SUBOPT_0x13
000518 3050      	CPI  R21,0
000519 f009      	BREQ _0x20200B3
00051a 5051      	SUBI R21,LOW(1)
                 _0x20200B3:
                 _0x20200AD:
00051b 5031      	SUBI R19,LOW(1)
00051c 940e 0764 	CALL SUBOPT_0x1F
00051e 940e 09ab 	CALL __MODD21U
000520 940e 0734 	CALL SUBOPT_0x18
000522 89ec      	LDD  R30,Y+20
                +
000523 89a8     +LDD R26 , Y + 16
000524 89b9     +LDD R27 , Y + 16 + 1
000525 898a     +LDD R24 , Y + 16 + 2
000526 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
000527 27ff      	CLR  R31
000528 2766      	CLR  R22
000529 2777      	CLR  R23
00052a 940e 097a 	CALL __DIVD21U
00052c 940e 074d 	CALL SUBOPT_0x1D
                +
00052e 89e8     +LDD R30 , Y + 16
00052f 89f9     +LDD R31 , Y + 16 + 1
000530 896a     +LDD R22 , Y + 16 + 2
000531 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
000532 940e 09eb 	CALL __CPD10
000534 f009      	BREQ _0x20200A1
000535 cfaf      	RJMP _0x20200A0
                 _0x20200A1:
                 _0x202009E:
000536 ff00      	SBRS R16,0
000537 c008      	RJMP _0x20200B4
                 _0x20200B5:
000538 3050      	CPI  R21,0
000539 f031      	BREQ _0x20200B7
00053a 5051      	SUBI R21,LOW(1)
00053b e2e0      	LDI  R30,LOW(32)
00053c 93ea      	ST   -Y,R30
00053d 940e 0727 	CALL SUBOPT_0x16
00053f cff8      	RJMP _0x20200B5
                 _0x20200B7:
                 _0x20200B4:
                 _0x20200B8:
                 _0x2020054:
                 _0x2020114:
000540 e010      	LDI  R17,LOW(0)
                 _0x2020035:
000541 ce0c      	RJMP _0x2020030
                 _0x2020032:
000542 81ae      	LDD  R26,Y+6
000543 81bf      	LDD  R27,Y+6+1
000544 940e 09bb 	CALL __GETW1P
000546 940e 09f6 	CALL __LOADLOCR6
000548 96ef      	ADIW R28,63
000549 966f      	ADIW R28,31
00054a 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
00054b 92ff      	PUSH R15
00054c 2ef8      	MOV  R15,R24
00054d 9726      	SBIW R28,6
00054e 940e 09f1 	CALL __SAVELOCR4
000550 940e 076d 	CALL SUBOPT_0x20
000552 9730      	SBIW R30,0
000553 f419      	BRNE _0x20200B9
000554 efef      	LDI  R30,LOW(65535)
000555 efff      	LDI  R31,HIGH(65535)
000556 c023      	RJMP _0x20C0004
                 _0x20200B9:
000557 01de      	MOVW R26,R28
000558 9616      	ADIW R26,6
000559 940e 0950 	CALL __ADDW2R15
00055b 018d      	MOVW R16,R26
00055c 940e 076d 	CALL SUBOPT_0x20
00055e 83ee      	STD  Y+6,R30
00055f 83ff      	STD  Y+6+1,R31
000560 e0e0      	LDI  R30,LOW(0)
000561 87e8      	STD  Y+8,R30
000562 87e9      	STD  Y+8+1,R30
000563 01de      	MOVW R26,R28
000564 961a      	ADIW R26,10
000565 940e 0950 	CALL __ADDW2R15
000567 940e 09bb 	CALL __GETW1P
000569 93fa      	ST   -Y,R31
00056a 93ea      	ST   -Y,R30
00056b 931a      	ST   -Y,R17
00056c 930a      	ST   -Y,R16
00056d e2e5      	LDI  R30,LOW(_put_buff_G101)
00056e e0f2      	LDI  R31,HIGH(_put_buff_G101)
00056f 93fa      	ST   -Y,R31
000570 93ea      	ST   -Y,R30
000571 01de      	MOVW R26,R28
000572 961a      	ADIW R26,10
000573 ddbd      	RCALL __print_G101
000574 019f      	MOVW R18,R30
000575 81ae      	LDD  R26,Y+6
000576 81bf      	LDD  R27,Y+6+1
000577 e0e0      	LDI  R30,LOW(0)
000578 93ec      	ST   X,R30
000579 01f9      	MOVW R30,R18
                 _0x20C0004:
00057a 940e 09f8 	CALL __LOADLOCR4
00057c 962a      	ADIW R28,10
00057d 90ff      	POP  R15
00057e 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strcpyf:
                 ; .FSTART _strcpyf
00057f 93ba      	ST   -Y,R27
000580 93aa      	ST   -Y,R26
000581 91e9          ld   r30,y+
000582 91f9          ld   r31,y+
000583 91a9          ld   r26,y+
000584 91b9          ld   r27,y+
000585 01cd          movw r24,r26
                 strcpyf0:
000586 9005      	lpm  r0,z+
000587 920d          st   x+,r0
000588 2000          tst  r0
000589 f7e1          brne strcpyf0
00058a 01fc          movw r30,r24
00058b 9508          ret
                 ; .FEND
                 _strlen:
                 ; .FSTART _strlen
00058c 93ba      	ST   -Y,R27
00058d 93aa      	ST   -Y,R26
00058e 91a9          ld   r26,y+
00058f 91b9          ld   r27,y+
000590 27ee          clr  r30
000591 27ff          clr  r31
                 strlen0:
000592 916d          ld   r22,x+
000593 2366          tst  r22
000594 f011          breq strlen1
000595 9631          adiw r30,1
000596 cffb          rjmp strlen0
                 strlen1:
000597 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
000598 93ba      	ST   -Y,R27
000599 93aa      	ST   -Y,R26
00059a 27aa          clr  r26
00059b 27bb          clr  r27
00059c 91e9          ld   r30,y+
00059d 91f9          ld   r31,y+
                 strlenf0:
00059e 9005      	lpm  r0,z+
00059f 2000          tst  r0
0005a0 f011          breq strlenf1
0005a1 9611          adiw r26,1
0005a2 cffb          rjmp strlenf0
                 strlenf1:
0005a3 01fd          movw r30,r26
0005a4 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 _ftrunc:
                 ; .FSTART _ftrunc
0005a5 940e 09d9 	CALL __PUTPARD2
0005a7 817b         ldd  r23,y+3
0005a8 816a         ldd  r22,y+2
0005a9 81f9         ldd  r31,y+1
0005aa 81e8         ld   r30,y
0005ab fb77         bst  r23,7
0005ac 0f77         lsl  r23
0005ad fd67         sbrc r22,7
0005ae 6071         sbr  r23,1
0005af 2f97         mov  r25,r23
0005b0 579e         subi r25,0x7e
0005b1 f081         breq __ftrunc0
0005b2 f078         brcs __ftrunc0
0005b3 3198         cpi  r25,24
0005b4 f490         brsh __ftrunc1
0005b5 27aa         clr  r26
0005b6 27bb         clr  r27
0005b7 2788         clr  r24
                 __ftrunc2:
0005b8 9408         sec
0005b9 9587         ror  r24
0005ba 95b7         ror  r27
0005bb 95a7         ror  r26
0005bc 959a         dec  r25
0005bd f7d1         brne __ftrunc2
0005be 23ea         and  r30,r26
0005bf 23fb         and  r31,r27
0005c0 2368         and  r22,r24
0005c1 c005         rjmp __ftrunc1
                 __ftrunc0:
0005c2 94e8         clt
0005c3 2777         clr  r23
0005c4 27ee         clr  r30
0005c5 27ff         clr  r31
0005c6 2766         clr  r22
                 __ftrunc1:
0005c7 776f         cbr  r22,0x80
0005c8 9576         lsr  r23
0005c9 f408         brcc __ftrunc3
0005ca 6860         sbr  r22,0x80
                 __ftrunc3:
0005cb f977         bld  r23,7
0005cc 91a9         ld   r26,y+
0005cd 91b9         ld   r27,y+
0005ce 9189         ld   r24,y+
0005cf 9199         ld   r25,y+
0005d0 17ea         cp   r30,r26
0005d1 07fb         cpc  r31,r27
0005d2 0768         cpc  r22,r24
0005d3 0779         cpc  r23,r25
0005d4 fb97         bst  r25,7
0005d5 9508         ret
                 ; .FEND
                 _floor:
                 ; .FSTART _floor
0005d6 940e 09d9 	CALL __PUTPARD2
0005d8 940e 09ca 	CALL __GETD2S0
0005da 940e 05a5 	CALL _ftrunc
0005dc 940e 09cf 	CALL __PUTD1S0
0005de f419          brne __floor1
                 __floor0:
0005df 940e 09c5 	CALL __GETD1S0
0005e1 c009      	RJMP _0x20C0003
                 __floor1:
0005e2 f7e6          brtc __floor0
0005e3 940e 09c5 	CALL __GETD1S0
                +
0005e5 e0a0     +LDI R26 , LOW ( 0x3F800000 )
0005e6 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
0005e7 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
0005e8 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
0005e9 940e 0846 	CALL __SUBF12
                 _0x20C0003:
0005eb 9624      	ADIW R28,4
0005ec 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _ftoa:
                 ; .FSTART _ftoa
0005ed d0c1      	RCALL SUBOPT_0x6
0005ee e0e0      	LDI  R30,LOW(0)
0005ef 83ea      	STD  Y+2,R30
0005f0 e3ef      	LDI  R30,LOW(63)
0005f1 83eb      	STD  Y+3,R30
0005f2 931a      	ST   -Y,R17
0005f3 930a      	ST   -Y,R16
0005f4 85eb      	LDD  R30,Y+11
0005f5 85fc      	LDD  R31,Y+11+1
0005f6 3fef      	CPI  R30,LOW(0xFFFF)
0005f7 efaf      	LDI  R26,HIGH(0xFFFF)
0005f8 07fa      	CPC  R31,R26
0005f9 f431      	BRNE _0x20A000D
0005fa d179      	RCALL SUBOPT_0x21
                +
0005fb e9ac     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 0 ) )
0005fc e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 0 ) )
                 	__POINTW2FN _0x20A0000,0
0005fd 940e 057f 	CALL _strcpyf
0005ff c08a      	RJMP _0x20C0002
                 _0x20A000D:
000600 3fef      	CPI  R30,LOW(0x7FFF)
000601 e7af      	LDI  R26,HIGH(0x7FFF)
000602 07fa      	CPC  R31,R26
000603 f431      	BRNE _0x20A000C
000604 d16f      	RCALL SUBOPT_0x21
                +
000605 e9ad     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 1 ) )
000606 e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 1 ) )
                 	__POINTW2FN _0x20A0000,1
000607 940e 057f 	CALL _strcpyf
000609 c080      	RJMP _0x20C0002
                 _0x20A000C:
00060a 85ac      	LDD  R26,Y+12
00060b 23aa      	TST  R26
00060c f452      	BRPL _0x20A000F
                +
00060d 85e9     +LDD R30 , Y + 9
00060e 85fa     +LDD R31 , Y + 9 + 1
00060f 856b     +LDD R22 , Y + 9 + 2
000610 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000611 940e 07a7 	CALL __ANEGF1
000613 d165      	RCALL SUBOPT_0x22
000614 d169      	RCALL SUBOPT_0x23
000615 e2ed      	LDI  R30,LOW(45)
000616 93ec      	ST   X,R30
                 _0x20A000F:
000617 85a8      	LDD  R26,Y+8
000618 30a7      	CPI  R26,LOW(0x7)
000619 f010      	BRLO _0x20A0010
00061a e0e6      	LDI  R30,LOW(6)
00061b 87e8      	STD  Y+8,R30
                 _0x20A0010:
00061c 8518      	LDD  R17,Y+8
                 _0x20A0011:
00061d 2fe1      	MOV  R30,R17
00061e 5011      	SUBI R17,1
00061f 30e0      	CPI  R30,0
000620 f021      	BREQ _0x20A0013
000621 d163      	RCALL SUBOPT_0x24
000622 d0d1      	RCALL SUBOPT_0xE
000623 d166      	RCALL SUBOPT_0x25
000624 cff8      	RJMP _0x20A0011
                 _0x20A0013:
000625 d169      	RCALL SUBOPT_0x26
000626 940e 084d 	CALL __ADDF12
000628 d150      	RCALL SUBOPT_0x22
000629 e010      	LDI  R17,LOW(0)
                +
00062a e0e0     +LDI R30 , LOW ( 0x3F800000 )
00062b e0f0     +LDI R31 , HIGH ( 0x3F800000 )
00062c e860     +LDI R22 , BYTE3 ( 0x3F800000 )
00062d e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
00062e d15b      	RCALL SUBOPT_0x25
                 _0x20A0014:
00062f d15f      	RCALL SUBOPT_0x26
000630 940e 0930 	CALL __CMPF12
000632 f068      	BRLO _0x20A0016
000633 d151      	RCALL SUBOPT_0x24
000634 d0ac      	RCALL SUBOPT_0xB
000635 d154      	RCALL SUBOPT_0x25
000636 5f1f      	SUBI R17,-LOW(1)
000637 3217      	CPI  R17,39
000638 f030      	BRLO _0x20A0017
000639 d13a      	RCALL SUBOPT_0x21
                +
00063a eaa1     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 5 ) )
00063b e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 5 ) )
                 	__POINTW2FN _0x20A0000,5
00063c 940e 057f 	CALL _strcpyf
00063e c04b      	RJMP _0x20C0002
                 _0x20A0017:
00063f cfef      	RJMP _0x20A0014
                 _0x20A0016:
000640 3010      	CPI  R17,0
000641 f421      	BRNE _0x20A0018
000642 d13b      	RCALL SUBOPT_0x23
000643 e3e0      	LDI  R30,LOW(48)
000644 93ec      	ST   X,R30
000645 c020      	RJMP _0x20A0019
                 _0x20A0018:
                 _0x20A001A:
000646 2fe1      	MOV  R30,R17
000647 5011      	SUBI R17,1
000648 30e0      	CPI  R30,0
000649 f0e1      	BREQ _0x20A001C
00064a d13a      	RCALL SUBOPT_0x24
00064b d0a8      	RCALL SUBOPT_0xE
00064c d0a0      	RCALL SUBOPT_0xD
00064d 01df      	MOVW R26,R30
00064e 01cb      	MOVW R24,R22
00064f 940e 05d6 	CALL _floor
000651 d138      	RCALL SUBOPT_0x25
000652 d13c      	RCALL SUBOPT_0x26
000653 940e 08eb 	CALL __DIVF21
000655 940e 07da 	CALL __CFD1U
000657 2f0e      	MOV  R16,R30
000658 d125      	RCALL SUBOPT_0x23
000659 d0a8      	RCALL SUBOPT_0x10
00065a e0f0      	LDI  R31,0
00065b d129      	RCALL SUBOPT_0x24
00065c 940e 0962 	CALL __CWD1
00065e 940e 0813 	CALL __CDF1
000660 940e 089d 	CALL __MULF12
000662 d135      	RCALL SUBOPT_0x27
000663 d0a3      	RCALL SUBOPT_0x11
000664 d114      	RCALL SUBOPT_0x22
000665 cfe0      	RJMP _0x20A001A
                 _0x20A001C:
                 _0x20A0019:
000666 85e8      	LDD  R30,Y+8
000667 30e0      	CPI  R30,0
000668 f0e9      	BREQ _0x20C0001
000669 d114      	RCALL SUBOPT_0x23
00066a e2ee      	LDI  R30,LOW(46)
00066b 93ec      	ST   X,R30
                 _0x20A001E:
00066c 85e8      	LDD  R30,Y+8
00066d 50e1      	SUBI R30,LOW(1)
00066e 87e8      	STD  Y+8,R30
00066f 5fef      	SUBI R30,-LOW(1)
000670 f0a9      	BREQ _0x20A0020
000671 d126      	RCALL SUBOPT_0x27
000672 d06e      	RCALL SUBOPT_0xB
000673 d105      	RCALL SUBOPT_0x22
                +
000674 85e9     +LDD R30 , Y + 9
000675 85fa     +LDD R31 , Y + 9 + 1
000676 856b     +LDD R22 , Y + 9 + 2
000677 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000678 940e 07da 	CALL __CFD1U
00067a 2f0e      	MOV  R16,R30
00067b d102      	RCALL SUBOPT_0x23
00067c d085      	RCALL SUBOPT_0x10
00067d e0f0      	LDI  R31,0
00067e d119      	RCALL SUBOPT_0x27
00067f 940e 0962 	CALL __CWD1
000681 940e 0813 	CALL __CDF1
000683 d083      	RCALL SUBOPT_0x11
000684 d0f4      	RCALL SUBOPT_0x22
000685 cfe6      	RJMP _0x20A001E
                 _0x20A0020:
                 _0x20C0001:
000686 81ae      	LDD  R26,Y+6
000687 81bf      	LDD  R27,Y+6+1
000688 e0e0      	LDI  R30,LOW(0)
000689 93ec      	ST   X,R30
                 _0x20C0002:
00068a 8119      	LDD  R17,Y+1
00068b 8108      	LDD  R16,Y+0
00068c 962d      	ADIW R28,13
00068d 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 __base_y_G100:
000260           	.BYTE 0x4
                 __seed_G105:
000264           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x0:
00068e eca8      	LDI  R26,LOW(200)
00068f e0b0      	LDI  R27,0
000690 940c 079d 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1:
000692 01fe      	MOVW R30,R28
000693 9632      	ADIW R30,2
000694 93fa      	ST   -Y,R31
000695 93ea      	ST   -Y,R30
000696 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2:
000697 940e 0962 	CALL __CWD1
000699 940e 09d4 	CALL __PUTPARD1
00069b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3:
00069c 940e 01ad 	CALL __lcd_write_data
00069e e0a3      	LDI  R26,LOW(3)
00069f e0b0      	LDI  R27,0
0006a0 940c 079d 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x4:
0006a2 e3a0      	LDI  R26,LOW(48)
0006a3 940e 0199 	CALL __lcd_write_nibble_G100
                +
0006a5 e281     +LDI R24 , LOW ( 33 )
                +__DELAY_USB_LOOP :
0006a6 958a     +DEC R24
0006a7 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 33
0006a8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x5:
0006a9 91ed      	LD   R30,X+
0006aa 91fd      	LD   R31,X+
0006ab 9631      	ADIW R30,1
0006ac 93fe      	ST   -X,R31
0006ad 93ee      	ST   -X,R30
0006ae 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x6:
0006af 93ba      	ST   -Y,R27
0006b0 93aa      	ST   -Y,R26
0006b1 9724      	SBIW R28,4
0006b2 e0e0      	LDI  R30,LOW(0)
0006b3 83e8      	ST   Y,R30
0006b4 83e9      	STD  Y+1,R30
0006b5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x7:
                +
0006b6 81ac     +LDD R26 , Y + 4
0006b7 81bd     +LDD R27 , Y + 4 + 1
0006b8 818e     +LDD R24 , Y + 4 + 2
0006b9 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
0006ba e0e0     +LDI R30 , LOW ( 0x41200000 )
0006bb e0f0     +LDI R31 , HIGH ( 0x41200000 )
0006bc e260     +LDI R22 , BYTE3 ( 0x41200000 )
0006bd e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
0006be 940e 089d 	CALL __MULF12
                +
0006c0 83ec     +STD Y + 4 , R30
0006c1 83fd     +STD Y + 4 + 1 , R31
0006c2 836e     +STD Y + 4 + 2 , R22
0006c3 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
0006c4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x8:
                +
0006c5 81ec     +LDD R30 , Y + 4
0006c6 81fd     +LDD R31 , Y + 4 + 1
0006c7 816e     +LDD R22 , Y + 4 + 2
0006c8 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
0006c9 85ac     +LDD R26 , Y + 12
0006ca 85bd     +LDD R27 , Y + 12 + 1
0006cb 858e     +LDD R24 , Y + 12 + 2
0006cc 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
0006cd 940e 0930 	CALL __CMPF12
0006cf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x9:
                +
0006d0 85ac     +LDD R26 , Y + 12
0006d1 85bd     +LDD R27 , Y + 12 + 1
0006d2 858e     +LDD R24 , Y + 12 + 2
0006d3 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
0006d4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0xA:
                +
0006d5 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
0006d6 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
0006d7 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
0006d8 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
0006d9 940e 089d 	CALL __MULF12
                +
0006db 87ec     +STD Y + 12 , R30
0006dc 87fd     +STD Y + 12 + 1 , R31
0006dd 876e     +STD Y + 12 + 2 , R22
0006de 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
0006df 5f3f      	SUBI R19,-LOW(1)
0006e0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xB:
                +
0006e1 e0e0     +LDI R30 , LOW ( 0x41200000 )
0006e2 e0f0     +LDI R31 , HIGH ( 0x41200000 )
0006e3 e260     +LDI R22 , BYTE3 ( 0x41200000 )
0006e4 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
0006e5 940e 089d 	CALL __MULF12
0006e7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xC:
                +
0006e8 87ec     +STD Y + 12 , R30
0006e9 87fd     +STD Y + 12 + 1 , R31
0006ea 876e     +STD Y + 12 + 2 , R22
0006eb 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
0006ec 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xD:
                +
0006ed e0a0     +LDI R26 , LOW ( 0x3F000000 )
0006ee e0b0     +LDI R27 , HIGH ( 0x3F000000 )
0006ef e080     +LDI R24 , BYTE3 ( 0x3F000000 )
0006f0 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
0006f1 940e 084d 	CALL __ADDF12
0006f3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xE:
                +
0006f4 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
0006f5 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
0006f6 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
0006f7 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
0006f8 940e 089d 	CALL __MULF12
0006fa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF:
0006fb 85a8      	LDD  R26,Y+8
0006fc 85b9      	LDD  R27,Y+8+1
0006fd 9611      	ADIW R26,1
0006fe 87a8      	STD  Y+8,R26
0006ff 87b9      	STD  Y+8+1,R27
000700 9711      	SBIW R26,1
000701 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x10:
000702 2fe0      	MOV  R30,R16
000703 5de0      	SUBI R30,-LOW(48)
000704 93ec      	ST   X,R30
000705 2fe0      	MOV  R30,R16
000706 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x11:
000707 940e 09de 	CALL __SWAPD12
000709 940e 0846 	CALL __SUBF12
00070b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x12:
00070c 85e8      	LDD  R30,Y+8
00070d 85f9      	LDD  R31,Y+8+1
00070e 9631      	ADIW R30,1
00070f 87e8      	STD  Y+8,R30
000710 87f9      	STD  Y+8+1,R31
000711 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x13:
000712 932a      	ST   -Y,R18
000713 81af      	LDD  R26,Y+7
000714 85b8      	LDD  R27,Y+7+1
000715 85e9      	LDD  R30,Y+9
000716 85fa      	LDD  R31,Y+9+1
000717 9509      	ICALL
000718 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x14:
                +
000719 01fe     +MOVW R30 , R28
00071a 5ae6     +SUBI R30 , LOW ( - 90 )
00071b 4fff     +SBCI R31 , HIGH ( - 90 )
00071c 9001     +LD R0 , Z +
00071d 81f0     +LD R31 , Z
00071e 2de0     +MOV R30 , R0
                 	__GETW1SX 90
00071f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x15:
000720 9734      	SBIW R30,4
                +
000721 01de     +MOVW R26 , R28
000722 5aa6     +SUBI R26 , LOW ( - 90 )
000723 4fbf     +SBCI R27 , HIGH ( - 90 )
000724 93ed     +ST X + , R30
000725 93fc     +ST X , R31
                 	__PUTW1SX 90
000726 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x16:
000727 81af      	LDD  R26,Y+7
000728 85b8      	LDD  R27,Y+7+1
000729 85e9      	LDD  R30,Y+9
00072a 85fa      	LDD  R31,Y+9+1
00072b 9509      	ICALL
00072c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x17:
                +
00072d 01de     +MOVW R26 , R28
00072e 5aa6     +SUBI R26 , LOW ( - 90 )
00072f 4fbf     +SBCI R27 , HIGH ( - 90 )
000730 900d     +LD R0 , X +
000731 91bc     +LD R27 , X
000732 2da0     +MOV R26 , R0
                 	__GETW2SX 90
000733 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x18:
                +
000734 87ea     +STD Y + 10 , R30
000735 87fb     +STD Y + 10 + 1 , R31
000736 876c     +STD Y + 10 + 2 , R22
000737 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000738 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x19:
000739 dfdf      	RCALL SUBOPT_0x14
00073a cfe5      	RJMP SUBOPT_0x15
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1A:
                +
00073b 85ea     +LDD R30 , Y + 10
00073c 85fb     +LDD R31 , Y + 10 + 1
00073d 856c     +LDD R22 , Y + 10 + 2
00073e 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
00073f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1B:
000740 87ee      	STD  Y+14,R30
000741 87ff      	STD  Y+14+1,R31
000742 85ae      	LDD  R26,Y+14
000743 85bf      	LDD  R27,Y+14+1
000744 940e 058c 	CALL _strlen
000746 2f1e      	MOV  R17,R30
000747 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x1C:
000748 dfe4      	RCALL SUBOPT_0x17
000749 9614      	ADIW R26,4
00074a 940e 09bb 	CALL __GETW1P
00074c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1D:
                +
00074d 8be8     +STD Y + 16 , R30
00074e 8bf9     +STD Y + 16 + 1 , R31
00074f 8b6a     +STD Y + 16 + 2 , R22
000750 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
000751 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x1E:
000752 7f0b      	ANDI R16,LOW(251)
000753 89ed      	LDD  R30,Y+21
000754 93ea      	ST   -Y,R30
                +
000755 01de     +MOVW R26 , R28
000756 5aa9     +SUBI R26 , LOW ( - 87 )
000757 4fbf     +SBCI R27 , HIGH ( - 87 )
000758 900d     +LD R0 , X +
000759 91bc     +LD R27 , X
00075a 2da0     +MOV R26 , R0
                 	__GETW2SX 87
                +
00075b 01fe     +MOVW R30 , R28
00075c 5ae7     +SUBI R30 , LOW ( - 89 )
00075d 4fff     +SBCI R31 , HIGH ( - 89 )
00075e 9001     +LD R0 , Z +
00075f 81f0     +LD R31 , Z
000760 2de0     +MOV R30 , R0
                 	__GETW1SX 89
000761 9509      	ICALL
000762 3050      	CPI  R21,0
000763 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1F:
                +
000764 89e8     +LDD R30 , Y + 16
000765 89f9     +LDD R31 , Y + 16 + 1
000766 896a     +LDD R22 , Y + 16 + 2
000767 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
000768 85aa     +LDD R26 , Y + 10
000769 85bb     +LDD R27 , Y + 10 + 1
00076a 858c     +LDD R24 , Y + 10 + 2
00076b 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
00076c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x20:
00076d 01de      	MOVW R26,R28
00076e 961c      	ADIW R26,12
00076f 940e 0950 	CALL __ADDW2R15
000771 940e 09bb 	CALL __GETW1P
000773 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x21:
000774 81ee      	LDD  R30,Y+6
000775 81ff      	LDD  R31,Y+6+1
000776 93fa      	ST   -Y,R31
000777 93ea      	ST   -Y,R30
000778 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x22:
                +
000779 87e9     +STD Y + 9 , R30
00077a 87fa     +STD Y + 9 + 1 , R31
00077b 876b     +STD Y + 9 + 2 , R22
00077c 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
00077d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x23:
00077e 81ae      	LDD  R26,Y+6
00077f 81bf      	LDD  R27,Y+6+1
000780 9611      	ADIW R26,1
000781 83ae      	STD  Y+6,R26
000782 83bf      	STD  Y+6+1,R27
000783 9711      	SBIW R26,1
000784 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x24:
                +
000785 81aa     +LDD R26 , Y + 2
000786 81bb     +LDD R27 , Y + 2 + 1
000787 818c     +LDD R24 , Y + 2 + 2
000788 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
000789 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x25:
                +
00078a 83ea     +STD Y + 2 , R30
00078b 83fb     +STD Y + 2 + 1 , R31
00078c 836c     +STD Y + 2 + 2 , R22
00078d 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
00078e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x26:
                +
00078f 81ea     +LDD R30 , Y + 2
000790 81fb     +LDD R31 , Y + 2 + 1
000791 816c     +LDD R22 , Y + 2 + 2
000792 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
000793 85a9     +LDD R26 , Y + 9
000794 85ba     +LDD R27 , Y + 9 + 1
000795 858b     +LDD R24 , Y + 9 + 2
000796 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000797 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x27:
                +
000798 85a9     +LDD R26 , Y + 9
000799 85ba     +LDD R27 , Y + 9 + 1
00079a 858b     +LDD R24 , Y + 9 + 2
00079b 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
00079c 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
00079d 9610      	adiw r26,0
00079e f039      	breq __delay_ms1
                 __delay_ms0:
                +
00079f ef8a     +LDI R24 , LOW ( 0xFA )
0007a0 e090     +LDI R25 , HIGH ( 0xFA )
                +__DELAY_USW_LOOP :
0007a1 9701     +SBIW R24 , 1
0007a2 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xFA
0007a3 95a8      	wdr
0007a4 9711      	sbiw r26,1
0007a5 f7c9      	brne __delay_ms0
                 __delay_ms1:
0007a6 9508      	ret
                 
                 __ANEGF1:
0007a7 9730      	SBIW R30,0
0007a8 4060      	SBCI R22,0
0007a9 4070      	SBCI R23,0
0007aa f009      	BREQ __ANEGF10
0007ab 5870      	SUBI R23,0x80
                 __ANEGF10:
0007ac 9508      	RET
                 
                 __ROUND_REPACK:
0007ad 2355      	TST  R21
0007ae f442      	BRPL __REPACK
0007af 3850      	CPI  R21,0x80
0007b0 f411      	BRNE __ROUND_REPACK0
0007b1 ffe0      	SBRS R30,0
0007b2 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
0007b3 9631      	ADIW R30,1
0007b4 1f69      	ADC  R22,R25
0007b5 1f79      	ADC  R23,R25
0007b6 f06b      	BRVS __REPACK1
                 
                 __REPACK:
0007b7 e850      	LDI  R21,0x80
0007b8 2757      	EOR  R21,R23
0007b9 f411      	BRNE __REPACK0
0007ba 935f      	PUSH R21
0007bb c0cf      	RJMP __ZERORES
                 __REPACK0:
0007bc 3f5f      	CPI  R21,0xFF
0007bd f031      	BREQ __REPACK1
0007be 0f66      	LSL  R22
0007bf 0c00      	LSL  R0
0007c0 9557      	ROR  R21
0007c1 9567      	ROR  R22
0007c2 2f75      	MOV  R23,R21
0007c3 9508      	RET
                 __REPACK1:
0007c4 935f      	PUSH R21
0007c5 2000      	TST  R0
0007c6 f00a      	BRMI __REPACK2
0007c7 c0cf      	RJMP __MAXRES
                 __REPACK2:
0007c8 c0c8      	RJMP __MINRES
                 
                 __UNPACK:
0007c9 e850      	LDI  R21,0x80
0007ca 2e19      	MOV  R1,R25
0007cb 2215      	AND  R1,R21
0007cc 0f88      	LSL  R24
0007cd 1f99      	ROL  R25
0007ce 2795      	EOR  R25,R21
0007cf 0f55      	LSL  R21
0007d0 9587      	ROR  R24
                 
                 __UNPACK1:
0007d1 e850      	LDI  R21,0x80
0007d2 2e07      	MOV  R0,R23
0007d3 2205      	AND  R0,R21
0007d4 0f66      	LSL  R22
0007d5 1f77      	ROL  R23
0007d6 2775      	EOR  R23,R21
0007d7 0f55      	LSL  R21
0007d8 9567      	ROR  R22
0007d9 9508      	RET
                 
                 __CFD1U:
0007da 9468      	SET
0007db c001      	RJMP __CFD1U0
                 __CFD1:
0007dc 94e8      	CLT
                 __CFD1U0:
0007dd 935f      	PUSH R21
0007de dff2      	RCALL __UNPACK1
0007df 3870      	CPI  R23,0x80
0007e0 f018      	BRLO __CFD10
0007e1 3f7f      	CPI  R23,0xFF
0007e2 f408      	BRCC __CFD10
0007e3 c0a7      	RJMP __ZERORES
                 __CFD10:
0007e4 e156      	LDI  R21,22
0007e5 1b57      	SUB  R21,R23
0007e6 f4aa      	BRPL __CFD11
0007e7 9551      	NEG  R21
0007e8 3058      	CPI  R21,8
0007e9 f40e      	BRTC __CFD19
0007ea 3059      	CPI  R21,9
                 __CFD19:
0007eb f030      	BRLO __CFD17
0007ec efef      	SER  R30
0007ed efff      	SER  R31
0007ee ef6f      	SER  R22
0007ef e77f      	LDI  R23,0x7F
0007f0 f977      	BLD  R23,7
0007f1 c01a      	RJMP __CFD15
                 __CFD17:
0007f2 2777      	CLR  R23
0007f3 2355      	TST  R21
0007f4 f0b9      	BREQ __CFD15
                 __CFD18:
0007f5 0fee      	LSL  R30
0007f6 1fff      	ROL  R31
0007f7 1f66      	ROL  R22
0007f8 1f77      	ROL  R23
0007f9 955a      	DEC  R21
0007fa f7d1      	BRNE __CFD18
0007fb c010      	RJMP __CFD15
                 __CFD11:
0007fc 2777      	CLR  R23
                 __CFD12:
0007fd 3058      	CPI  R21,8
0007fe f028      	BRLO __CFD13
0007ff 2fef      	MOV  R30,R31
000800 2ff6      	MOV  R31,R22
000801 2f67      	MOV  R22,R23
000802 5058      	SUBI R21,8
000803 cff9      	RJMP __CFD12
                 __CFD13:
000804 2355      	TST  R21
000805 f031      	BREQ __CFD15
                 __CFD14:
000806 9576      	LSR  R23
000807 9567      	ROR  R22
000808 95f7      	ROR  R31
000809 95e7      	ROR  R30
00080a 955a      	DEC  R21
00080b f7d1      	BRNE __CFD14
                 __CFD15:
00080c 2000      	TST  R0
00080d f40a      	BRPL __CFD16
00080e d145      	RCALL __ANEGD1
                 __CFD16:
00080f 915f      	POP  R21
000810 9508      	RET
                 
                 __CDF1U:
000811 9468      	SET
000812 c001      	RJMP __CDF1U0
                 __CDF1:
000813 94e8      	CLT
                 __CDF1U0:
000814 9730      	SBIW R30,0
000815 4060      	SBCI R22,0
000816 4070      	SBCI R23,0
000817 f0b1      	BREQ __CDF10
000818 2400      	CLR  R0
000819 f026      	BRTS __CDF11
00081a 2377      	TST  R23
00081b f412      	BRPL __CDF11
00081c 9400      	COM  R0
00081d d136      	RCALL __ANEGD1
                 __CDF11:
00081e 2e17      	MOV  R1,R23
00081f e17e      	LDI  R23,30
000820 2011      	TST  R1
                 __CDF12:
000821 f032      	BRMI __CDF13
000822 957a      	DEC  R23
000823 0fee      	LSL  R30
000824 1fff      	ROL  R31
000825 1f66      	ROL  R22
000826 1c11      	ROL  R1
000827 cff9      	RJMP __CDF12
                 __CDF13:
000828 2fef      	MOV  R30,R31
000829 2ff6      	MOV  R31,R22
00082a 2d61      	MOV  R22,R1
00082b 935f      	PUSH R21
00082c df8a      	RCALL __REPACK
00082d 915f      	POP  R21
                 __CDF10:
00082e 9508      	RET
                 
                 __SWAPACC:
00082f 934f      	PUSH R20
000830 01af      	MOVW R20,R30
000831 01fd      	MOVW R30,R26
000832 01da      	MOVW R26,R20
000833 01ab      	MOVW R20,R22
000834 01bc      	MOVW R22,R24
000835 01ca      	MOVW R24,R20
000836 2d40      	MOV  R20,R0
000837 2c01      	MOV  R0,R1
000838 2e14      	MOV  R1,R20
000839 914f      	POP  R20
00083a 9508      	RET
                 
                 __UADD12:
00083b 0fea      	ADD  R30,R26
00083c 1ffb      	ADC  R31,R27
00083d 1f68      	ADC  R22,R24
00083e 9508      	RET
                 
                 __NEGMAN1:
00083f 95e0      	COM  R30
000840 95f0      	COM  R31
000841 9560      	COM  R22
000842 5fef      	SUBI R30,-1
000843 4fff      	SBCI R31,-1
000844 4f6f      	SBCI R22,-1
000845 9508      	RET
                 
                 __SUBF12:
000846 935f      	PUSH R21
000847 df81      	RCALL __UNPACK
000848 3890      	CPI  R25,0x80
000849 f171      	BREQ __ADDF129
00084a e850      	LDI  R21,0x80
00084b 2615      	EOR  R1,R21
                 
00084c c004      	RJMP __ADDF120
                 
                 __ADDF12:
00084d 935f      	PUSH R21
00084e df7a      	RCALL __UNPACK
00084f 3890      	CPI  R25,0x80
000850 f139      	BREQ __ADDF129
                 
                 __ADDF120:
000851 3870      	CPI  R23,0x80
000852 f121      	BREQ __ADDF128
                 __ADDF121:
000853 2f57      	MOV  R21,R23
000854 1b59      	SUB  R21,R25
000855 f12b      	BRVS __ADDF1211
000856 f412      	BRPL __ADDF122
000857 dfd7      	RCALL __SWAPACC
000858 cffa      	RJMP __ADDF121
                 __ADDF122:
000859 3158      	CPI  R21,24
00085a f018      	BRLO __ADDF123
00085b 27aa      	CLR  R26
00085c 27bb      	CLR  R27
00085d 2788      	CLR  R24
                 __ADDF123:
00085e 3058      	CPI  R21,8
00085f f028      	BRLO __ADDF124
000860 2fab      	MOV  R26,R27
000861 2fb8      	MOV  R27,R24
000862 2788      	CLR  R24
000863 5058      	SUBI R21,8
000864 cff9      	RJMP __ADDF123
                 __ADDF124:
000865 2355      	TST  R21
000866 f029      	BREQ __ADDF126
                 __ADDF125:
000867 9586      	LSR  R24
000868 95b7      	ROR  R27
000869 95a7      	ROR  R26
00086a 955a      	DEC  R21
00086b f7d9      	BRNE __ADDF125
                 __ADDF126:
00086c 2d50      	MOV  R21,R0
00086d 2551      	EOR  R21,R1
00086e f072      	BRMI __ADDF127
00086f dfcb      	RCALL __UADD12
000870 f438      	BRCC __ADDF129
000871 9567      	ROR  R22
000872 95f7      	ROR  R31
000873 95e7      	ROR  R30
000874 9573      	INC  R23
000875 f413      	BRVC __ADDF129
000876 c020      	RJMP __MAXRES
                 __ADDF128:
000877 dfb7      	RCALL __SWAPACC
                 __ADDF129:
000878 df3e      	RCALL __REPACK
000879 915f      	POP  R21
00087a 9508      	RET
                 __ADDF1211:
00087b f7d8      	BRCC __ADDF128
00087c cffb      	RJMP __ADDF129
                 __ADDF127:
00087d 1bea      	SUB  R30,R26
00087e 0bfb      	SBC  R31,R27
00087f 0b68      	SBC  R22,R24
000880 f051      	BREQ __ZERORES
000881 f410      	BRCC __ADDF1210
000882 9400      	COM  R0
000883 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
000884 2366      	TST  R22
000885 f392      	BRMI __ADDF129
000886 0fee      	LSL  R30
000887 1fff      	ROL  R31
000888 1f66      	ROL  R22
000889 957a      	DEC  R23
00088a f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
00088b 27ee      	CLR  R30
00088c 27ff      	CLR  R31
00088d 2766      	CLR  R22
00088e 2777      	CLR  R23
00088f 915f      	POP  R21
000890 9508      	RET
                 
                 __MINRES:
000891 efef      	SER  R30
000892 efff      	SER  R31
000893 e76f      	LDI  R22,0x7F
000894 ef7f      	SER  R23
000895 915f      	POP  R21
000896 9508      	RET
                 
                 __MAXRES:
000897 efef      	SER  R30
000898 efff      	SER  R31
000899 e76f      	LDI  R22,0x7F
00089a e77f      	LDI  R23,0x7F
00089b 915f      	POP  R21
00089c 9508      	RET
                 
                 __MULF12:
00089d 935f      	PUSH R21
00089e df2a      	RCALL __UNPACK
00089f 3870      	CPI  R23,0x80
0008a0 f351      	BREQ __ZERORES
0008a1 3890      	CPI  R25,0x80
0008a2 f341      	BREQ __ZERORES
0008a3 2401      	EOR  R0,R1
0008a4 9408      	SEC
0008a5 1f79      	ADC  R23,R25
0008a6 f423      	BRVC __MULF124
0008a7 f31c      	BRLT __ZERORES
                 __MULF125:
0008a8 2000      	TST  R0
0008a9 f33a      	BRMI __MINRES
0008aa cfec      	RJMP __MAXRES
                 __MULF124:
0008ab 920f      	PUSH R0
0008ac 931f      	PUSH R17
0008ad 932f      	PUSH R18
0008ae 933f      	PUSH R19
0008af 934f      	PUSH R20
0008b0 2711      	CLR  R17
0008b1 2722      	CLR  R18
0008b2 2799      	CLR  R25
0008b3 9f68      	MUL  R22,R24
0008b4 01a0      	MOVW R20,R0
0008b5 9f8f      	MUL  R24,R31
0008b6 2d30      	MOV  R19,R0
0008b7 0d41      	ADD  R20,R1
0008b8 1f59      	ADC  R21,R25
0008b9 9f6b      	MUL  R22,R27
0008ba 0d30      	ADD  R19,R0
0008bb 1d41      	ADC  R20,R1
0008bc 1f59      	ADC  R21,R25
0008bd 9f8e      	MUL  R24,R30
0008be d027      	RCALL __MULF126
0008bf 9fbf      	MUL  R27,R31
0008c0 d025      	RCALL __MULF126
0008c1 9f6a      	MUL  R22,R26
0008c2 d023      	RCALL __MULF126
0008c3 9fbe      	MUL  R27,R30
0008c4 d01d      	RCALL __MULF127
0008c5 9faf      	MUL  R26,R31
0008c6 d01b      	RCALL __MULF127
0008c7 9fae      	MUL  R26,R30
0008c8 0d11      	ADD  R17,R1
0008c9 1f29      	ADC  R18,R25
0008ca 1f39      	ADC  R19,R25
0008cb 1f49      	ADC  R20,R25
0008cc 1f59      	ADC  R21,R25
0008cd 2fe3      	MOV  R30,R19
0008ce 2ff4      	MOV  R31,R20
0008cf 2f65      	MOV  R22,R21
0008d0 2f52      	MOV  R21,R18
0008d1 914f      	POP  R20
0008d2 913f      	POP  R19
0008d3 912f      	POP  R18
0008d4 911f      	POP  R17
0008d5 900f      	POP  R0
0008d6 2366      	TST  R22
0008d7 f02a      	BRMI __MULF122
0008d8 0f55      	LSL  R21
0008d9 1fee      	ROL  R30
0008da 1fff      	ROL  R31
0008db 1f66      	ROL  R22
0008dc c002      	RJMP __MULF123
                 __MULF122:
0008dd 9573      	INC  R23
0008de f24b      	BRVS __MULF125
                 __MULF123:
0008df decd      	RCALL __ROUND_REPACK
0008e0 915f      	POP  R21
0008e1 9508      	RET
                 
                 __MULF127:
0008e2 0d10      	ADD  R17,R0
0008e3 1d21      	ADC  R18,R1
0008e4 1f39      	ADC  R19,R25
0008e5 c002      	RJMP __MULF128
                 __MULF126:
0008e6 0d20      	ADD  R18,R0
0008e7 1d31      	ADC  R19,R1
                 __MULF128:
0008e8 1f49      	ADC  R20,R25
0008e9 1f59      	ADC  R21,R25
0008ea 9508      	RET
                 
                 __DIVF21:
0008eb 935f      	PUSH R21
0008ec dedc      	RCALL __UNPACK
0008ed 3870      	CPI  R23,0x80
0008ee f421      	BRNE __DIVF210
0008ef 2011      	TST  R1
                 __DIVF211:
0008f0 f40a      	BRPL __DIVF219
0008f1 cf9f      	RJMP __MINRES
                 __DIVF219:
0008f2 cfa4      	RJMP __MAXRES
                 __DIVF210:
0008f3 3890      	CPI  R25,0x80
0008f4 f409      	BRNE __DIVF218
                 __DIVF217:
0008f5 cf95      	RJMP __ZERORES
                 __DIVF218:
0008f6 2401      	EOR  R0,R1
0008f7 9408      	SEC
0008f8 0b97      	SBC  R25,R23
0008f9 f41b      	BRVC __DIVF216
0008fa f3d4      	BRLT __DIVF217
0008fb 2000      	TST  R0
0008fc cff3      	RJMP __DIVF211
                 __DIVF216:
0008fd 2f79      	MOV  R23,R25
0008fe 931f      	PUSH R17
0008ff 932f      	PUSH R18
000900 933f      	PUSH R19
000901 934f      	PUSH R20
000902 2411      	CLR  R1
000903 2711      	CLR  R17
000904 2722      	CLR  R18
000905 2733      	CLR  R19
000906 2744      	CLR  R20
000907 2755      	CLR  R21
000908 e290      	LDI  R25,32
                 __DIVF212:
000909 17ae      	CP   R26,R30
00090a 07bf      	CPC  R27,R31
00090b 0786      	CPC  R24,R22
00090c 0741      	CPC  R20,R17
00090d f030      	BRLO __DIVF213
00090e 1bae      	SUB  R26,R30
00090f 0bbf      	SBC  R27,R31
000910 0b86      	SBC  R24,R22
000911 0b41      	SBC  R20,R17
000912 9408      	SEC
000913 c001      	RJMP __DIVF214
                 __DIVF213:
000914 9488      	CLC
                 __DIVF214:
000915 1f55      	ROL  R21
000916 1f22      	ROL  R18
000917 1f33      	ROL  R19
000918 1c11      	ROL  R1
000919 1faa      	ROL  R26
00091a 1fbb      	ROL  R27
00091b 1f88      	ROL  R24
00091c 1f44      	ROL  R20
00091d 959a      	DEC  R25
00091e f751      	BRNE __DIVF212
00091f 01f9      	MOVW R30,R18
000920 2d61      	MOV  R22,R1
000921 914f      	POP  R20
000922 913f      	POP  R19
000923 912f      	POP  R18
000924 911f      	POP  R17
000925 2366      	TST  R22
000926 f032      	BRMI __DIVF215
000927 0f55      	LSL  R21
000928 1fee      	ROL  R30
000929 1fff      	ROL  R31
00092a 1f66      	ROL  R22
00092b 957a      	DEC  R23
00092c f243      	BRVS __DIVF217
                 __DIVF215:
00092d de7f      	RCALL __ROUND_REPACK
00092e 915f      	POP  R21
00092f 9508      	RET
                 
                 __CMPF12:
000930 2399      	TST  R25
000931 f09a      	BRMI __CMPF120
000932 2377      	TST  R23
000933 f042      	BRMI __CMPF121
000934 1797      	CP   R25,R23
000935 f048      	BRLO __CMPF122
000936 f429      	BRNE __CMPF121
000937 17ae      	CP   R26,R30
000938 07bf      	CPC  R27,R31
000939 0786      	CPC  R24,R22
00093a f020      	BRLO __CMPF122
00093b f031      	BREQ __CMPF123
                 __CMPF121:
00093c 9498      	CLZ
00093d 9488      	CLC
00093e 9508      	RET
                 __CMPF122:
00093f 9498      	CLZ
000940 9408      	SEC
000941 9508      	RET
                 __CMPF123:
000942 9418      	SEZ
000943 9488      	CLC
000944 9508      	RET
                 __CMPF120:
000945 2377      	TST  R23
000946 f7c2      	BRPL __CMPF122
000947 1797      	CP   R25,R23
000948 f398      	BRLO __CMPF121
000949 f7a9      	BRNE __CMPF122
00094a 17ea      	CP   R30,R26
00094b 07fb      	CPC  R31,R27
00094c 0768      	CPC  R22,R24
00094d f388      	BRLO __CMPF122
00094e f399      	BREQ __CMPF123
00094f cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
000950 2400      	CLR  R0
000951 0daf      	ADD  R26,R15
000952 1db0      	ADC  R27,R0
000953 9508      	RET
                 
                 __ANEGD1:
000954 95f0      	COM  R31
000955 9560      	COM  R22
000956 9570      	COM  R23
000957 95e1      	NEG  R30
000958 4fff      	SBCI R31,-1
000959 4f6f      	SBCI R22,-1
00095a 4f7f      	SBCI R23,-1
00095b 9508      	RET
                 
                 __CBD1:
00095c 2ffe      	MOV  R31,R30
00095d 0fff      	ADD  R31,R31
00095e 0bff      	SBC  R31,R31
00095f 2f6f      	MOV  R22,R31
000960 2f7f      	MOV  R23,R31
000961 9508      	RET
                 
                 __CWD1:
000962 2f6f      	MOV  R22,R31
000963 0f66      	ADD  R22,R22
000964 0b66      	SBC  R22,R22
000965 2f76      	MOV  R23,R22
000966 9508      	RET
                 
                 __DIVB21U:
000967 2400      	CLR  R0
000968 e098      	LDI  R25,8
                 __DIVB21U1:
000969 0faa      	LSL  R26
00096a 1c00      	ROL  R0
00096b 1a0e      	SUB  R0,R30
00096c f410      	BRCC __DIVB21U2
00096d 0e0e      	ADD  R0,R30
00096e c001      	RJMP __DIVB21U3
                 __DIVB21U2:
00096f 60a1      	SBR  R26,1
                 __DIVB21U3:
000970 959a      	DEC  R25
000971 f7b9      	BRNE __DIVB21U1
000972 2fea      	MOV  R30,R26
000973 2da0      	MOV  R26,R0
000974 9508      	RET
                 
                 __DIVB21:
000975 d039      	RCALL __CHKSIGNB
000976 dff0      	RCALL __DIVB21U
000977 f40e      	BRTC __DIVB211
000978 95e1      	NEG  R30
                 __DIVB211:
000979 9508      	RET
                 
                 __DIVD21U:
00097a 933f      	PUSH R19
00097b 934f      	PUSH R20
00097c 935f      	PUSH R21
00097d 2400      	CLR  R0
00097e 2411      	CLR  R1
00097f 2744      	CLR  R20
000980 2755      	CLR  R21
000981 e230      	LDI  R19,32
                 __DIVD21U1:
000982 0faa      	LSL  R26
000983 1fbb      	ROL  R27
000984 1f88      	ROL  R24
000985 1f99      	ROL  R25
000986 1c00      	ROL  R0
000987 1c11      	ROL  R1
000988 1f44      	ROL  R20
000989 1f55      	ROL  R21
00098a 1a0e      	SUB  R0,R30
00098b 0a1f      	SBC  R1,R31
00098c 0b46      	SBC  R20,R22
00098d 0b57      	SBC  R21,R23
00098e f428      	BRCC __DIVD21U2
00098f 0e0e      	ADD  R0,R30
000990 1e1f      	ADC  R1,R31
000991 1f46      	ADC  R20,R22
000992 1f57      	ADC  R21,R23
000993 c001      	RJMP __DIVD21U3
                 __DIVD21U2:
000994 60a1      	SBR  R26,1
                 __DIVD21U3:
000995 953a      	DEC  R19
000996 f759      	BRNE __DIVD21U1
000997 01fd      	MOVW R30,R26
000998 01bc      	MOVW R22,R24
000999 01d0      	MOVW R26,R0
00099a 01ca      	MOVW R24,R20
00099b 915f      	POP  R21
00099c 914f      	POP  R20
00099d 913f      	POP  R19
00099e 9508      	RET
                 
                 __MODB21:
00099f 94e8      	CLT
0009a0 ffa7      	SBRS R26,7
0009a1 c002      	RJMP __MODB211
0009a2 95a1      	NEG  R26
0009a3 9468      	SET
                 __MODB211:
0009a4 fde7      	SBRC R30,7
0009a5 95e1      	NEG  R30
0009a6 dfc0      	RCALL __DIVB21U
0009a7 2fea      	MOV  R30,R26
0009a8 f40e      	BRTC __MODB212
0009a9 95e1      	NEG  R30
                 __MODB212:
0009aa 9508      	RET
                 
                 __MODD21U:
0009ab dfce      	RCALL __DIVD21U
0009ac 01fd      	MOVW R30,R26
0009ad 01bc      	MOVW R22,R24
0009ae 9508      	RET
                 
                 __CHKSIGNB:
0009af 94e8      	CLT
0009b0 ffe7      	SBRS R30,7
0009b1 c002      	RJMP __CHKSB1
0009b2 95e1      	NEG  R30
0009b3 9468      	SET
                 __CHKSB1:
0009b4 ffa7      	SBRS R26,7
0009b5 c004      	RJMP __CHKSB2
0009b6 95a1      	NEG  R26
0009b7 f800      	BLD  R0,0
0009b8 9403      	INC  R0
0009b9 fa00      	BST  R0,0
                 __CHKSB2:
0009ba 9508      	RET
                 
                 __GETW1P:
0009bb 91ed      	LD   R30,X+
0009bc 91fc      	LD   R31,X
0009bd 9711      	SBIW R26,1
0009be 9508      	RET
                 
                 __GETD1P:
0009bf 91ed      	LD   R30,X+
0009c0 91fd      	LD   R31,X+
0009c1 916d      	LD   R22,X+
0009c2 917c      	LD   R23,X
0009c3 9713      	SBIW R26,3
0009c4 9508      	RET
                 
                 __GETD1S0:
0009c5 81e8      	LD   R30,Y
0009c6 81f9      	LDD  R31,Y+1
0009c7 816a      	LDD  R22,Y+2
0009c8 817b      	LDD  R23,Y+3
0009c9 9508      	RET
                 
                 __GETD2S0:
0009ca 81a8      	LD   R26,Y
0009cb 81b9      	LDD  R27,Y+1
0009cc 818a      	LDD  R24,Y+2
0009cd 819b      	LDD  R25,Y+3
0009ce 9508      	RET
                 
                 __PUTD1S0:
0009cf 83e8      	ST   Y,R30
0009d0 83f9      	STD  Y+1,R31
0009d1 836a      	STD  Y+2,R22
0009d2 837b      	STD  Y+3,R23
0009d3 9508      	RET
                 
                 __PUTPARD1:
0009d4 937a      	ST   -Y,R23
0009d5 936a      	ST   -Y,R22
0009d6 93fa      	ST   -Y,R31
0009d7 93ea      	ST   -Y,R30
0009d8 9508      	RET
                 
                 __PUTPARD2:
0009d9 939a      	ST   -Y,R25
0009da 938a      	ST   -Y,R24
0009db 93ba      	ST   -Y,R27
0009dc 93aa      	ST   -Y,R26
0009dd 9508      	RET
                 
                 __SWAPD12:
0009de 2e18      	MOV  R1,R24
0009df 2f86      	MOV  R24,R22
0009e0 2d61      	MOV  R22,R1
0009e1 2e19      	MOV  R1,R25
0009e2 2f97      	MOV  R25,R23
0009e3 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
0009e4 2e1b      	MOV  R1,R27
0009e5 2fbf      	MOV  R27,R31
0009e6 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
0009e7 2e1a      	MOV  R1,R26
0009e8 2fae      	MOV  R26,R30
0009e9 2de1      	MOV  R30,R1
0009ea 9508      	RET
                 
                 __CPD10:
0009eb 9730      	SBIW R30,0
0009ec 4060      	SBCI R22,0
0009ed 4070      	SBCI R23,0
0009ee 9508      	RET
                 
                 __SAVELOCR6:
0009ef 935a      	ST   -Y,R21
                 __SAVELOCR5:
0009f0 934a      	ST   -Y,R20
                 __SAVELOCR4:
0009f1 933a      	ST   -Y,R19
                 __SAVELOCR3:
0009f2 932a      	ST   -Y,R18
                 __SAVELOCR2:
0009f3 931a      	ST   -Y,R17
0009f4 930a      	ST   -Y,R16
0009f5 9508      	RET
                 
                 __LOADLOCR6:
0009f6 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0009f7 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0009f8 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0009f9 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0009fa 8119      	LDD  R17,Y+1
0009fb 8108      	LD   R16,Y
0009fc 9508      	RET
                 
                 __INITLOCB:
                 __INITLOCW:
0009fd 0fac      	ADD  R26,R28
0009fe 1fbd      	ADC  R27,R29
                 __INITLOC0:
0009ff 9005      	LPM  R0,Z+
000a00 920d      	ST   X+,R0
000a01 958a      	DEC  R24
000a02 f7e1      	BRNE __INITLOC0
000a03 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :  65 r1 :  34 r2 :   0 r3 :   0 r4 :   4 r5 :   4 r6 :   0 r7 :   2 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  58 r17:  66 r18:  56 r19:  41 r20:  55 r21:  93 r22: 110 r23:  95 
r24:  80 r25:  61 r26: 231 r27: 104 r28:  38 r29:   2 r30: 442 r31: 161 
x  :  41 y  : 404 z  :  25 
Registers used: 25 out of 35 (71.4%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  22 add   :  15 
adiw  :  38 and   :   5 andi  :   7 asr   :   0 bclr  :   0 bld   :   3 
brbc  :   0 brbs  :   0 brcc  :   8 brcs  :   1 break :   0 breq  :  52 
brge  :   5 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  27 
brlt  :   4 brmi  :  11 brne  :  64 brpl  :   9 brsh  :   6 brtc  :   4 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   0 bst   :   3 call  : 177 
cbi   :   6 cbr   :   1 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  50 cls   :   0 clt   :   5 clv   :   0 clz   :   2 com   :   8 
cp    :  19 cpc   :  24 cpi   :  82 cpse  :   0 dec   :  19 des   :   0 
eor   :   9 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   3 ijmp  :   0 
in    :   4 inc   :   5 jmp   :  24 ld    :  51 ldd   : 209 ldi   : 240 
lds   :   0 lpm   :  13 lsl   :  14 lsr   :   3 mov   :  82 movw  :  59 
mul   :  11 muls  :   0 mulsu :   0 neg   :   9 nop   :   0 or    :   1 
ori   :  10 out   :  44 pop   :  22 push  :  22 rcall :  84 ret   :  92 
reti  :   0 rjmp  : 148 rol   :  32 ror   :  15 sbc   :  11 sbci  :  24 
sbi   :   8 sbic  :   6 sbis  :   1 sbiw  :  38 sbr   :   4 sbrc  :   4 
sbrs  :  20 sec   :   5 seh   :   0 sei   :   0 sen   :   0 ser   :   8 
ses   :   0 set   :   4 sev   :   0 sez   :   1 sleep :   0 spm   :   0 
st    :  99 std   :  99 sts   :   2 sub   :   6 subi  :  52 swap  :   1 
tst   :  24 wdr   :   1 
Instructions used: 80 out of 116 (69.0%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x001408   5032     96   5128   32768  15.6%
[.dseg] 0x000060 0x000268      0      8      8    2048   0.4%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 6 warnings
