
AVRASM ver. 2.1.30  C:\Users\Bardia\Desktop\17mordad\1\Debug\List\fancontrol.asm Mon Aug 04 13:53:29 2025

C:\Users\Bardia\Desktop\17mordad\1\Debug\List\fancontrol.asm(1088): warning: Register r5 already defined by the .DEF directive
C:\Users\Bardia\Desktop\17mordad\1\Debug\List\fancontrol.asm(1089): warning: Register r4 already defined by the .DEF directive
C:\Users\Bardia\Desktop\17mordad\1\Debug\List\fancontrol.asm(1090): warning: Register r7 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32
                 ;Program type           : Application
                 ;Clock frequency        : 1.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : float, width, precision
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF __lcd_x=R5
                 	.DEF __lcd_y=R4
                 	.DEF __lcd_maxx=R7
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 004f 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _0x0:
00002a 6554
00002b 706d
00002c 203a
00002d 3425      	.DB  0x54,0x65,0x6D,0x70,0x3A,0x20,0x25,0x34
00002e 322e
00002f 2066
000030 2043
000031 2020      	.DB  0x2E,0x32,0x66,0x20,0x43,0x20,0x20,0x20
000032 4600
000033 6e61
000034 203a
000035 4e4f      	.DB  0x0,0x46,0x61,0x6E,0x3A,0x20,0x4F,0x4E
000036 2020
000037 0020
000038 6146
000039 3a6e      	.DB  0x20,0x20,0x20,0x0,0x46,0x61,0x6E,0x3A
00003a 4f20
00003b 4646
00003c 2020
C:\Users\Bardia\Desktop\17mordad\1\Debug\List\fancontrol.asm(1126): warning: .cseg .db misalignment - padding zero byte
00003d 0000      	.DB  0x20,0x4F,0x46,0x46,0x20,0x20,0x0
                 _0x2000003:
00003e c080      	.DB  0x80,0xC0
                 _0x2020000:
00003f 4e2d
000040 4e41
C:\Users\Bardia\Desktop\17mordad\1\Debug\List\fancontrol.asm(1130): warning: .cseg .db misalignment - padding zero byte
000041 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 _0x20A0060:
C:\Users\Bardia\Desktop\17mordad\1\Debug\List\fancontrol.asm(1132): warning: .cseg .db misalignment - padding zero byte
000042 0001      	.DB  0x1
                 _0x20A0000:
000043 4e2d
000044 4e41
000045 4900
000046 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Users\Bardia\Desktop\17mordad\1\Debug\List\fancontrol.asm(1135): warning: .cseg .db misalignment - padding zero byte
000047 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
000048 0002      	.DW  0x02
000049 0288      	.DW  __base_y_G100
00004a 007c      	.DW  _0x2000003*2
                 
00004b 0001      	.DW  0x01
00004c 028c      	.DW  __seed_G105
00004d 0084      	.DW  _0x20A0060*2
                 
                 _0xFFFFFFFF:
00004e 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00004f 94f8      	CLI
000050 27ee      	CLR  R30
000051 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000052 e0f1      	LDI  R31,1
000053 bffb      	OUT  GICR,R31
000054 bfeb      	OUT  GICR,R30
000055 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000056 e08d      	LDI  R24,(14-2)+1
000057 e0a2      	LDI  R26,2
000058 27bb      	CLR  R27
                 __CLEAR_REG:
000059 93ed      	ST   X+,R30
00005a 958a      	DEC  R24
00005b f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00005c e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00005d e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00005e e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
00005f 93ed      	ST   X+,R30
000060 9701      	SBIW R24,1
000061 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000062 e9e0      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000063 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000064 9185      	LPM  R24,Z+
000065 9195      	LPM  R25,Z+
000066 9700      	SBIW R24,0
000067 f061      	BREQ __GLOBAL_INI_END
000068 91a5      	LPM  R26,Z+
000069 91b5      	LPM  R27,Z+
00006a 9005      	LPM  R0,Z+
00006b 9015      	LPM  R1,Z+
00006c 01bf      	MOVW R22,R30
00006d 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00006e 9005      	LPM  R0,Z+
00006f 920d      	ST   X+,R0
000070 9701      	SBIW R24,1
000071 f7e1      	BRNE __GLOBAL_INI_LOOP
000072 01fb      	MOVW R30,R22
000073 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000074 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000075 bfed      	OUT  SPL,R30
000076 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000077 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000078 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000079 e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00007a 940c 008a 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;#include <mega32.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include <alcd.h>
                 ;#include <stdio.h>
                 ;
                 ;// Voltage Reference: Internal 2.56V, cap. on AREF
                 ;#define ADC_VREF_TYPE ((1<<REFS1) | (1<<REFS0) | (0<<ADLAR))
                 ;
                 ;float adc_value;
                 ;float temperature;
                 ;char temp_str[16];
                 ;char fan_str[16];
                 ;
                 ;unsigned int read_adc(unsigned char adc_input)
                 ; 0000 000F {
                 
                 	.CSEG
                 _read_adc:
                 ; .FSTART _read_adc
                 ; 0000 0010     ADMUX = adc_input | ADC_VREF_TYPE;
00007c 93aa      	ST   -Y,R26
                 ;	adc_input -> Y+0
00007d 81e8      	LD   R30,Y
00007e 6ce0      	ORI  R30,LOW(0xC0)
00007f b9e7      	OUT  0x7,R30
                 ; 0000 0011     // Delay needed for the stabilization of the ADC input voltage
                 ; 0000 0012     delay_us(10);
                +
000080 e083     +LDI R24 , LOW ( 3 )
                +__DELAY_USB_LOOP :
000081 958a     +DEC R24
000082 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 3
                 ; 0000 0013     // Start the AD conversion
                 ; 0000 0014     ADCSRA |= (1<<ADSC);
000083 9a36      	SBI  0x6,6
                 ; 0000 0015     // Wait for the AD conversion to complete
                 ; 0000 0016     while ((ADCSRA & (1<<ADIF)) == 0);
                 _0x3:
000084 9b34      	SBIS 0x6,4
000085 cffe      	RJMP _0x3
                 ; 0000 0017     ADCSRA |= (1<<ADIF);
000086 9a34      	SBI  0x6,4
                 ; 0000 0018     return ADCW;
000087 b1e4      	IN   R30,0x4
000088 b1f5      	IN   R31,0x4+1
000089 c127      	RJMP _0x20C0006
                 ; 0000 0019 }
                 ; .FEND
                 ;
                 ;void main(void)
                 ; 0000 001C {
                 _main:
                 ; .FSTART _main
                 ; 0000 001D     // Port A initialization - for LCD data lines
                 ; 0000 001E     DDRA = 0xFF;  // All pins as output for LCD
00008a efef      	LDI  R30,LOW(255)
00008b bbea      	OUT  0x1A,R30
                 ; 0000 001F     PORTA = 0x00;
00008c e0e0      	LDI  R30,LOW(0)
00008d bbeb      	OUT  0x1B,R30
                 ; 0000 0020 
                 ; 0000 0021     // Port B initialization
                 ; 0000 0022     // Bit7=Out (Fan control), other bits as needed
                 ; 0000 0023     DDRB = (1<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
00008e e8e0      	LDI  R30,LOW(128)
00008f bbe7      	OUT  0x17,R30
                 ; 0000 0024     PORTB = (0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0 ...
000090 e0e0      	LDI  R30,LOW(0)
000091 bbe8      	OUT  0x18,R30
                 ; 0000 0025 
                 ; 0000 0026     // Port C initialization - for LCD control lines
                 ; 0000 0027     DDRC = 0xFF;  // Configure as needed for LCD control
000092 efef      	LDI  R30,LOW(255)
000093 bbe4      	OUT  0x14,R30
                 ; 0000 0028     PORTC = 0x00;
000094 e0e0      	LDI  R30,LOW(0)
000095 bbe5      	OUT  0x15,R30
                 ; 0000 0029 
                 ; 0000 002A     // Port D initialization
                 ; 0000 002B     DDRD = 0x00;  // All inputs
000096 bbe1      	OUT  0x11,R30
                 ; 0000 002C     PORTD = 0x00;
000097 bbe2      	OUT  0x12,R30
                 ; 0000 002D 
                 ; 0000 002E     // Timer/Counter 0 initialization (disabled)
                 ; 0000 002F     TCCR0 = (0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (0<<CS01) | (0<<CS00);
000098 bfe3      	OUT  0x33,R30
                 ; 0000 0030     TCNT0 = 0x00;
000099 bfe2      	OUT  0x32,R30
                 ; 0000 0031     OCR0 = 0x00;
00009a bfec      	OUT  0x3C,R30
                 ; 0000 0032 
                 ; 0000 0033     // Timer/Counter 1 initialization (disabled)
                 ; 0000 0034     TCCR1A = (0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
00009b bdef      	OUT  0x2F,R30
                 ; 0000 0035     TCCR1B = (0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
00009c bdee      	OUT  0x2E,R30
                 ; 0000 0036     TCNT1H = 0x00;
00009d bded      	OUT  0x2D,R30
                 ; 0000 0037     TCNT1L = 0x00;
00009e bdec      	OUT  0x2C,R30
                 ; 0000 0038     ICR1H = 0x00;
00009f bde7      	OUT  0x27,R30
                 ; 0000 0039     ICR1L = 0x00;
0000a0 bde6      	OUT  0x26,R30
                 ; 0000 003A     OCR1AH = 0x00;
0000a1 bdeb      	OUT  0x2B,R30
                 ; 0000 003B     OCR1AL = 0x00;
0000a2 bdea      	OUT  0x2A,R30
                 ; 0000 003C     OCR1BH = 0x00;
0000a3 bde9      	OUT  0x29,R30
                 ; 0000 003D     OCR1BL = 0x00;
0000a4 bde8      	OUT  0x28,R30
                 ; 0000 003E 
                 ; 0000 003F     // Timer/Counter 2 initialization (disabled)
                 ; 0000 0040     ASSR = 0<<AS2;
0000a5 bde2      	OUT  0x22,R30
                 ; 0000 0041     TCCR2 = (0<<PWM2) | (0<<COM21) | (0<<COM20) | (0<<CTC2) | (0<<CS22) | (0<<CS21) | (0<<CS20);
0000a6 bde5      	OUT  0x25,R30
                 ; 0000 0042     TCNT2 = 0x00;
0000a7 bde4      	OUT  0x24,R30
                 ; 0000 0043     OCR2 = 0x00;
0000a8 bde3      	OUT  0x23,R30
                 ; 0000 0044 
                 ; 0000 0045     // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 0046     TIMSK = (0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (0<<TOIE0);
0000a9 bfe9      	OUT  0x39,R30
                 ; 0000 0047 
                 ; 0000 0048     // External Interrupt(s) initialization
                 ; 0000 0049     MCUCR = (0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
0000aa bfe5      	OUT  0x35,R30
                 ; 0000 004A     MCUCSR = (0<<ISC2);
0000ab bfe4      	OUT  0x34,R30
                 ; 0000 004B 
                 ; 0000 004C     // USART initialization (disabled)
                 ; 0000 004D     UCSRB = (0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (0<<RXEN) | (0<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
0000ac b9ea      	OUT  0xA,R30
                 ; 0000 004E 
                 ; 0000 004F     // Analog Comparator initialization (disabled)
                 ; 0000 0050     ACSR = (1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
0000ad e8e0      	LDI  R30,LOW(128)
0000ae b9e8      	OUT  0x8,R30
                 ; 0000 0051 
                 ; 0000 0052     // ADC initialization
                 ; 0000 0053     // ADC Clock frequency: 1000.000 kHz
                 ; 0000 0054     // ADC Voltage Reference: Int., cap. on AREF
                 ; 0000 0055     ADMUX = ADC_VREF_TYPE;
0000af ece0      	LDI  R30,LOW(192)
0000b0 b9e7      	OUT  0x7,R30
                 ; 0000 0056     ADCSRA = (1<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (1<<ADPS1) | (1<<ADPS0);
0000b1 e8e3      	LDI  R30,LOW(131)
0000b2 b9e6      	OUT  0x6,R30
                 ; 0000 0057     SFIOR = (0<<ADTS2) | (0<<ADTS1) | (0<<ADTS0);
0000b3 e0e0      	LDI  R30,LOW(0)
0000b4 bfe0      	OUT  0x30,R30
                 ; 0000 0058 
                 ; 0000 0059     // SPI initialization (disabled)
                 ; 0000 005A     SPCR = (0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
0000b5 b9ed      	OUT  0xD,R30
                 ; 0000 005B 
                 ; 0000 005C     // TWI initialization (disabled)
                 ; 0000 005D     TWCR = (0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
0000b6 bfe6      	OUT  0x36,R30
                 ; 0000 005E 
                 ; 0000 005F 
                 ; 0000 0060     lcd_init(16);
0000b7 e1a0      	LDI  R26,LOW(16)
0000b8 d0cd      	RCALL _lcd_init
                 ; 0000 0061 
                 ; 0000 0062     while (1)
                 _0x6:
                 ; 0000 0063     {
                 ; 0000 0064 
                 ; 0000 0065         adc_value = read_adc(3);
0000b9 e0a3      	LDI  R26,LOW(3)
0000ba dfc1      	RCALL _read_adc
0000bb e6a0      	LDI  R26,LOW(_adc_value)
0000bc e0b2      	LDI  R27,HIGH(_adc_value)
0000bd 2766      	CLR  R22
0000be 2777      	CLR  R23
0000bf 940e 0793 	CALL __CDF1
0000c1 940e 0945 	CALL __PUTDP1
                 ; 0000 0066         temperature = (float)adc_value / 4.0;
0000c3 91a0 0260 	LDS  R26,_adc_value
0000c5 91b0 0261 	LDS  R27,_adc_value+1
0000c7 9180 0262 	LDS  R24,_adc_value+2
0000c9 9190 0263 	LDS  R25,_adc_value+3
                +
0000cb e0e0     +LDI R30 , LOW ( 0x40800000 )
0000cc e0f0     +LDI R31 , HIGH ( 0x40800000 )
0000cd e860     +LDI R22 , BYTE3 ( 0x40800000 )
0000ce e470     +LDI R23 , BYTE4 ( 0x40800000 )
                 	__GETD1N 0x40800000
0000cf 940e 086b 	CALL __DIVF21
0000d1 93e0 0264 	STS  _temperature,R30
0000d3 93f0 0265 	STS  _temperature+1,R31
0000d5 9360 0266 	STS  _temperature+2,R22
0000d7 9370 0267 	STS  _temperature+3,R23
                 ; 0000 0067 
                 ; 0000 0068         // Format temperature string with proper clearing
                 ; 0000 0069         sprintf(temp_str, "Temp: %4.2f C   ", temperature);
0000d9 e6e8      	LDI  R30,LOW(_temp_str)
0000da e0f2      	LDI  R31,HIGH(_temp_str)
0000db 93fa      	ST   -Y,R31
0000dc 93ea      	ST   -Y,R30
                +
0000dd e5e4     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
0000de e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
0000df 93fa      	ST   -Y,R31
0000e0 93ea      	ST   -Y,R30
0000e1 91e0 0264 	LDS  R30,_temperature
0000e3 91f0 0265 	LDS  R31,_temperature+1
0000e5 9160 0266 	LDS  R22,_temperature+2
0000e7 9170 0267 	LDS  R23,_temperature+3
0000e9 940e 0959 	CALL __PUTPARD1
0000eb e084      	LDI  R24,4
0000ec 940e 04d9 	CALL _sprintf
0000ee 9628      	ADIW R28,8
                 ; 0000 006A 
                 ; 0000 006B 
                 ; 0000 006C         if (temperature >= 30.0) {
0000ef 91a0 0264 	LDS  R26,_temperature
0000f1 91b0 0265 	LDS  R27,_temperature+1
0000f3 9180 0266 	LDS  R24,_temperature+2
0000f5 9190 0267 	LDS  R25,_temperature+3
                +
0000f7 e0e0     +LDI R30 , LOW ( 0x41F00000 )
0000f8 e0f0     +LDI R31 , HIGH ( 0x41F00000 )
0000f9 ef60     +LDI R22 , BYTE3 ( 0x41F00000 )
0000fa e471     +LDI R23 , BYTE4 ( 0x41F00000 )
                 	__GETD1N 0x41F00000
0000fb 940e 08b0 	CALL __CMPF12
0000fd f040      	BRLO _0x9
                 ; 0000 006D             PORTB.7=1;
0000fe 9ac7      	SBI  0x18,7
                 ; 0000 006E             sprintf(fan_str, "Fan: ON   ");
0000ff e7e8      	LDI  R30,LOW(_fan_str)
000100 e0f2      	LDI  R31,HIGH(_fan_str)
000101 93fa      	ST   -Y,R31
000102 93ea      	ST   -Y,R30
                +
000103 e6e5     +LDI R30 , LOW ( 2 * _0x0 + ( 17 ) )
000104 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 17 ) )
                 	__POINTW1FN _0x0,17
000105 c007      	RJMP _0x10
                 ; 0000 006F         } else {
                 _0x9:
                 ; 0000 0070             PORTB.7=0;
000106 98c7      	CBI  0x18,7
                 ; 0000 0071             sprintf(fan_str, "Fan: OFF  ");
000107 e7e8      	LDI  R30,LOW(_fan_str)
000108 e0f2      	LDI  R31,HIGH(_fan_str)
000109 93fa      	ST   -Y,R31
00010a 93ea      	ST   -Y,R30
                +
00010b e7e0     +LDI R30 , LOW ( 2 * _0x0 + ( 28 ) )
00010c e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 28 ) )
                 	__POINTW1FN _0x0,28
                 _0x10:
00010d 93fa      	ST   -Y,R31
00010e 93ea      	ST   -Y,R30
00010f e080      	LDI  R24,0
000110 940e 04d9 	CALL _sprintf
000112 9624      	ADIW R28,4
                 ; 0000 0072         }
                 ; 0000 0073 
                 ; 0000 0074         lcd_gotoxy(0, 0);
000113 e0e0      	LDI  R30,LOW(0)
000114 93ea      	ST   -Y,R30
000115 e0a0      	LDI  R26,LOW(0)
000116 d030      	RCALL _lcd_gotoxy
                 ; 0000 0075         lcd_puts(temp_str);
000117 e6a8      	LDI  R26,LOW(_temp_str)
000118 e0b2      	LDI  R27,HIGH(_temp_str)
000119 d05b      	RCALL _lcd_puts
                 ; 0000 0076         lcd_gotoxy(0, 1);
00011a e0e0      	LDI  R30,LOW(0)
00011b 93ea      	ST   -Y,R30
00011c e0a1      	LDI  R26,LOW(1)
00011d d029      	RCALL _lcd_gotoxy
                 ; 0000 0077         lcd_puts(fan_str);
00011e e7a8      	LDI  R26,LOW(_fan_str)
00011f e0b2      	LDI  R27,HIGH(_fan_str)
000120 d054      	RCALL _lcd_puts
                 ; 0000 0078 
                 ; 0000 0079         delay_ms(100);
000121 e6a4      	LDI  R26,LOW(100)
000122 e0b0      	LDI  R27,0
000123 940e 071d 	CALL _delay_ms
                 ; 0000 007A     }
000125 cf93      	RJMP _0x6
                 ; 0000 007B }
                 _0xF:
000126 cfff      	RJMP _0xF
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
                 ; .FSTART __lcd_write_nibble_G100
000127 93aa      	ST   -Y,R26
000128 b3eb      	IN   R30,0x1B
000129 70ef      	ANDI R30,LOW(0xF)
00012a 2fae      	MOV  R26,R30
00012b 81e8      	LD   R30,Y
00012c 7fe0      	ANDI R30,LOW(0xF0)
00012d 2bea      	OR   R30,R26
00012e bbeb      	OUT  0x1B,R30
                +
00012f e082     +LDI R24 , LOW ( 2 )
                +__DELAY_USB_LOOP :
000130 958a     +DEC R24
000131 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 2
000132 9ada      	SBI  0x1B,2
                +
000133 e082     +LDI R24 , LOW ( 2 )
                +__DELAY_USB_LOOP :
000134 958a     +DEC R24
000135 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 2
000136 98da      	CBI  0x1B,2
                +
000137 e082     +LDI R24 , LOW ( 2 )
                +__DELAY_USB_LOOP :
000138 958a     +DEC R24
000139 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 2
00013a c076      	RJMP _0x20C0006
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
00013b 93aa      	ST   -Y,R26
00013c 81a8      	LD   R26,Y
00013d dfe9      	RCALL __lcd_write_nibble_G100
00013e 81e8          ld    r30,y
00013f 95e2          swap  r30
000140 83e8          st    y,r30
000141 81a8      	LD   R26,Y
000142 dfe4      	RCALL __lcd_write_nibble_G100
                +
000143 e181     +LDI R24 , LOW ( 17 )
                +__DELAY_USB_LOOP :
000144 958a     +DEC R24
000145 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 17
000146 c06a      	RJMP _0x20C0006
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
000147 93aa      	ST   -Y,R26
000148 81e8      	LD   R30,Y
000149 e0f0      	LDI  R31,0
00014a 57e8      	SUBI R30,LOW(-__base_y_G100)
00014b 4ffd      	SBCI R31,HIGH(-__base_y_G100)
00014c 81e0      	LD   R30,Z
00014d 81a9      	LDD  R26,Y+1
00014e 0fae      	ADD  R26,R30
00014f dfeb      	RCALL __lcd_write_data
000150 8059      	LDD  R5,Y+1
000151 8048      	LDD  R4,Y+0
000152 9622      	ADIW R28,2
000153 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
000154 e0a2      	LDI  R26,LOW(2)
000155 940e 061c 	CALL SUBOPT_0x0
000157 e0ac      	LDI  R26,LOW(12)
000158 dfe2      	RCALL __lcd_write_data
000159 e0a1      	LDI  R26,LOW(1)
00015a 940e 061c 	CALL SUBOPT_0x0
00015c e0e0      	LDI  R30,LOW(0)
00015d 2e4e      	MOV  R4,R30
00015e 2e5e      	MOV  R5,R30
00015f 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
000160 93aa      	ST   -Y,R26
000161 81a8      	LD   R26,Y
000162 30aa      	CPI  R26,LOW(0xA)
000163 f011      	BREQ _0x2000005
000164 1457      	CP   R5,R7
000165 f048      	BRLO _0x2000004
                 _0x2000005:
000166 e0e0      	LDI  R30,LOW(0)
000167 93ea      	ST   -Y,R30
000168 9443      	INC  R4
000169 2da4      	MOV  R26,R4
00016a dfdc      	RCALL _lcd_gotoxy
00016b 81a8      	LD   R26,Y
00016c 30aa      	CPI  R26,LOW(0xA)
00016d f409      	BRNE _0x2000007
00016e c042      	RJMP _0x20C0006
                 _0x2000007:
                 _0x2000004:
00016f 9453      	INC  R5
000170 9ad8      	SBI  0x1B,0
000171 81a8      	LD   R26,Y
000172 dfc8      	RCALL __lcd_write_data
000173 98d8      	CBI  0x1B,0
000174 c03c      	RJMP _0x20C0006
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
000175 93ba      	ST   -Y,R27
000176 93aa      	ST   -Y,R26
000177 931a      	ST   -Y,R17
                 _0x2000008:
000178 81a9      	LDD  R26,Y+1
000179 81ba      	LDD  R27,Y+1+1
00017a 91ed      	LD   R30,X+
00017b 83a9      	STD  Y+1,R26
00017c 83ba      	STD  Y+1+1,R27
00017d 2f1e      	MOV  R17,R30
00017e 30e0      	CPI  R30,0
00017f f019      	BREQ _0x200000A
000180 2fa1      	MOV  R26,R17
000181 dfde      	RCALL _lcd_putchar
000182 cff5      	RJMP _0x2000008
                 _0x200000A:
000183 8118      	LDD  R17,Y+0
000184 9623      	ADIW R28,3
000185 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
000186 93aa      	ST   -Y,R26
000187 b3ea      	IN   R30,0x1A
000188 6fe0      	ORI  R30,LOW(0xF0)
000189 bbea      	OUT  0x1A,R30
00018a 9ad2      	SBI  0x1A,2
00018b 9ad0      	SBI  0x1A,0
00018c 9ad1      	SBI  0x1A,1
00018d 98da      	CBI  0x1B,2
00018e 98d8      	CBI  0x1B,0
00018f 98d9      	CBI  0x1B,1
000190 8078      	LDD  R7,Y+0
000191 81e8      	LD   R30,Y
000192 58e0      	SUBI R30,-LOW(128)
                +
000193 93e0 028a+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
000195 81e8      	LD   R30,Y
000196 54e0      	SUBI R30,-LOW(192)
                +
000197 93e0 028b+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
000199 e1a4      	LDI  R26,LOW(20)
00019a e0b0      	LDI  R27,0
00019b 940e 071d 	CALL _delay_ms
00019d 940e 0622 	CALL SUBOPT_0x1
00019f 940e 0622 	CALL SUBOPT_0x1
0001a1 940e 0622 	CALL SUBOPT_0x1
0001a3 e2a0      	LDI  R26,LOW(32)
0001a4 df82      	RCALL __lcd_write_nibble_G100
                +
0001a5 e281     +LDI R24 , LOW ( 33 )
                +__DELAY_USB_LOOP :
0001a6 958a     +DEC R24
0001a7 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 33
0001a8 e2a8      	LDI  R26,LOW(40)
0001a9 df91      	RCALL __lcd_write_data
0001aa e0a4      	LDI  R26,LOW(4)
0001ab df8f      	RCALL __lcd_write_data
0001ac e8a5      	LDI  R26,LOW(133)
0001ad df8d      	RCALL __lcd_write_data
0001ae e0a6      	LDI  R26,LOW(6)
0001af df8b      	RCALL __lcd_write_data
0001b0 dfa3      	RCALL _lcd_clear
                 _0x20C0006:
0001b1 9621      	ADIW R28,1
0001b2 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G101:
                 ; .FSTART _put_buff_G101
0001b3 93ba      	ST   -Y,R27
0001b4 93aa      	ST   -Y,R26
0001b5 931a      	ST   -Y,R17
0001b6 930a      	ST   -Y,R16
0001b7 81aa      	LDD  R26,Y+2
0001b8 81bb      	LDD  R27,Y+2+1
0001b9 9612      	ADIW R26,2
0001ba 940e 093b 	CALL __GETW1P
0001bc 9730      	SBIW R30,0
0001bd f129      	BREQ _0x2020010
0001be 81aa      	LDD  R26,Y+2
0001bf 81bb      	LDD  R27,Y+2+1
0001c0 9614      	ADIW R26,4
0001c1 940e 093b 	CALL __GETW1P
0001c3 018f      	MOVW R16,R30
0001c4 9730      	SBIW R30,0
0001c5 f061      	BREQ _0x2020012
                +
0001c6 3002     +CPI R16 , LOW ( 2 )
0001c7 e0e0     +LDI R30 , HIGH ( 2 )
0001c8 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
0001c9 f080      	BRLO _0x2020013
0001ca 01f8      	MOVW R30,R16
0001cb 9731      	SBIW R30,1
0001cc 018f      	MOVW R16,R30
                +
0001cd 81aa     +LDD R26 , Y + 2
0001ce 81bb     +LDD R27 , Y + 2 + 1
0001cf 9614     +ADIW R26 , 4
0001d0 93ed     +ST X + , R30
0001d1 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2020012:
0001d2 81aa      	LDD  R26,Y+2
0001d3 81bb      	LDD  R27,Y+2+1
0001d4 9612      	ADIW R26,2
0001d5 940e 0629 	CALL SUBOPT_0x2
0001d7 9731      	SBIW R30,1
0001d8 81ac      	LDD  R26,Y+4
0001d9 83a0      	STD  Z+0,R26
                 _0x2020013:
0001da 81aa      	LDD  R26,Y+2
0001db 81bb      	LDD  R27,Y+2+1
0001dc 940e 093b 	CALL __GETW1P
0001de 23ff      	TST  R31
0001df f012      	BRMI _0x2020014
0001e0 940e 0629 	CALL SUBOPT_0x2
                 _0x2020014:
0001e2 c006      	RJMP _0x2020015
                 _0x2020010:
0001e3 81aa      	LDD  R26,Y+2
0001e4 81bb      	LDD  R27,Y+2+1
0001e5 efef      	LDI  R30,LOW(65535)
0001e6 efff      	LDI  R31,HIGH(65535)
0001e7 93ed      	ST   X+,R30
0001e8 93fc      	ST   X,R31
                 _0x2020015:
0001e9 8119      	LDD  R17,Y+1
0001ea 8108      	LDD  R16,Y+0
0001eb 9625      	ADIW R28,5
0001ec 9508      	RET
                 ; .FEND
                 __ftoe_G101:
                 ; .FSTART __ftoe_G101
0001ed 940e 062f 	CALL SUBOPT_0x3
0001ef e8e0      	LDI  R30,LOW(128)
0001f0 83ea      	STD  Y+2,R30
0001f1 e3ef      	LDI  R30,LOW(63)
0001f2 83eb      	STD  Y+3,R30
0001f3 940e 0976 	CALL __SAVELOCR4
0001f5 85ee      	LDD  R30,Y+14
0001f6 85ff      	LDD  R31,Y+14+1
0001f7 3fef      	CPI  R30,LOW(0xFFFF)
0001f8 efaf      	LDI  R26,HIGH(0xFFFF)
0001f9 07fa      	CPC  R31,R26
0001fa f449      	BRNE _0x2020019
0001fb 85e8      	LDD  R30,Y+8
0001fc 85f9      	LDD  R31,Y+8+1
0001fd 93fa      	ST   -Y,R31
0001fe 93ea      	ST   -Y,R30
                +
0001ff e7ae     +LDI R26 , LOW ( 2 * _0x2020000 + ( 0 ) )
000200 e0b0     +LDI R27 , HIGH ( 2 * _0x2020000 + ( 0 ) )
                 	__POINTW2FN _0x2020000,0
000201 940e 050d 	CALL _strcpyf
000203 c0b7      	RJMP _0x20C0005
                 _0x2020019:
000204 3fef      	CPI  R30,LOW(0x7FFF)
000205 e7af      	LDI  R26,HIGH(0x7FFF)
000206 07fa      	CPC  R31,R26
000207 f449      	BRNE _0x2020018
000208 85e8      	LDD  R30,Y+8
000209 85f9      	LDD  R31,Y+8+1
00020a 93fa      	ST   -Y,R31
00020b 93ea      	ST   -Y,R30
                +
00020c e7af     +LDI R26 , LOW ( 2 * _0x2020000 + ( 1 ) )
00020d e0b0     +LDI R27 , HIGH ( 2 * _0x2020000 + ( 1 ) )
                 	__POINTW2FN _0x2020000,1
00020e 940e 050d 	CALL _strcpyf
000210 c0aa      	RJMP _0x20C0005
                 _0x2020018:
000211 85ab      	LDD  R26,Y+11
000212 30a7      	CPI  R26,LOW(0x7)
000213 f010      	BRLO _0x202001B
000214 e0e6      	LDI  R30,LOW(6)
000215 87eb      	STD  Y+11,R30
                 _0x202001B:
000216 851b      	LDD  R17,Y+11
                 _0x202001C:
000217 2fe1      	MOV  R30,R17
000218 5011      	SUBI R17,1
000219 30e0      	CPI  R30,0
00021a f019      	BREQ _0x202001E
00021b 940e 0636 	CALL SUBOPT_0x4
00021d cff9      	RJMP _0x202001C
                 _0x202001E:
                +
00021e 85ec     +LDD R30 , Y + 12
00021f 85fd     +LDD R31 , Y + 12 + 1
000220 856e     +LDD R22 , Y + 12 + 2
000221 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
000222 940e 0970 	CALL __CPD10
000224 f421      	BRNE _0x202001F
000225 e030      	LDI  R19,LOW(0)
000226 940e 0636 	CALL SUBOPT_0x4
000228 c02d      	RJMP _0x2020020
                 _0x202001F:
000229 853b      	LDD  R19,Y+11
00022a 940e 0645 	CALL SUBOPT_0x5
00022c f009      	BREQ PC+2
00022d f408      	BRCC PC+2
00022e c00b      	RJMP _0x2020021
00022f 940e 0636 	CALL SUBOPT_0x4
                 _0x2020022:
000231 940e 0645 	CALL SUBOPT_0x5
000233 f028      	BRLO _0x2020024
000234 940e 0650 	CALL SUBOPT_0x6
000236 940e 0655 	CALL SUBOPT_0x7
000238 cff8      	RJMP _0x2020022
                 _0x2020024:
000239 c00d      	RJMP _0x2020025
                 _0x2020021:
                 _0x2020026:
00023a 940e 0645 	CALL SUBOPT_0x5
00023c f440      	BRSH _0x2020028
00023d 940e 0650 	CALL SUBOPT_0x6
00023f 940e 0661 	CALL SUBOPT_0x8
000241 940e 0668 	CALL SUBOPT_0x9
000243 5031      	SUBI R19,LOW(1)
000244 cff5      	RJMP _0x2020026
                 _0x2020028:
000245 940e 0636 	CALL SUBOPT_0x4
                 _0x2020025:
                +
000247 85ec     +LDD R30 , Y + 12
000248 85fd     +LDD R31 , Y + 12 + 1
000249 856e     +LDD R22 , Y + 12 + 2
00024a 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
00024b 940e 066d 	CALL SUBOPT_0xA
00024d 940e 0668 	CALL SUBOPT_0x9
00024f 940e 0645 	CALL SUBOPT_0x5
000251 f020      	BRLO _0x2020029
000252 940e 0650 	CALL SUBOPT_0x6
000254 940e 0655 	CALL SUBOPT_0x7
                 _0x2020029:
                 _0x2020020:
000256 e010      	LDI  R17,LOW(0)
                 _0x202002A:
000257 85eb      	LDD  R30,Y+11
000258 17e1      	CP   R30,R17
000259 f1a8      	BRLO _0x202002C
                +
00025a 81ac     +LDD R26 , Y + 4
00025b 81bd     +LDD R27 , Y + 4 + 1
00025c 818e     +LDD R24 , Y + 4 + 2
00025d 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
00025e 940e 0674 	CALL SUBOPT_0xB
000260 940e 066d 	CALL SUBOPT_0xA
000262 01df      	MOVW R26,R30
000263 01cb      	MOVW R24,R22
000264 940e 0564 	CALL _floor
                +
000266 83ec     +STD Y + 4 , R30
000267 83fd     +STD Y + 4 + 1 , R31
000268 836e     +STD Y + 4 + 2 , R22
000269 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
00026a 940e 0650 	CALL SUBOPT_0x6
00026c 940e 086b 	CALL __DIVF21
00026e 940e 075a 	CALL __CFD1U
000270 2f0e      	MOV  R16,R30
000271 940e 067b 	CALL SUBOPT_0xC
000273 940e 0682 	CALL SUBOPT_0xD
000275 27ff      	CLR  R31
000276 2766      	CLR  R22
000277 2777      	CLR  R23
000278 940e 0793 	CALL __CDF1
                +
00027a 81ac     +LDD R26 , Y + 4
00027b 81bd     +LDD R27 , Y + 4 + 1
00027c 818e     +LDD R24 , Y + 4 + 2
00027d 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
00027e 940e 081d 	CALL __MULF12
000280 940e 0650 	CALL SUBOPT_0x6
000282 940e 0687 	CALL SUBOPT_0xE
000284 940e 0668 	CALL SUBOPT_0x9
000286 2fe1      	MOV  R30,R17
000287 5f1f      	SUBI R17,-1
000288 30e0      	CPI  R30,0
000289 f669      	BRNE _0x202002A
00028a 940e 067b 	CALL SUBOPT_0xC
00028c e2ee      	LDI  R30,LOW(46)
00028d 93ec      	ST   X,R30
00028e cfc8      	RJMP _0x202002A
                 _0x202002C:
00028f 940e 068c 	CALL SUBOPT_0xF
000291 9731      	SBIW R30,1
000292 85aa      	LDD  R26,Y+10
000293 83a0      	STD  Z+0,R26
000294 3030      	CPI  R19,0
000295 f42c      	BRGE _0x202002E
000296 9531      	NEG  R19
000297 85a8      	LDD  R26,Y+8
000298 85b9      	LDD  R27,Y+8+1
000299 e2ed      	LDI  R30,LOW(45)
00029a c003      	RJMP _0x2020113
                 _0x202002E:
00029b 85a8      	LDD  R26,Y+8
00029c 85b9      	LDD  R27,Y+8+1
00029d e2eb      	LDI  R30,LOW(43)
                 _0x2020113:
00029e 93ec      	ST   X,R30
00029f 940e 068c 	CALL SUBOPT_0xF
0002a1 940e 068c 	CALL SUBOPT_0xF
0002a3 9731      	SBIW R30,1
0002a4 01bf      	MOVW R22,R30
0002a5 2fa3      	MOV  R26,R19
0002a6 e0ea      	LDI  R30,LOW(10)
0002a7 940e 08f5 	CALL __DIVB21
0002a9 5de0      	SUBI R30,-LOW(48)
0002aa 01db      	MOVW R26,R22
0002ab 93ec      	ST   X,R30
0002ac 940e 068c 	CALL SUBOPT_0xF
0002ae 9731      	SBIW R30,1
0002af 01bf      	MOVW R22,R30
0002b0 2fa3      	MOV  R26,R19
0002b1 e0ea      	LDI  R30,LOW(10)
0002b2 940e 091f 	CALL __MODB21
0002b4 5de0      	SUBI R30,-LOW(48)
0002b5 01db      	MOVW R26,R22
0002b6 93ec      	ST   X,R30
0002b7 85a8      	LDD  R26,Y+8
0002b8 85b9      	LDD  R27,Y+8+1
0002b9 e0e0      	LDI  R30,LOW(0)
0002ba 93ec      	ST   X,R30
                 _0x20C0005:
0002bb 940e 097d 	CALL __LOADLOCR4
0002bd 9660      	ADIW R28,16
0002be 9508      	RET
                 ; .FEND
                 __print_G101:
                 ; .FSTART __print_G101
0002bf 93ba      	ST   -Y,R27
0002c0 93aa      	ST   -Y,R26
0002c1 97ef      	SBIW R28,63
0002c2 9761      	SBIW R28,17
0002c3 940e 0974 	CALL __SAVELOCR6
0002c5 e010      	LDI  R17,0
                +
0002c6 01fe     +MOVW R30 , R28
0002c7 5ae8     +SUBI R30 , LOW ( - 88 )
0002c8 4fff     +SBCI R31 , HIGH ( - 88 )
0002c9 9001     +LD R0 , Z +
0002ca 81f0     +LD R31 , Z
0002cb 2de0     +MOV R30 , R0
                 	__GETW1SX 88
0002cc 87e8      	STD  Y+8,R30
0002cd 87f9      	STD  Y+8+1,R31
                +
0002ce 01fe     +MOVW R30 , R28
0002cf 5aea     +SUBI R30 , LOW ( - 86 )
0002d0 4fff     +SBCI R31 , HIGH ( - 86 )
0002d1 9001     +LD R0 , Z +
0002d2 81f0     +LD R31 , Z
0002d3 2de0     +MOV R30 , R0
                 	__GETW1SX 86
0002d4 83ee      	STD  Y+6,R30
0002d5 83ff      	STD  Y+6+1,R31
0002d6 81ae      	LDD  R26,Y+6
0002d7 81bf      	LDD  R27,Y+6+1
0002d8 e0e0      	LDI  R30,LOW(0)
0002d9 e0f0      	LDI  R31,HIGH(0)
0002da 93ed      	ST   X+,R30
0002db 93fc      	ST   X,R31
                 _0x2020030:
0002dc 01de      	MOVW R26,R28
0002dd 5aa4      	SUBI R26,LOW(-(92))
0002de 4fbf      	SBCI R27,HIGH(-(92))
0002df 940e 0629 	CALL SUBOPT_0x2
0002e1 9731      	SBIW R30,1
0002e2 91e4      	LPM  R30,Z
0002e3 2f2e      	MOV  R18,R30
0002e4 30e0      	CPI  R30,0
0002e5 f409      	BRNE PC+2
0002e6 c1e9      	RJMP _0x2020032
0002e7 2fe1      	MOV  R30,R17
0002e8 30e0      	CPI  R30,0
0002e9 f439      	BRNE _0x2020036
0002ea 3225      	CPI  R18,37
0002eb f411      	BRNE _0x2020037
0002ec e011      	LDI  R17,LOW(1)
0002ed c002      	RJMP _0x2020038
                 _0x2020037:
0002ee 940e 0692 	CALL SUBOPT_0x10
                 _0x2020038:
0002f0 c1de      	RJMP _0x2020035
                 _0x2020036:
0002f1 30e1      	CPI  R30,LOW(0x1)
0002f2 f4c1      	BRNE _0x2020039
0002f3 3225      	CPI  R18,37
0002f4 f419      	BRNE _0x202003A
0002f5 940e 0692 	CALL SUBOPT_0x10
0002f7 c1d6      	RJMP _0x2020114
                 _0x202003A:
0002f8 e012      	LDI  R17,LOW(2)
0002f9 e0e0      	LDI  R30,LOW(0)
0002fa 8bed      	STD  Y+21,R30
0002fb e000      	LDI  R16,LOW(0)
0002fc 322d      	CPI  R18,45
0002fd f411      	BRNE _0x202003B
0002fe e001      	LDI  R16,LOW(1)
0002ff c1cf      	RJMP _0x2020035
                 _0x202003B:
000300 322b      	CPI  R18,43
000301 f419      	BRNE _0x202003C
000302 e2eb      	LDI  R30,LOW(43)
000303 8bed      	STD  Y+21,R30
000304 c1ca      	RJMP _0x2020035
                 _0x202003C:
000305 3220      	CPI  R18,32
000306 f419      	BRNE _0x202003D
000307 e2e0      	LDI  R30,LOW(32)
000308 8bed      	STD  Y+21,R30
000309 c1c5      	RJMP _0x2020035
                 _0x202003D:
00030a c002      	RJMP _0x202003E
                 _0x2020039:
00030b 30e2      	CPI  R30,LOW(0x2)
00030c f439      	BRNE _0x202003F
                 _0x202003E:
00030d e050      	LDI  R21,LOW(0)
00030e e013      	LDI  R17,LOW(3)
00030f 3320      	CPI  R18,48
000310 f411      	BRNE _0x2020040
000311 6800      	ORI  R16,LOW(128)
000312 c1bc      	RJMP _0x2020035
                 _0x2020040:
000313 c002      	RJMP _0x2020041
                 _0x202003F:
000314 30e3      	CPI  R30,LOW(0x3)
000315 f491      	BRNE _0x2020042
                 _0x2020041:
000316 3320      	CPI  R18,48
000317 f010      	BRLO _0x2020044
000318 332a      	CPI  R18,58
000319 f008      	BRLO _0x2020045
                 _0x2020044:
00031a c007      	RJMP _0x2020043
                 _0x2020045:
00031b e0aa      	LDI  R26,LOW(10)
00031c 9f5a      	MUL  R21,R26
00031d 2d50      	MOV  R21,R0
00031e 2fe2      	MOV  R30,R18
00031f 53e0      	SUBI R30,LOW(48)
000320 0f5e      	ADD  R21,R30
000321 c1ad      	RJMP _0x2020035
                 _0x2020043:
000322 e040      	LDI  R20,LOW(0)
000323 322e      	CPI  R18,46
000324 f411      	BRNE _0x2020046
000325 e014      	LDI  R17,LOW(4)
000326 c1a8      	RJMP _0x2020035
                 _0x2020046:
000327 c00f      	RJMP _0x2020047
                 _0x2020042:
000328 30e4      	CPI  R30,LOW(0x4)
000329 f499      	BRNE _0x2020049
00032a 3320      	CPI  R18,48
00032b f010      	BRLO _0x202004B
00032c 332a      	CPI  R18,58
00032d f008      	BRLO _0x202004C
                 _0x202004B:
00032e c008      	RJMP _0x202004A
                 _0x202004C:
00032f 6200      	ORI  R16,LOW(32)
000330 e0aa      	LDI  R26,LOW(10)
000331 9f4a      	MUL  R20,R26
000332 2d40      	MOV  R20,R0
000333 2fe2      	MOV  R30,R18
000334 53e0      	SUBI R30,LOW(48)
000335 0f4e      	ADD  R20,R30
000336 c198      	RJMP _0x2020035
                 _0x202004A:
                 _0x2020047:
000337 362c      	CPI  R18,108
000338 f419      	BRNE _0x202004D
000339 6002      	ORI  R16,LOW(2)
00033a e015      	LDI  R17,LOW(5)
00033b c193      	RJMP _0x2020035
                 _0x202004D:
00033c c003      	RJMP _0x202004E
                 _0x2020049:
00033d 30e5      	CPI  R30,LOW(0x5)
00033e f009      	BREQ PC+2
00033f c18f      	RJMP _0x2020035
                 _0x202004E:
000340 2fe2      	MOV  R30,R18
000341 36e3      	CPI  R30,LOW(0x63)
000342 f459      	BRNE _0x2020053
000343 940e 0699 	CALL SUBOPT_0x11
000345 940e 06a0 	CALL SUBOPT_0x12
000347 940e 0699 	CALL SUBOPT_0x11
000349 81a4      	LDD  R26,Z+4
00034a 93aa      	ST   -Y,R26
00034b 940e 06a7 	CALL SUBOPT_0x13
00034d c180      	RJMP _0x2020054
                 _0x2020053:
00034e 34e5      	CPI  R30,LOW(0x45)
00034f f011      	BREQ _0x2020057
000350 36e5      	CPI  R30,LOW(0x65)
000351 f409      	BRNE _0x2020058
                 _0x2020057:
000352 c003      	RJMP _0x2020059
                 _0x2020058:
000353 36e6      	CPI  R30,LOW(0x66)
000354 f009      	BREQ PC+2
000355 c048      	RJMP _0x202005A
                 _0x2020059:
000356 01fe      	MOVW R30,R28
000357 9676      	ADIW R30,22
000358 87ee      	STD  Y+14,R30
000359 87ff      	STD  Y+14+1,R31
00035a 940e 06ad 	CALL SUBOPT_0x14
00035c 940e 093f 	CALL __GETD1P
00035e 940e 06b4 	CALL SUBOPT_0x15
000360 940e 06b9 	CALL SUBOPT_0x16
000362 85ad      	LDD  R26,Y+13
000363 23aa      	TST  R26
000364 f032      	BRMI _0x202005B
000365 89ad      	LDD  R26,Y+21
000366 32ab      	CPI  R26,LOW(0x2B)
000367 f059      	BREQ _0x202005D
000368 32a0      	CPI  R26,LOW(0x20)
000369 f081      	BREQ _0x202005F
00036a c017      	RJMP _0x2020060
                 _0x202005B:
00036b 940e 06bb 	CALL SUBOPT_0x17
00036d 940e 0727 	CALL __ANEGF1
00036f 940e 06b4 	CALL SUBOPT_0x15
000371 e2ed      	LDI  R30,LOW(45)
000372 8bed      	STD  Y+21,R30
                 _0x202005D:
000373 ff07      	SBRS R16,7
000374 c005      	RJMP _0x2020061
000375 89ed      	LDD  R30,Y+21
000376 93ea      	ST   -Y,R30
000377 940e 06a7 	CALL SUBOPT_0x13
000379 c008      	RJMP _0x2020062
                 _0x2020061:
                 _0x202005F:
00037a 85ee      	LDD  R30,Y+14
00037b 85ff      	LDD  R31,Y+14+1
00037c 9631      	ADIW R30,1
00037d 87ee      	STD  Y+14,R30
00037e 87ff      	STD  Y+14+1,R31
00037f 9731      	SBIW R30,1
000380 89ad      	LDD  R26,Y+21
000381 83a0      	STD  Z+0,R26
                 _0x2020062:
                 _0x2020060:
000382 ff05      	SBRS R16,5
000383 e046      	LDI  R20,LOW(6)
000384 3626      	CPI  R18,102
000385 f451      	BRNE _0x2020064
000386 940e 06bb 	CALL SUBOPT_0x17
000388 940e 0959 	CALL __PUTPARD1
00038a 934a      	ST   -Y,R20
00038b 89ab      	LDD  R26,Y+19
00038c 89bc      	LDD  R27,Y+19+1
00038d 940e 057b 	CALL _ftoa
00038f c009      	RJMP _0x2020065
                 _0x2020064:
000390 940e 06bb 	CALL SUBOPT_0x17
000392 940e 0959 	CALL __PUTPARD1
000394 934a      	ST   -Y,R20
000395 932a      	ST   -Y,R18
000396 89ac      	LDD  R26,Y+20
000397 89bd      	LDD  R27,Y+20+1
000398 de54      	RCALL __ftoe_G101
                 _0x2020065:
000399 01fe      	MOVW R30,R28
00039a 9676      	ADIW R30,22
00039b 940e 06c0 	CALL SUBOPT_0x18
00039d c01e      	RJMP _0x2020066
                 _0x202005A:
00039e 37e3      	CPI  R30,LOW(0x73)
00039f f439      	BRNE _0x2020068
0003a0 940e 06b9 	CALL SUBOPT_0x16
0003a2 940e 06c8 	CALL SUBOPT_0x19
0003a4 940e 06c0 	CALL SUBOPT_0x18
0003a6 c00e      	RJMP _0x2020069
                 _0x2020068:
0003a7 37e0      	CPI  R30,LOW(0x70)
0003a8 f4c1      	BRNE _0x202006B
0003a9 940e 06b9 	CALL SUBOPT_0x16
0003ab 940e 06c8 	CALL SUBOPT_0x19
0003ad 87ee      	STD  Y+14,R30
0003ae 87ff      	STD  Y+14+1,R31
0003af 85ae      	LDD  R26,Y+14
0003b0 85bf      	LDD  R27,Y+14+1
0003b1 940e 0526 	CALL _strlenf
0003b3 2f1e      	MOV  R17,R30
0003b4 6008      	ORI  R16,LOW(8)
                 _0x2020069:
0003b5 770f      	ANDI R16,LOW(127)
0003b6 3040      	CPI  R20,0
0003b7 f011      	BREQ _0x202006D
0003b8 1741      	CP   R20,R17
0003b9 f008      	BRLO _0x202006E
                 _0x202006D:
0003ba c001      	RJMP _0x202006C
                 _0x202006E:
0003bb 2f14      	MOV  R17,R20
                 _0x202006C:
                 _0x2020066:
0003bc e040      	LDI  R20,LOW(0)
0003bd e0e0      	LDI  R30,LOW(0)
0003be 8bec      	STD  Y+20,R30
0003bf e030      	LDI  R19,LOW(0)
0003c0 c06d      	RJMP _0x202006F
                 _0x202006B:
0003c1 36e4      	CPI  R30,LOW(0x64)
0003c2 f011      	BREQ _0x2020072
0003c3 36e9      	CPI  R30,LOW(0x69)
0003c4 f411      	BRNE _0x2020073
                 _0x2020072:
0003c5 6004      	ORI  R16,LOW(4)
0003c6 c002      	RJMP _0x2020074
                 _0x2020073:
0003c7 37e5      	CPI  R30,LOW(0x75)
0003c8 f4a1      	BRNE _0x2020075
                 _0x2020074:
0003c9 e0ea      	LDI  R30,LOW(10)
0003ca 8bec      	STD  Y+20,R30
0003cb ff01      	SBRS R16,1
0003cc c008      	RJMP _0x2020076
                +
0003cd e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
0003ce ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
0003cf e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
0003d0 e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
0003d1 940e 06cd 	CALL SUBOPT_0x1A
0003d3 e01a      	LDI  R17,LOW(10)
0003d4 c022      	RJMP _0x2020077
                 _0x2020076:
                +
0003d5 e1e0     +LDI R30 , LOW ( 0x2710 )
0003d6 e2f7     +LDI R31 , HIGH ( 0x2710 )
0003d7 e060     +LDI R22 , BYTE3 ( 0x2710 )
0003d8 e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
0003d9 940e 06cd 	CALL SUBOPT_0x1A
0003db e015      	LDI  R17,LOW(5)
0003dc c01a      	RJMP _0x2020077
                 _0x2020075:
0003dd 35e8      	CPI  R30,LOW(0x58)
0003de f411      	BRNE _0x2020079
0003df 6008      	ORI  R16,LOW(8)
0003e0 c003      	RJMP _0x202007A
                 _0x2020079:
0003e1 37e8      	CPI  R30,LOW(0x78)
0003e2 f009      	BREQ PC+2
0003e3 c0ea      	RJMP _0x20200B8
                 _0x202007A:
0003e4 e1e0      	LDI  R30,LOW(16)
0003e5 8bec      	STD  Y+20,R30
0003e6 ff01      	SBRS R16,1
0003e7 c008      	RJMP _0x202007C
                +
0003e8 e0e0     +LDI R30 , LOW ( 0x10000000 )
0003e9 e0f0     +LDI R31 , HIGH ( 0x10000000 )
0003ea e060     +LDI R22 , BYTE3 ( 0x10000000 )
0003eb e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
0003ec 940e 06cd 	CALL SUBOPT_0x1A
0003ee e018      	LDI  R17,LOW(8)
0003ef c007      	RJMP _0x2020077
                 _0x202007C:
                +
0003f0 e0e0     +LDI R30 , LOW ( 0x1000 )
0003f1 e1f0     +LDI R31 , HIGH ( 0x1000 )
0003f2 e060     +LDI R22 , BYTE3 ( 0x1000 )
0003f3 e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
0003f4 940e 06cd 	CALL SUBOPT_0x1A
0003f6 e014      	LDI  R17,LOW(4)
                 _0x2020077:
0003f7 3040      	CPI  R20,0
0003f8 f011      	BREQ _0x202007D
0003f9 770f      	ANDI R16,LOW(127)
0003fa c001      	RJMP _0x202007E
                 _0x202007D:
0003fb e041      	LDI  R20,LOW(1)
                 _0x202007E:
0003fc ff01      	SBRS R16,1
0003fd c008      	RJMP _0x202007F
0003fe 940e 06b9 	CALL SUBOPT_0x16
000400 940e 06ad 	CALL SUBOPT_0x14
000402 9614      	ADIW R26,4
000403 940e 093f 	CALL __GETD1P
000405 c00f      	RJMP _0x2020115
                 _0x202007F:
000406 ff02      	SBRS R16,2
000407 c007      	RJMP _0x2020081
000408 940e 06b9 	CALL SUBOPT_0x16
00040a 940e 06c8 	CALL SUBOPT_0x19
00040c 940e 08e2 	CALL __CWD1
00040e c006      	RJMP _0x2020115
                 _0x2020081:
00040f 940e 06b9 	CALL SUBOPT_0x16
000411 940e 06c8 	CALL SUBOPT_0x19
000413 2766      	CLR  R22
000414 2777      	CLR  R23
                 _0x2020115:
                +
000415 87ea     +STD Y + 10 , R30
000416 87fb     +STD Y + 10 + 1 , R31
000417 876c     +STD Y + 10 + 2 , R22
000418 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000419 ff02      	SBRS R16,2
00041a c012      	RJMP _0x2020083
00041b 85ad      	LDD  R26,Y+13
00041c 23aa      	TST  R26
00041d f442      	BRPL _0x2020084
00041e 940e 06bb 	CALL SUBOPT_0x17
000420 940e 08d4 	CALL __ANEGD1
000422 940e 06b4 	CALL SUBOPT_0x15
000424 e2ed      	LDI  R30,LOW(45)
000425 8bed      	STD  Y+21,R30
                 _0x2020084:
000426 89ed      	LDD  R30,Y+21
000427 30e0      	CPI  R30,0
000428 f019      	BREQ _0x2020085
000429 5f1f      	SUBI R17,-LOW(1)
00042a 5f4f      	SUBI R20,-LOW(1)
00042b c001      	RJMP _0x2020086
                 _0x2020085:
00042c 7f0b      	ANDI R16,LOW(251)
                 _0x2020086:
                 _0x2020083:
00042d 2f34      	MOV  R19,R20
                 _0x202006F:
00042e fd00      	SBRC R16,0
00042f c014      	RJMP _0x2020087
                 _0x2020088:
000430 1715      	CP   R17,R21
000431 f410      	BRSH _0x202008B
000432 1735      	CP   R19,R21
000433 f008      	BRLO _0x202008C
                 _0x202008B:
000434 c00f      	RJMP _0x202008A
                 _0x202008C:
000435 ff07      	SBRS R16,7
000436 c008      	RJMP _0x202008D
000437 ff02      	SBRS R16,2
000438 c004      	RJMP _0x202008E
000439 7f0b      	ANDI R16,LOW(251)
00043a 892d      	LDD  R18,Y+21
00043b 5011      	SUBI R17,LOW(1)
00043c c001      	RJMP _0x202008F
                 _0x202008E:
00043d e320      	LDI  R18,LOW(48)
                 _0x202008F:
00043e c001      	RJMP _0x2020090
                 _0x202008D:
00043f e220      	LDI  R18,LOW(32)
                 _0x2020090:
000440 940e 0692 	CALL SUBOPT_0x10
000442 5051      	SUBI R21,LOW(1)
000443 cfec      	RJMP _0x2020088
                 _0x202008A:
                 _0x2020087:
                 _0x2020091:
000444 1714      	CP   R17,R20
000445 f490      	BRSH _0x2020093
000446 6100      	ORI  R16,LOW(16)
000447 ff02      	SBRS R16,2
000448 c006      	RJMP _0x2020094
000449 940e 06d2 	CALL SUBOPT_0x1B
00044b f009      	BREQ _0x2020095
00044c 5051      	SUBI R21,LOW(1)
                 _0x2020095:
00044d 5011      	SUBI R17,LOW(1)
00044e 5041      	SUBI R20,LOW(1)
                 _0x2020094:
00044f e3e0      	LDI  R30,LOW(48)
000450 93ea      	ST   -Y,R30
000451 940e 06a7 	CALL SUBOPT_0x13
000453 3050      	CPI  R21,0
000454 f009      	BREQ _0x2020096
000455 5051      	SUBI R21,LOW(1)
                 _0x2020096:
000456 5041      	SUBI R20,LOW(1)
000457 cfec      	RJMP _0x2020091
                 _0x2020093:
000458 2f31      	MOV  R19,R17
000459 89ec      	LDD  R30,Y+20
00045a 30e0      	CPI  R30,0
00045b f4b9      	BRNE _0x2020097
                 _0x2020098:
00045c 3030      	CPI  R19,0
00045d f0a1      	BREQ _0x202009A
00045e ff03      	SBRS R16,3
00045f c006      	RJMP _0x202009B
000460 85ee      	LDD  R30,Y+14
000461 85ff      	LDD  R31,Y+14+1
000462 9125      	LPM  R18,Z+
000463 87ee      	STD  Y+14,R30
000464 87ff      	STD  Y+14+1,R31
000465 c005      	RJMP _0x202009C
                 _0x202009B:
000466 85ae      	LDD  R26,Y+14
000467 85bf      	LDD  R27,Y+14+1
000468 912d      	LD   R18,X+
000469 87ae      	STD  Y+14,R26
00046a 87bf      	STD  Y+14+1,R27
                 _0x202009C:
00046b 940e 0692 	CALL SUBOPT_0x10
00046d 3050      	CPI  R21,0
00046e f009      	BREQ _0x202009D
00046f 5051      	SUBI R21,LOW(1)
                 _0x202009D:
000470 5031      	SUBI R19,LOW(1)
000471 cfea      	RJMP _0x2020098
                 _0x202009A:
000472 c051      	RJMP _0x202009E
                 _0x2020097:
                 _0x20200A0:
000473 940e 06e4 	CALL SUBOPT_0x1C
000475 940e 08fa 	CALL __DIVD21U
000477 2f2e      	MOV  R18,R30
000478 302a      	CPI  R18,10
000479 f030      	BRLO _0x20200A2
00047a ff03      	SBRS R16,3
00047b c002      	RJMP _0x20200A3
00047c 5c29      	SUBI R18,-LOW(55)
00047d c001      	RJMP _0x20200A4
                 _0x20200A3:
00047e 5a29      	SUBI R18,-LOW(87)
                 _0x20200A4:
00047f c001      	RJMP _0x20200A5
                 _0x20200A2:
000480 5d20      	SUBI R18,-LOW(48)
                 _0x20200A5:
000481 fd04      	SBRC R16,4
000482 c021      	RJMP _0x20200A7
000483 3321      	CPI  R18,49
000484 f460      	BRSH _0x20200A9
                +
000485 89a8     +LDD R26 , Y + 16
000486 89b9     +LDD R27 , Y + 16 + 1
000487 898a     +LDD R24 , Y + 16 + 2
000488 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
                +
000489 30a1     +CPI R26 , LOW ( 0x1 )
00048a e0e0     +LDI R30 , HIGH ( 0x1 )
00048b 07be     +CPC R27 , R30
00048c e0e0     +LDI R30 , BYTE3 ( 0x1 )
00048d 078e     +CPC R24 , R30
00048e e0e0     +LDI R30 , BYTE4 ( 0x1 )
00048f 079e     +CPC R25 , R30
                 	__CPD2N 0x1
000490 f409      	BRNE _0x20200A8
                 _0x20200A9:
000491 c00b      	RJMP _0x20200AB
                 _0x20200A8:
000492 1743      	CP   R20,R19
000493 f440      	BRSH _0x2020116
000494 1753      	CP   R21,R19
000495 f010      	BRLO _0x20200AE
000496 ff00      	SBRS R16,0
000497 c001      	RJMP _0x20200AF
                 _0x20200AE:
000498 c010      	RJMP _0x20200AD
                 _0x20200AF:
000499 e220      	LDI  R18,LOW(32)
00049a ff07      	SBRS R16,7
00049b c008      	RJMP _0x20200B0
                 _0x2020116:
00049c e320      	LDI  R18,LOW(48)
                 _0x20200AB:
00049d 6100      	ORI  R16,LOW(16)
00049e ff02      	SBRS R16,2
00049f c004      	RJMP _0x20200B1
0004a0 940e 06d2 	CALL SUBOPT_0x1B
0004a2 f009      	BREQ _0x20200B2
0004a3 5051      	SUBI R21,LOW(1)
                 _0x20200B2:
                 _0x20200B1:
                 _0x20200B0:
                 _0x20200A7:
0004a4 940e 0692 	CALL SUBOPT_0x10
0004a6 3050      	CPI  R21,0
0004a7 f009      	BREQ _0x20200B3
0004a8 5051      	SUBI R21,LOW(1)
                 _0x20200B3:
                 _0x20200AD:
0004a9 5031      	SUBI R19,LOW(1)
0004aa 940e 06e4 	CALL SUBOPT_0x1C
0004ac 940e 092b 	CALL __MODD21U
0004ae 940e 06b4 	CALL SUBOPT_0x15
0004b0 89ec      	LDD  R30,Y+20
                +
0004b1 89a8     +LDD R26 , Y + 16
0004b2 89b9     +LDD R27 , Y + 16 + 1
0004b3 898a     +LDD R24 , Y + 16 + 2
0004b4 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
0004b5 27ff      	CLR  R31
0004b6 2766      	CLR  R22
0004b7 2777      	CLR  R23
0004b8 940e 08fa 	CALL __DIVD21U
0004ba 940e 06cd 	CALL SUBOPT_0x1A
                +
0004bc 89e8     +LDD R30 , Y + 16
0004bd 89f9     +LDD R31 , Y + 16 + 1
0004be 896a     +LDD R22 , Y + 16 + 2
0004bf 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
0004c0 940e 0970 	CALL __CPD10
0004c2 f009      	BREQ _0x20200A1
0004c3 cfaf      	RJMP _0x20200A0
                 _0x20200A1:
                 _0x202009E:
0004c4 ff00      	SBRS R16,0
0004c5 c008      	RJMP _0x20200B4
                 _0x20200B5:
0004c6 3050      	CPI  R21,0
0004c7 f031      	BREQ _0x20200B7
0004c8 5051      	SUBI R21,LOW(1)
0004c9 e2e0      	LDI  R30,LOW(32)
0004ca 93ea      	ST   -Y,R30
0004cb 940e 06a7 	CALL SUBOPT_0x13
0004cd cff8      	RJMP _0x20200B5
                 _0x20200B7:
                 _0x20200B4:
                 _0x20200B8:
                 _0x2020054:
                 _0x2020114:
0004ce e010      	LDI  R17,LOW(0)
                 _0x2020035:
0004cf ce0c      	RJMP _0x2020030
                 _0x2020032:
0004d0 81ae      	LDD  R26,Y+6
0004d1 81bf      	LDD  R27,Y+6+1
0004d2 940e 093b 	CALL __GETW1P
0004d4 940e 097b 	CALL __LOADLOCR6
0004d6 96ef      	ADIW R28,63
0004d7 966f      	ADIW R28,31
0004d8 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
0004d9 92ff      	PUSH R15
0004da 2ef8      	MOV  R15,R24
0004db 9726      	SBIW R28,6
0004dc 940e 0976 	CALL __SAVELOCR4
0004de 940e 06ed 	CALL SUBOPT_0x1D
0004e0 9730      	SBIW R30,0
0004e1 f419      	BRNE _0x20200B9
0004e2 efef      	LDI  R30,LOW(65535)
0004e3 efff      	LDI  R31,HIGH(65535)
0004e4 c023      	RJMP _0x20C0004
                 _0x20200B9:
0004e5 01de      	MOVW R26,R28
0004e6 9616      	ADIW R26,6
0004e7 940e 08d0 	CALL __ADDW2R15
0004e9 018d      	MOVW R16,R26
0004ea 940e 06ed 	CALL SUBOPT_0x1D
0004ec 83ee      	STD  Y+6,R30
0004ed 83ff      	STD  Y+6+1,R31
0004ee e0e0      	LDI  R30,LOW(0)
0004ef 87e8      	STD  Y+8,R30
0004f0 87e9      	STD  Y+8+1,R30
0004f1 01de      	MOVW R26,R28
0004f2 961a      	ADIW R26,10
0004f3 940e 08d0 	CALL __ADDW2R15
0004f5 940e 093b 	CALL __GETW1P
0004f7 93fa      	ST   -Y,R31
0004f8 93ea      	ST   -Y,R30
0004f9 931a      	ST   -Y,R17
0004fa 930a      	ST   -Y,R16
0004fb ebe3      	LDI  R30,LOW(_put_buff_G101)
0004fc e0f1      	LDI  R31,HIGH(_put_buff_G101)
0004fd 93fa      	ST   -Y,R31
0004fe 93ea      	ST   -Y,R30
0004ff 01de      	MOVW R26,R28
000500 961a      	ADIW R26,10
000501 ddbd      	RCALL __print_G101
000502 019f      	MOVW R18,R30
000503 81ae      	LDD  R26,Y+6
000504 81bf      	LDD  R27,Y+6+1
000505 e0e0      	LDI  R30,LOW(0)
000506 93ec      	ST   X,R30
000507 01f9      	MOVW R30,R18
                 _0x20C0004:
000508 940e 097d 	CALL __LOADLOCR4
00050a 962a      	ADIW R28,10
00050b 90ff      	POP  R15
00050c 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strcpyf:
                 ; .FSTART _strcpyf
00050d 93ba      	ST   -Y,R27
00050e 93aa      	ST   -Y,R26
00050f 91e9          ld   r30,y+
000510 91f9          ld   r31,y+
000511 91a9          ld   r26,y+
000512 91b9          ld   r27,y+
000513 01cd          movw r24,r26
                 strcpyf0:
000514 9005      	lpm  r0,z+
000515 920d          st   x+,r0
000516 2000          tst  r0
000517 f7e1          brne strcpyf0
000518 01fc          movw r30,r24
000519 9508          ret
                 ; .FEND
                 _strlen:
                 ; .FSTART _strlen
00051a 93ba      	ST   -Y,R27
00051b 93aa      	ST   -Y,R26
00051c 91a9          ld   r26,y+
00051d 91b9          ld   r27,y+
00051e 27ee          clr  r30
00051f 27ff          clr  r31
                 strlen0:
000520 916d          ld   r22,x+
000521 2366          tst  r22
000522 f011          breq strlen1
000523 9631          adiw r30,1
000524 cffb          rjmp strlen0
                 strlen1:
000525 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
000526 93ba      	ST   -Y,R27
000527 93aa      	ST   -Y,R26
000528 27aa          clr  r26
000529 27bb          clr  r27
00052a 91e9          ld   r30,y+
00052b 91f9          ld   r31,y+
                 strlenf0:
00052c 9005      	lpm  r0,z+
00052d 2000          tst  r0
00052e f011          breq strlenf1
00052f 9611          adiw r26,1
000530 cffb          rjmp strlenf0
                 strlenf1:
000531 01fd          movw r30,r26
000532 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 _ftrunc:
                 ; .FSTART _ftrunc
000533 940e 095e 	CALL __PUTPARD2
000535 817b         ldd  r23,y+3
000536 816a         ldd  r22,y+2
000537 81f9         ldd  r31,y+1
000538 81e8         ld   r30,y
000539 fb77         bst  r23,7
00053a 0f77         lsl  r23
00053b fd67         sbrc r22,7
00053c 6071         sbr  r23,1
00053d 2f97         mov  r25,r23
00053e 579e         subi r25,0x7e
00053f f081         breq __ftrunc0
000540 f078         brcs __ftrunc0
000541 3198         cpi  r25,24
000542 f490         brsh __ftrunc1
000543 27aa         clr  r26
000544 27bb         clr  r27
000545 2788         clr  r24
                 __ftrunc2:
000546 9408         sec
000547 9587         ror  r24
000548 95b7         ror  r27
000549 95a7         ror  r26
00054a 959a         dec  r25
00054b f7d1         brne __ftrunc2
00054c 23ea         and  r30,r26
00054d 23fb         and  r31,r27
00054e 2368         and  r22,r24
00054f c005         rjmp __ftrunc1
                 __ftrunc0:
000550 94e8         clt
000551 2777         clr  r23
000552 27ee         clr  r30
000553 27ff         clr  r31
000554 2766         clr  r22
                 __ftrunc1:
000555 776f         cbr  r22,0x80
000556 9576         lsr  r23
000557 f408         brcc __ftrunc3
000558 6860         sbr  r22,0x80
                 __ftrunc3:
000559 f977         bld  r23,7
00055a 91a9         ld   r26,y+
00055b 91b9         ld   r27,y+
00055c 9189         ld   r24,y+
00055d 9199         ld   r25,y+
00055e 17ea         cp   r30,r26
00055f 07fb         cpc  r31,r27
000560 0768         cpc  r22,r24
000561 0779         cpc  r23,r25
000562 fb97         bst  r25,7
000563 9508         ret
                 ; .FEND
                 _floor:
                 ; .FSTART _floor
000564 940e 095e 	CALL __PUTPARD2
000566 940e 094f 	CALL __GETD2S0
000568 940e 0533 	CALL _ftrunc
00056a 940e 0954 	CALL __PUTD1S0
00056c f419          brne __floor1
                 __floor0:
00056d 940e 094a 	CALL __GETD1S0
00056f c009      	RJMP _0x20C0003
                 __floor1:
000570 f7e6          brtc __floor0
000571 940e 094a 	CALL __GETD1S0
                +
000573 e0a0     +LDI R26 , LOW ( 0x3F800000 )
000574 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
000575 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
000576 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
000577 940e 07c6 	CALL __SUBF12
                 _0x20C0003:
000579 9624      	ADIW R28,4
00057a 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _ftoa:
                 ; .FSTART _ftoa
00057b d0b3      	RCALL SUBOPT_0x3
00057c e0e0      	LDI  R30,LOW(0)
00057d 83ea      	STD  Y+2,R30
00057e e3ef      	LDI  R30,LOW(63)
00057f 83eb      	STD  Y+3,R30
000580 931a      	ST   -Y,R17
000581 930a      	ST   -Y,R16
000582 85eb      	LDD  R30,Y+11
000583 85fc      	LDD  R31,Y+11+1
000584 3fef      	CPI  R30,LOW(0xFFFF)
000585 efaf      	LDI  R26,HIGH(0xFFFF)
000586 07fa      	CPC  R31,R26
000587 f431      	BRNE _0x20A000D
000588 d16b      	RCALL SUBOPT_0x1E
                +
000589 e8a6     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 0 ) )
00058a e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 0 ) )
                 	__POINTW2FN _0x20A0000,0
00058b 940e 050d 	CALL _strcpyf
00058d c08a      	RJMP _0x20C0002
                 _0x20A000D:
00058e 3fef      	CPI  R30,LOW(0x7FFF)
00058f e7af      	LDI  R26,HIGH(0x7FFF)
000590 07fa      	CPC  R31,R26
000591 f431      	BRNE _0x20A000C
000592 d161      	RCALL SUBOPT_0x1E
                +
000593 e8a7     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 1 ) )
000594 e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 1 ) )
                 	__POINTW2FN _0x20A0000,1
000595 940e 050d 	CALL _strcpyf
000597 c080      	RJMP _0x20C0002
                 _0x20A000C:
000598 85ac      	LDD  R26,Y+12
000599 23aa      	TST  R26
00059a f452      	BRPL _0x20A000F
                +
00059b 85e9     +LDD R30 , Y + 9
00059c 85fa     +LDD R31 , Y + 9 + 1
00059d 856b     +LDD R22 , Y + 9 + 2
00059e 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
00059f 940e 0727 	CALL __ANEGF1
0005a1 d157      	RCALL SUBOPT_0x1F
0005a2 d15b      	RCALL SUBOPT_0x20
0005a3 e2ed      	LDI  R30,LOW(45)
0005a4 93ec      	ST   X,R30
                 _0x20A000F:
0005a5 85a8      	LDD  R26,Y+8
0005a6 30a7      	CPI  R26,LOW(0x7)
0005a7 f010      	BRLO _0x20A0010
0005a8 e0e6      	LDI  R30,LOW(6)
0005a9 87e8      	STD  Y+8,R30
                 _0x20A0010:
0005aa 8518      	LDD  R17,Y+8
                 _0x20A0011:
0005ab 2fe1      	MOV  R30,R17
0005ac 5011      	SUBI R17,1
0005ad 30e0      	CPI  R30,0
0005ae f021      	BREQ _0x20A0013
0005af d155      	RCALL SUBOPT_0x21
0005b0 d0c3      	RCALL SUBOPT_0xB
0005b1 d158      	RCALL SUBOPT_0x22
0005b2 cff8      	RJMP _0x20A0011
                 _0x20A0013:
0005b3 d15b      	RCALL SUBOPT_0x23
0005b4 940e 07cd 	CALL __ADDF12
0005b6 d142      	RCALL SUBOPT_0x1F
0005b7 e010      	LDI  R17,LOW(0)
                +
0005b8 e0e0     +LDI R30 , LOW ( 0x3F800000 )
0005b9 e0f0     +LDI R31 , HIGH ( 0x3F800000 )
0005ba e860     +LDI R22 , BYTE3 ( 0x3F800000 )
0005bb e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
0005bc d14d      	RCALL SUBOPT_0x22
                 _0x20A0014:
0005bd d151      	RCALL SUBOPT_0x23
0005be 940e 08b0 	CALL __CMPF12
0005c0 f068      	BRLO _0x20A0016
0005c1 d143      	RCALL SUBOPT_0x21
0005c2 d09e      	RCALL SUBOPT_0x8
0005c3 d146      	RCALL SUBOPT_0x22
0005c4 5f1f      	SUBI R17,-LOW(1)
0005c5 3217      	CPI  R17,39
0005c6 f030      	BRLO _0x20A0017
0005c7 d12c      	RCALL SUBOPT_0x1E
                +
0005c8 e8ab     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 5 ) )
0005c9 e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 5 ) )
                 	__POINTW2FN _0x20A0000,5
0005ca 940e 050d 	CALL _strcpyf
0005cc c04b      	RJMP _0x20C0002
                 _0x20A0017:
0005cd cfef      	RJMP _0x20A0014
                 _0x20A0016:
0005ce 3010      	CPI  R17,0
0005cf f421      	BRNE _0x20A0018
0005d0 d12d      	RCALL SUBOPT_0x20
0005d1 e3e0      	LDI  R30,LOW(48)
0005d2 93ec      	ST   X,R30
0005d3 c020      	RJMP _0x20A0019
                 _0x20A0018:
                 _0x20A001A:
0005d4 2fe1      	MOV  R30,R17
0005d5 5011      	SUBI R17,1
0005d6 30e0      	CPI  R30,0
0005d7 f0e1      	BREQ _0x20A001C
0005d8 d12c      	RCALL SUBOPT_0x21
0005d9 d09a      	RCALL SUBOPT_0xB
0005da d092      	RCALL SUBOPT_0xA
0005db 01df      	MOVW R26,R30
0005dc 01cb      	MOVW R24,R22
0005dd 940e 0564 	CALL _floor
0005df d12a      	RCALL SUBOPT_0x22
0005e0 d12e      	RCALL SUBOPT_0x23
0005e1 940e 086b 	CALL __DIVF21
0005e3 940e 075a 	CALL __CFD1U
0005e5 2f0e      	MOV  R16,R30
0005e6 d117      	RCALL SUBOPT_0x20
0005e7 d09a      	RCALL SUBOPT_0xD
0005e8 e0f0      	LDI  R31,0
0005e9 d11b      	RCALL SUBOPT_0x21
0005ea 940e 08e2 	CALL __CWD1
0005ec 940e 0793 	CALL __CDF1
0005ee 940e 081d 	CALL __MULF12
0005f0 d127      	RCALL SUBOPT_0x24
0005f1 d095      	RCALL SUBOPT_0xE
0005f2 d106      	RCALL SUBOPT_0x1F
0005f3 cfe0      	RJMP _0x20A001A
                 _0x20A001C:
                 _0x20A0019:
0005f4 85e8      	LDD  R30,Y+8
0005f5 30e0      	CPI  R30,0
0005f6 f0e9      	BREQ _0x20C0001
0005f7 d106      	RCALL SUBOPT_0x20
0005f8 e2ee      	LDI  R30,LOW(46)
0005f9 93ec      	ST   X,R30
                 _0x20A001E:
0005fa 85e8      	LDD  R30,Y+8
0005fb 50e1      	SUBI R30,LOW(1)
0005fc 87e8      	STD  Y+8,R30
0005fd 5fef      	SUBI R30,-LOW(1)
0005fe f0a9      	BREQ _0x20A0020
0005ff d118      	RCALL SUBOPT_0x24
000600 d060      	RCALL SUBOPT_0x8
000601 d0f7      	RCALL SUBOPT_0x1F
                +
000602 85e9     +LDD R30 , Y + 9
000603 85fa     +LDD R31 , Y + 9 + 1
000604 856b     +LDD R22 , Y + 9 + 2
000605 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000606 940e 075a 	CALL __CFD1U
000608 2f0e      	MOV  R16,R30
000609 d0f4      	RCALL SUBOPT_0x20
00060a d077      	RCALL SUBOPT_0xD
00060b e0f0      	LDI  R31,0
00060c d10b      	RCALL SUBOPT_0x24
00060d 940e 08e2 	CALL __CWD1
00060f 940e 0793 	CALL __CDF1
000611 d075      	RCALL SUBOPT_0xE
000612 d0e6      	RCALL SUBOPT_0x1F
000613 cfe6      	RJMP _0x20A001E
                 _0x20A0020:
                 _0x20C0001:
000614 81ae      	LDD  R26,Y+6
000615 81bf      	LDD  R27,Y+6+1
000616 e0e0      	LDI  R30,LOW(0)
000617 93ec      	ST   X,R30
                 _0x20C0002:
000618 8119      	LDD  R17,Y+1
000619 8108      	LDD  R16,Y+0
00061a 962d      	ADIW R28,13
00061b 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _adc_value:
000260           	.BYTE 0x4
                 _temperature:
000264           	.BYTE 0x4
                 _temp_str:
000268           	.BYTE 0x10
                 _fan_str:
000278           	.BYTE 0x10
                 __base_y_G100:
000288           	.BYTE 0x4
                 __seed_G105:
00028c           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x0:
00061c 940e 013b 	CALL __lcd_write_data
00061e e0a3      	LDI  R26,LOW(3)
00061f e0b0      	LDI  R27,0
000620 940c 071d 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1:
000622 e3a0      	LDI  R26,LOW(48)
000623 940e 0127 	CALL __lcd_write_nibble_G100
                +
000625 e281     +LDI R24 , LOW ( 33 )
                +__DELAY_USB_LOOP :
000626 958a     +DEC R24
000627 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 33
000628 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2:
000629 91ed      	LD   R30,X+
00062a 91fd      	LD   R31,X+
00062b 9631      	ADIW R30,1
00062c 93fe      	ST   -X,R31
00062d 93ee      	ST   -X,R30
00062e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3:
00062f 93ba      	ST   -Y,R27
000630 93aa      	ST   -Y,R26
000631 9724      	SBIW R28,4
000632 e0e0      	LDI  R30,LOW(0)
000633 83e8      	ST   Y,R30
000634 83e9      	STD  Y+1,R30
000635 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x4:
                +
000636 81ac     +LDD R26 , Y + 4
000637 81bd     +LDD R27 , Y + 4 + 1
000638 818e     +LDD R24 , Y + 4 + 2
000639 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
00063a e0e0     +LDI R30 , LOW ( 0x41200000 )
00063b e0f0     +LDI R31 , HIGH ( 0x41200000 )
00063c e260     +LDI R22 , BYTE3 ( 0x41200000 )
00063d e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
00063e 940e 081d 	CALL __MULF12
                +
000640 83ec     +STD Y + 4 , R30
000641 83fd     +STD Y + 4 + 1 , R31
000642 836e     +STD Y + 4 + 2 , R22
000643 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
000644 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x5:
                +
000645 81ec     +LDD R30 , Y + 4
000646 81fd     +LDD R31 , Y + 4 + 1
000647 816e     +LDD R22 , Y + 4 + 2
000648 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
000649 85ac     +LDD R26 , Y + 12
00064a 85bd     +LDD R27 , Y + 12 + 1
00064b 858e     +LDD R24 , Y + 12 + 2
00064c 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
00064d 940e 08b0 	CALL __CMPF12
00064f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x6:
                +
000650 85ac     +LDD R26 , Y + 12
000651 85bd     +LDD R27 , Y + 12 + 1
000652 858e     +LDD R24 , Y + 12 + 2
000653 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000654 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x7:
                +
000655 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000656 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000657 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000658 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000659 940e 081d 	CALL __MULF12
                +
00065b 87ec     +STD Y + 12 , R30
00065c 87fd     +STD Y + 12 + 1 , R31
00065d 876e     +STD Y + 12 + 2 , R22
00065e 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
00065f 5f3f      	SUBI R19,-LOW(1)
000660 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x8:
                +
000661 e0e0     +LDI R30 , LOW ( 0x41200000 )
000662 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000663 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000664 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000665 940e 081d 	CALL __MULF12
000667 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x9:
                +
000668 87ec     +STD Y + 12 , R30
000669 87fd     +STD Y + 12 + 1 , R31
00066a 876e     +STD Y + 12 + 2 , R22
00066b 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
00066c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xA:
                +
00066d e0a0     +LDI R26 , LOW ( 0x3F000000 )
00066e e0b0     +LDI R27 , HIGH ( 0x3F000000 )
00066f e080     +LDI R24 , BYTE3 ( 0x3F000000 )
000670 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
000671 940e 07cd 	CALL __ADDF12
000673 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xB:
                +
000674 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000675 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000676 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000677 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000678 940e 081d 	CALL __MULF12
00067a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xC:
00067b 85a8      	LDD  R26,Y+8
00067c 85b9      	LDD  R27,Y+8+1
00067d 9611      	ADIW R26,1
00067e 87a8      	STD  Y+8,R26
00067f 87b9      	STD  Y+8+1,R27
000680 9711      	SBIW R26,1
000681 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xD:
000682 2fe0      	MOV  R30,R16
000683 5de0      	SUBI R30,-LOW(48)
000684 93ec      	ST   X,R30
000685 2fe0      	MOV  R30,R16
000686 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xE:
000687 940e 0963 	CALL __SWAPD12
000689 940e 07c6 	CALL __SUBF12
00068b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0xF:
00068c 85e8      	LDD  R30,Y+8
00068d 85f9      	LDD  R31,Y+8+1
00068e 9631      	ADIW R30,1
00068f 87e8      	STD  Y+8,R30
000690 87f9      	STD  Y+8+1,R31
000691 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x10:
000692 932a      	ST   -Y,R18
000693 81af      	LDD  R26,Y+7
000694 85b8      	LDD  R27,Y+7+1
000695 85e9      	LDD  R30,Y+9
000696 85fa      	LDD  R31,Y+9+1
000697 9509      	ICALL
000698 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x11:
                +
000699 01fe     +MOVW R30 , R28
00069a 5ae6     +SUBI R30 , LOW ( - 90 )
00069b 4fff     +SBCI R31 , HIGH ( - 90 )
00069c 9001     +LD R0 , Z +
00069d 81f0     +LD R31 , Z
00069e 2de0     +MOV R30 , R0
                 	__GETW1SX 90
00069f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x12:
0006a0 9734      	SBIW R30,4
                +
0006a1 01de     +MOVW R26 , R28
0006a2 5aa6     +SUBI R26 , LOW ( - 90 )
0006a3 4fbf     +SBCI R27 , HIGH ( - 90 )
0006a4 93ed     +ST X + , R30
0006a5 93fc     +ST X , R31
                 	__PUTW1SX 90
0006a6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x13:
0006a7 81af      	LDD  R26,Y+7
0006a8 85b8      	LDD  R27,Y+7+1
0006a9 85e9      	LDD  R30,Y+9
0006aa 85fa      	LDD  R31,Y+9+1
0006ab 9509      	ICALL
0006ac 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x14:
                +
0006ad 01de     +MOVW R26 , R28
0006ae 5aa6     +SUBI R26 , LOW ( - 90 )
0006af 4fbf     +SBCI R27 , HIGH ( - 90 )
0006b0 900d     +LD R0 , X +
0006b1 91bc     +LD R27 , X
0006b2 2da0     +MOV R26 , R0
                 	__GETW2SX 90
0006b3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x15:
                +
0006b4 87ea     +STD Y + 10 , R30
0006b5 87fb     +STD Y + 10 + 1 , R31
0006b6 876c     +STD Y + 10 + 2 , R22
0006b7 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
0006b8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x16:
0006b9 dfdf      	RCALL SUBOPT_0x11
0006ba cfe5      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x17:
                +
0006bb 85ea     +LDD R30 , Y + 10
0006bc 85fb     +LDD R31 , Y + 10 + 1
0006bd 856c     +LDD R22 , Y + 10 + 2
0006be 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
0006bf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x18:
0006c0 87ee      	STD  Y+14,R30
0006c1 87ff      	STD  Y+14+1,R31
0006c2 85ae      	LDD  R26,Y+14
0006c3 85bf      	LDD  R27,Y+14+1
0006c4 940e 051a 	CALL _strlen
0006c6 2f1e      	MOV  R17,R30
0006c7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x19:
0006c8 dfe4      	RCALL SUBOPT_0x14
0006c9 9614      	ADIW R26,4
0006ca 940e 093b 	CALL __GETW1P
0006cc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1A:
                +
0006cd 8be8     +STD Y + 16 , R30
0006ce 8bf9     +STD Y + 16 + 1 , R31
0006cf 8b6a     +STD Y + 16 + 2 , R22
0006d0 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
0006d1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x1B:
0006d2 7f0b      	ANDI R16,LOW(251)
0006d3 89ed      	LDD  R30,Y+21
0006d4 93ea      	ST   -Y,R30
                +
0006d5 01de     +MOVW R26 , R28
0006d6 5aa9     +SUBI R26 , LOW ( - 87 )
0006d7 4fbf     +SBCI R27 , HIGH ( - 87 )
0006d8 900d     +LD R0 , X +
0006d9 91bc     +LD R27 , X
0006da 2da0     +MOV R26 , R0
                 	__GETW2SX 87
                +
0006db 01fe     +MOVW R30 , R28
0006dc 5ae7     +SUBI R30 , LOW ( - 89 )
0006dd 4fff     +SBCI R31 , HIGH ( - 89 )
0006de 9001     +LD R0 , Z +
0006df 81f0     +LD R31 , Z
0006e0 2de0     +MOV R30 , R0
                 	__GETW1SX 89
0006e1 9509      	ICALL
0006e2 3050      	CPI  R21,0
0006e3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1C:
                +
0006e4 89e8     +LDD R30 , Y + 16
0006e5 89f9     +LDD R31 , Y + 16 + 1
0006e6 896a     +LDD R22 , Y + 16 + 2
0006e7 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
0006e8 85aa     +LDD R26 , Y + 10
0006e9 85bb     +LDD R27 , Y + 10 + 1
0006ea 858c     +LDD R24 , Y + 10 + 2
0006eb 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
0006ec 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1D:
0006ed 01de      	MOVW R26,R28
0006ee 961c      	ADIW R26,12
0006ef 940e 08d0 	CALL __ADDW2R15
0006f1 940e 093b 	CALL __GETW1P
0006f3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1E:
0006f4 81ee      	LDD  R30,Y+6
0006f5 81ff      	LDD  R31,Y+6+1
0006f6 93fa      	ST   -Y,R31
0006f7 93ea      	ST   -Y,R30
0006f8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1F:
                +
0006f9 87e9     +STD Y + 9 , R30
0006fa 87fa     +STD Y + 9 + 1 , R31
0006fb 876b     +STD Y + 9 + 2 , R22
0006fc 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
0006fd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x20:
0006fe 81ae      	LDD  R26,Y+6
0006ff 81bf      	LDD  R27,Y+6+1
000700 9611      	ADIW R26,1
000701 83ae      	STD  Y+6,R26
000702 83bf      	STD  Y+6+1,R27
000703 9711      	SBIW R26,1
000704 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x21:
                +
000705 81aa     +LDD R26 , Y + 2
000706 81bb     +LDD R27 , Y + 2 + 1
000707 818c     +LDD R24 , Y + 2 + 2
000708 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
000709 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x22:
                +
00070a 83ea     +STD Y + 2 , R30
00070b 83fb     +STD Y + 2 + 1 , R31
00070c 836c     +STD Y + 2 + 2 , R22
00070d 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
00070e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x23:
                +
00070f 81ea     +LDD R30 , Y + 2
000710 81fb     +LDD R31 , Y + 2 + 1
000711 816c     +LDD R22 , Y + 2 + 2
000712 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
000713 85a9     +LDD R26 , Y + 9
000714 85ba     +LDD R27 , Y + 9 + 1
000715 858b     +LDD R24 , Y + 9 + 2
000716 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000717 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x24:
                +
000718 85a9     +LDD R26 , Y + 9
000719 85ba     +LDD R27 , Y + 9 + 1
00071a 858b     +LDD R24 , Y + 9 + 2
00071b 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
00071c 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
00071d 9610      	adiw r26,0
00071e f039      	breq __delay_ms1
                 __delay_ms0:
                +
00071f ef8a     +LDI R24 , LOW ( 0xFA )
000720 e090     +LDI R25 , HIGH ( 0xFA )
                +__DELAY_USW_LOOP :
000721 9701     +SBIW R24 , 1
000722 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xFA
000723 95a8      	wdr
000724 9711      	sbiw r26,1
000725 f7c9      	brne __delay_ms0
                 __delay_ms1:
000726 9508      	ret
                 
                 __ANEGF1:
000727 9730      	SBIW R30,0
000728 4060      	SBCI R22,0
000729 4070      	SBCI R23,0
00072a f009      	BREQ __ANEGF10
00072b 5870      	SUBI R23,0x80
                 __ANEGF10:
00072c 9508      	RET
                 
                 __ROUND_REPACK:
00072d 2355      	TST  R21
00072e f442      	BRPL __REPACK
00072f 3850      	CPI  R21,0x80
000730 f411      	BRNE __ROUND_REPACK0
000731 ffe0      	SBRS R30,0
000732 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
000733 9631      	ADIW R30,1
000734 1f69      	ADC  R22,R25
000735 1f79      	ADC  R23,R25
000736 f06b      	BRVS __REPACK1
                 
                 __REPACK:
000737 e850      	LDI  R21,0x80
000738 2757      	EOR  R21,R23
000739 f411      	BRNE __REPACK0
00073a 935f      	PUSH R21
00073b c0cf      	RJMP __ZERORES
                 __REPACK0:
00073c 3f5f      	CPI  R21,0xFF
00073d f031      	BREQ __REPACK1
00073e 0f66      	LSL  R22
00073f 0c00      	LSL  R0
000740 9557      	ROR  R21
000741 9567      	ROR  R22
000742 2f75      	MOV  R23,R21
000743 9508      	RET
                 __REPACK1:
000744 935f      	PUSH R21
000745 2000      	TST  R0
000746 f00a      	BRMI __REPACK2
000747 c0cf      	RJMP __MAXRES
                 __REPACK2:
000748 c0c8      	RJMP __MINRES
                 
                 __UNPACK:
000749 e850      	LDI  R21,0x80
00074a 2e19      	MOV  R1,R25
00074b 2215      	AND  R1,R21
00074c 0f88      	LSL  R24
00074d 1f99      	ROL  R25
00074e 2795      	EOR  R25,R21
00074f 0f55      	LSL  R21
000750 9587      	ROR  R24
                 
                 __UNPACK1:
000751 e850      	LDI  R21,0x80
000752 2e07      	MOV  R0,R23
000753 2205      	AND  R0,R21
000754 0f66      	LSL  R22
000755 1f77      	ROL  R23
000756 2775      	EOR  R23,R21
000757 0f55      	LSL  R21
000758 9567      	ROR  R22
000759 9508      	RET
                 
                 __CFD1U:
00075a 9468      	SET
00075b c001      	RJMP __CFD1U0
                 __CFD1:
00075c 94e8      	CLT
                 __CFD1U0:
00075d 935f      	PUSH R21
00075e dff2      	RCALL __UNPACK1
00075f 3870      	CPI  R23,0x80
000760 f018      	BRLO __CFD10
000761 3f7f      	CPI  R23,0xFF
000762 f408      	BRCC __CFD10
000763 c0a7      	RJMP __ZERORES
                 __CFD10:
000764 e156      	LDI  R21,22
000765 1b57      	SUB  R21,R23
000766 f4aa      	BRPL __CFD11
000767 9551      	NEG  R21
000768 3058      	CPI  R21,8
000769 f40e      	BRTC __CFD19
00076a 3059      	CPI  R21,9
                 __CFD19:
00076b f030      	BRLO __CFD17
00076c efef      	SER  R30
00076d efff      	SER  R31
00076e ef6f      	SER  R22
00076f e77f      	LDI  R23,0x7F
000770 f977      	BLD  R23,7
000771 c01a      	RJMP __CFD15
                 __CFD17:
000772 2777      	CLR  R23
000773 2355      	TST  R21
000774 f0b9      	BREQ __CFD15
                 __CFD18:
000775 0fee      	LSL  R30
000776 1fff      	ROL  R31
000777 1f66      	ROL  R22
000778 1f77      	ROL  R23
000779 955a      	DEC  R21
00077a f7d1      	BRNE __CFD18
00077b c010      	RJMP __CFD15
                 __CFD11:
00077c 2777      	CLR  R23
                 __CFD12:
00077d 3058      	CPI  R21,8
00077e f028      	BRLO __CFD13
00077f 2fef      	MOV  R30,R31
000780 2ff6      	MOV  R31,R22
000781 2f67      	MOV  R22,R23
000782 5058      	SUBI R21,8
000783 cff9      	RJMP __CFD12
                 __CFD13:
000784 2355      	TST  R21
000785 f031      	BREQ __CFD15
                 __CFD14:
000786 9576      	LSR  R23
000787 9567      	ROR  R22
000788 95f7      	ROR  R31
000789 95e7      	ROR  R30
00078a 955a      	DEC  R21
00078b f7d1      	BRNE __CFD14
                 __CFD15:
00078c 2000      	TST  R0
00078d f40a      	BRPL __CFD16
00078e d145      	RCALL __ANEGD1
                 __CFD16:
00078f 915f      	POP  R21
000790 9508      	RET
                 
                 __CDF1U:
000791 9468      	SET
000792 c001      	RJMP __CDF1U0
                 __CDF1:
000793 94e8      	CLT
                 __CDF1U0:
000794 9730      	SBIW R30,0
000795 4060      	SBCI R22,0
000796 4070      	SBCI R23,0
000797 f0b1      	BREQ __CDF10
000798 2400      	CLR  R0
000799 f026      	BRTS __CDF11
00079a 2377      	TST  R23
00079b f412      	BRPL __CDF11
00079c 9400      	COM  R0
00079d d136      	RCALL __ANEGD1
                 __CDF11:
00079e 2e17      	MOV  R1,R23
00079f e17e      	LDI  R23,30
0007a0 2011      	TST  R1
                 __CDF12:
0007a1 f032      	BRMI __CDF13
0007a2 957a      	DEC  R23
0007a3 0fee      	LSL  R30
0007a4 1fff      	ROL  R31
0007a5 1f66      	ROL  R22
0007a6 1c11      	ROL  R1
0007a7 cff9      	RJMP __CDF12
                 __CDF13:
0007a8 2fef      	MOV  R30,R31
0007a9 2ff6      	MOV  R31,R22
0007aa 2d61      	MOV  R22,R1
0007ab 935f      	PUSH R21
0007ac df8a      	RCALL __REPACK
0007ad 915f      	POP  R21
                 __CDF10:
0007ae 9508      	RET
                 
                 __SWAPACC:
0007af 934f      	PUSH R20
0007b0 01af      	MOVW R20,R30
0007b1 01fd      	MOVW R30,R26
0007b2 01da      	MOVW R26,R20
0007b3 01ab      	MOVW R20,R22
0007b4 01bc      	MOVW R22,R24
0007b5 01ca      	MOVW R24,R20
0007b6 2d40      	MOV  R20,R0
0007b7 2c01      	MOV  R0,R1
0007b8 2e14      	MOV  R1,R20
0007b9 914f      	POP  R20
0007ba 9508      	RET
                 
                 __UADD12:
0007bb 0fea      	ADD  R30,R26
0007bc 1ffb      	ADC  R31,R27
0007bd 1f68      	ADC  R22,R24
0007be 9508      	RET
                 
                 __NEGMAN1:
0007bf 95e0      	COM  R30
0007c0 95f0      	COM  R31
0007c1 9560      	COM  R22
0007c2 5fef      	SUBI R30,-1
0007c3 4fff      	SBCI R31,-1
0007c4 4f6f      	SBCI R22,-1
0007c5 9508      	RET
                 
                 __SUBF12:
0007c6 935f      	PUSH R21
0007c7 df81      	RCALL __UNPACK
0007c8 3890      	CPI  R25,0x80
0007c9 f171      	BREQ __ADDF129
0007ca e850      	LDI  R21,0x80
0007cb 2615      	EOR  R1,R21
                 
0007cc c004      	RJMP __ADDF120
                 
                 __ADDF12:
0007cd 935f      	PUSH R21
0007ce df7a      	RCALL __UNPACK
0007cf 3890      	CPI  R25,0x80
0007d0 f139      	BREQ __ADDF129
                 
                 __ADDF120:
0007d1 3870      	CPI  R23,0x80
0007d2 f121      	BREQ __ADDF128
                 __ADDF121:
0007d3 2f57      	MOV  R21,R23
0007d4 1b59      	SUB  R21,R25
0007d5 f12b      	BRVS __ADDF1211
0007d6 f412      	BRPL __ADDF122
0007d7 dfd7      	RCALL __SWAPACC
0007d8 cffa      	RJMP __ADDF121
                 __ADDF122:
0007d9 3158      	CPI  R21,24
0007da f018      	BRLO __ADDF123
0007db 27aa      	CLR  R26
0007dc 27bb      	CLR  R27
0007dd 2788      	CLR  R24
                 __ADDF123:
0007de 3058      	CPI  R21,8
0007df f028      	BRLO __ADDF124
0007e0 2fab      	MOV  R26,R27
0007e1 2fb8      	MOV  R27,R24
0007e2 2788      	CLR  R24
0007e3 5058      	SUBI R21,8
0007e4 cff9      	RJMP __ADDF123
                 __ADDF124:
0007e5 2355      	TST  R21
0007e6 f029      	BREQ __ADDF126
                 __ADDF125:
0007e7 9586      	LSR  R24
0007e8 95b7      	ROR  R27
0007e9 95a7      	ROR  R26
0007ea 955a      	DEC  R21
0007eb f7d9      	BRNE __ADDF125
                 __ADDF126:
0007ec 2d50      	MOV  R21,R0
0007ed 2551      	EOR  R21,R1
0007ee f072      	BRMI __ADDF127
0007ef dfcb      	RCALL __UADD12
0007f0 f438      	BRCC __ADDF129
0007f1 9567      	ROR  R22
0007f2 95f7      	ROR  R31
0007f3 95e7      	ROR  R30
0007f4 9573      	INC  R23
0007f5 f413      	BRVC __ADDF129
0007f6 c020      	RJMP __MAXRES
                 __ADDF128:
0007f7 dfb7      	RCALL __SWAPACC
                 __ADDF129:
0007f8 df3e      	RCALL __REPACK
0007f9 915f      	POP  R21
0007fa 9508      	RET
                 __ADDF1211:
0007fb f7d8      	BRCC __ADDF128
0007fc cffb      	RJMP __ADDF129
                 __ADDF127:
0007fd 1bea      	SUB  R30,R26
0007fe 0bfb      	SBC  R31,R27
0007ff 0b68      	SBC  R22,R24
000800 f051      	BREQ __ZERORES
000801 f410      	BRCC __ADDF1210
000802 9400      	COM  R0
000803 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
000804 2366      	TST  R22
000805 f392      	BRMI __ADDF129
000806 0fee      	LSL  R30
000807 1fff      	ROL  R31
000808 1f66      	ROL  R22
000809 957a      	DEC  R23
00080a f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
00080b 27ee      	CLR  R30
00080c 27ff      	CLR  R31
00080d 2766      	CLR  R22
00080e 2777      	CLR  R23
00080f 915f      	POP  R21
000810 9508      	RET
                 
                 __MINRES:
000811 efef      	SER  R30
000812 efff      	SER  R31
000813 e76f      	LDI  R22,0x7F
000814 ef7f      	SER  R23
000815 915f      	POP  R21
000816 9508      	RET
                 
                 __MAXRES:
000817 efef      	SER  R30
000818 efff      	SER  R31
000819 e76f      	LDI  R22,0x7F
00081a e77f      	LDI  R23,0x7F
00081b 915f      	POP  R21
00081c 9508      	RET
                 
                 __MULF12:
00081d 935f      	PUSH R21
00081e df2a      	RCALL __UNPACK
00081f 3870      	CPI  R23,0x80
000820 f351      	BREQ __ZERORES
000821 3890      	CPI  R25,0x80
000822 f341      	BREQ __ZERORES
000823 2401      	EOR  R0,R1
000824 9408      	SEC
000825 1f79      	ADC  R23,R25
000826 f423      	BRVC __MULF124
000827 f31c      	BRLT __ZERORES
                 __MULF125:
000828 2000      	TST  R0
000829 f33a      	BRMI __MINRES
00082a cfec      	RJMP __MAXRES
                 __MULF124:
00082b 920f      	PUSH R0
00082c 931f      	PUSH R17
00082d 932f      	PUSH R18
00082e 933f      	PUSH R19
00082f 934f      	PUSH R20
000830 2711      	CLR  R17
000831 2722      	CLR  R18
000832 2799      	CLR  R25
000833 9f68      	MUL  R22,R24
000834 01a0      	MOVW R20,R0
000835 9f8f      	MUL  R24,R31
000836 2d30      	MOV  R19,R0
000837 0d41      	ADD  R20,R1
000838 1f59      	ADC  R21,R25
000839 9f6b      	MUL  R22,R27
00083a 0d30      	ADD  R19,R0
00083b 1d41      	ADC  R20,R1
00083c 1f59      	ADC  R21,R25
00083d 9f8e      	MUL  R24,R30
00083e d027      	RCALL __MULF126
00083f 9fbf      	MUL  R27,R31
000840 d025      	RCALL __MULF126
000841 9f6a      	MUL  R22,R26
000842 d023      	RCALL __MULF126
000843 9fbe      	MUL  R27,R30
000844 d01d      	RCALL __MULF127
000845 9faf      	MUL  R26,R31
000846 d01b      	RCALL __MULF127
000847 9fae      	MUL  R26,R30
000848 0d11      	ADD  R17,R1
000849 1f29      	ADC  R18,R25
00084a 1f39      	ADC  R19,R25
00084b 1f49      	ADC  R20,R25
00084c 1f59      	ADC  R21,R25
00084d 2fe3      	MOV  R30,R19
00084e 2ff4      	MOV  R31,R20
00084f 2f65      	MOV  R22,R21
000850 2f52      	MOV  R21,R18
000851 914f      	POP  R20
000852 913f      	POP  R19
000853 912f      	POP  R18
000854 911f      	POP  R17
000855 900f      	POP  R0
000856 2366      	TST  R22
000857 f02a      	BRMI __MULF122
000858 0f55      	LSL  R21
000859 1fee      	ROL  R30
00085a 1fff      	ROL  R31
00085b 1f66      	ROL  R22
00085c c002      	RJMP __MULF123
                 __MULF122:
00085d 9573      	INC  R23
00085e f24b      	BRVS __MULF125
                 __MULF123:
00085f decd      	RCALL __ROUND_REPACK
000860 915f      	POP  R21
000861 9508      	RET
                 
                 __MULF127:
000862 0d10      	ADD  R17,R0
000863 1d21      	ADC  R18,R1
000864 1f39      	ADC  R19,R25
000865 c002      	RJMP __MULF128
                 __MULF126:
000866 0d20      	ADD  R18,R0
000867 1d31      	ADC  R19,R1
                 __MULF128:
000868 1f49      	ADC  R20,R25
000869 1f59      	ADC  R21,R25
00086a 9508      	RET
                 
                 __DIVF21:
00086b 935f      	PUSH R21
00086c dedc      	RCALL __UNPACK
00086d 3870      	CPI  R23,0x80
00086e f421      	BRNE __DIVF210
00086f 2011      	TST  R1
                 __DIVF211:
000870 f40a      	BRPL __DIVF219
000871 cf9f      	RJMP __MINRES
                 __DIVF219:
000872 cfa4      	RJMP __MAXRES
                 __DIVF210:
000873 3890      	CPI  R25,0x80
000874 f409      	BRNE __DIVF218
                 __DIVF217:
000875 cf95      	RJMP __ZERORES
                 __DIVF218:
000876 2401      	EOR  R0,R1
000877 9408      	SEC
000878 0b97      	SBC  R25,R23
000879 f41b      	BRVC __DIVF216
00087a f3d4      	BRLT __DIVF217
00087b 2000      	TST  R0
00087c cff3      	RJMP __DIVF211
                 __DIVF216:
00087d 2f79      	MOV  R23,R25
00087e 931f      	PUSH R17
00087f 932f      	PUSH R18
000880 933f      	PUSH R19
000881 934f      	PUSH R20
000882 2411      	CLR  R1
000883 2711      	CLR  R17
000884 2722      	CLR  R18
000885 2733      	CLR  R19
000886 2744      	CLR  R20
000887 2755      	CLR  R21
000888 e290      	LDI  R25,32
                 __DIVF212:
000889 17ae      	CP   R26,R30
00088a 07bf      	CPC  R27,R31
00088b 0786      	CPC  R24,R22
00088c 0741      	CPC  R20,R17
00088d f030      	BRLO __DIVF213
00088e 1bae      	SUB  R26,R30
00088f 0bbf      	SBC  R27,R31
000890 0b86      	SBC  R24,R22
000891 0b41      	SBC  R20,R17
000892 9408      	SEC
000893 c001      	RJMP __DIVF214
                 __DIVF213:
000894 9488      	CLC
                 __DIVF214:
000895 1f55      	ROL  R21
000896 1f22      	ROL  R18
000897 1f33      	ROL  R19
000898 1c11      	ROL  R1
000899 1faa      	ROL  R26
00089a 1fbb      	ROL  R27
00089b 1f88      	ROL  R24
00089c 1f44      	ROL  R20
00089d 959a      	DEC  R25
00089e f751      	BRNE __DIVF212
00089f 01f9      	MOVW R30,R18
0008a0 2d61      	MOV  R22,R1
0008a1 914f      	POP  R20
0008a2 913f      	POP  R19
0008a3 912f      	POP  R18
0008a4 911f      	POP  R17
0008a5 2366      	TST  R22
0008a6 f032      	BRMI __DIVF215
0008a7 0f55      	LSL  R21
0008a8 1fee      	ROL  R30
0008a9 1fff      	ROL  R31
0008aa 1f66      	ROL  R22
0008ab 957a      	DEC  R23
0008ac f243      	BRVS __DIVF217
                 __DIVF215:
0008ad de7f      	RCALL __ROUND_REPACK
0008ae 915f      	POP  R21
0008af 9508      	RET
                 
                 __CMPF12:
0008b0 2399      	TST  R25
0008b1 f09a      	BRMI __CMPF120
0008b2 2377      	TST  R23
0008b3 f042      	BRMI __CMPF121
0008b4 1797      	CP   R25,R23
0008b5 f048      	BRLO __CMPF122
0008b6 f429      	BRNE __CMPF121
0008b7 17ae      	CP   R26,R30
0008b8 07bf      	CPC  R27,R31
0008b9 0786      	CPC  R24,R22
0008ba f020      	BRLO __CMPF122
0008bb f031      	BREQ __CMPF123
                 __CMPF121:
0008bc 9498      	CLZ
0008bd 9488      	CLC
0008be 9508      	RET
                 __CMPF122:
0008bf 9498      	CLZ
0008c0 9408      	SEC
0008c1 9508      	RET
                 __CMPF123:
0008c2 9418      	SEZ
0008c3 9488      	CLC
0008c4 9508      	RET
                 __CMPF120:
0008c5 2377      	TST  R23
0008c6 f7c2      	BRPL __CMPF122
0008c7 1797      	CP   R25,R23
0008c8 f398      	BRLO __CMPF121
0008c9 f7a9      	BRNE __CMPF122
0008ca 17ea      	CP   R30,R26
0008cb 07fb      	CPC  R31,R27
0008cc 0768      	CPC  R22,R24
0008cd f388      	BRLO __CMPF122
0008ce f399      	BREQ __CMPF123
0008cf cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
0008d0 2400      	CLR  R0
0008d1 0daf      	ADD  R26,R15
0008d2 1db0      	ADC  R27,R0
0008d3 9508      	RET
                 
                 __ANEGD1:
0008d4 95f0      	COM  R31
0008d5 9560      	COM  R22
0008d6 9570      	COM  R23
0008d7 95e1      	NEG  R30
0008d8 4fff      	SBCI R31,-1
0008d9 4f6f      	SBCI R22,-1
0008da 4f7f      	SBCI R23,-1
0008db 9508      	RET
                 
                 __CBD1:
0008dc 2ffe      	MOV  R31,R30
0008dd 0fff      	ADD  R31,R31
0008de 0bff      	SBC  R31,R31
0008df 2f6f      	MOV  R22,R31
0008e0 2f7f      	MOV  R23,R31
0008e1 9508      	RET
                 
                 __CWD1:
0008e2 2f6f      	MOV  R22,R31
0008e3 0f66      	ADD  R22,R22
0008e4 0b66      	SBC  R22,R22
0008e5 2f76      	MOV  R23,R22
0008e6 9508      	RET
                 
                 __DIVB21U:
0008e7 2400      	CLR  R0
0008e8 e098      	LDI  R25,8
                 __DIVB21U1:
0008e9 0faa      	LSL  R26
0008ea 1c00      	ROL  R0
0008eb 1a0e      	SUB  R0,R30
0008ec f410      	BRCC __DIVB21U2
0008ed 0e0e      	ADD  R0,R30
0008ee c001      	RJMP __DIVB21U3
                 __DIVB21U2:
0008ef 60a1      	SBR  R26,1
                 __DIVB21U3:
0008f0 959a      	DEC  R25
0008f1 f7b9      	BRNE __DIVB21U1
0008f2 2fea      	MOV  R30,R26
0008f3 2da0      	MOV  R26,R0
0008f4 9508      	RET
                 
                 __DIVB21:
0008f5 d039      	RCALL __CHKSIGNB
0008f6 dff0      	RCALL __DIVB21U
0008f7 f40e      	BRTC __DIVB211
0008f8 95e1      	NEG  R30
                 __DIVB211:
0008f9 9508      	RET
                 
                 __DIVD21U:
0008fa 933f      	PUSH R19
0008fb 934f      	PUSH R20
0008fc 935f      	PUSH R21
0008fd 2400      	CLR  R0
0008fe 2411      	CLR  R1
0008ff 2744      	CLR  R20
000900 2755      	CLR  R21
000901 e230      	LDI  R19,32
                 __DIVD21U1:
000902 0faa      	LSL  R26
000903 1fbb      	ROL  R27
000904 1f88      	ROL  R24
000905 1f99      	ROL  R25
000906 1c00      	ROL  R0
000907 1c11      	ROL  R1
000908 1f44      	ROL  R20
000909 1f55      	ROL  R21
00090a 1a0e      	SUB  R0,R30
00090b 0a1f      	SBC  R1,R31
00090c 0b46      	SBC  R20,R22
00090d 0b57      	SBC  R21,R23
00090e f428      	BRCC __DIVD21U2
00090f 0e0e      	ADD  R0,R30
000910 1e1f      	ADC  R1,R31
000911 1f46      	ADC  R20,R22
000912 1f57      	ADC  R21,R23
000913 c001      	RJMP __DIVD21U3
                 __DIVD21U2:
000914 60a1      	SBR  R26,1
                 __DIVD21U3:
000915 953a      	DEC  R19
000916 f759      	BRNE __DIVD21U1
000917 01fd      	MOVW R30,R26
000918 01bc      	MOVW R22,R24
000919 01d0      	MOVW R26,R0
00091a 01ca      	MOVW R24,R20
00091b 915f      	POP  R21
00091c 914f      	POP  R20
00091d 913f      	POP  R19
00091e 9508      	RET
                 
                 __MODB21:
00091f 94e8      	CLT
000920 ffa7      	SBRS R26,7
000921 c002      	RJMP __MODB211
000922 95a1      	NEG  R26
000923 9468      	SET
                 __MODB211:
000924 fde7      	SBRC R30,7
000925 95e1      	NEG  R30
000926 dfc0      	RCALL __DIVB21U
000927 2fea      	MOV  R30,R26
000928 f40e      	BRTC __MODB212
000929 95e1      	NEG  R30
                 __MODB212:
00092a 9508      	RET
                 
                 __MODD21U:
00092b dfce      	RCALL __DIVD21U
00092c 01fd      	MOVW R30,R26
00092d 01bc      	MOVW R22,R24
00092e 9508      	RET
                 
                 __CHKSIGNB:
00092f 94e8      	CLT
000930 ffe7      	SBRS R30,7
000931 c002      	RJMP __CHKSB1
000932 95e1      	NEG  R30
000933 9468      	SET
                 __CHKSB1:
000934 ffa7      	SBRS R26,7
000935 c004      	RJMP __CHKSB2
000936 95a1      	NEG  R26
000937 f800      	BLD  R0,0
000938 9403      	INC  R0
000939 fa00      	BST  R0,0
                 __CHKSB2:
00093a 9508      	RET
                 
                 __GETW1P:
00093b 91ed      	LD   R30,X+
00093c 91fc      	LD   R31,X
00093d 9711      	SBIW R26,1
00093e 9508      	RET
                 
                 __GETD1P:
00093f 91ed      	LD   R30,X+
000940 91fd      	LD   R31,X+
000941 916d      	LD   R22,X+
000942 917c      	LD   R23,X
000943 9713      	SBIW R26,3
000944 9508      	RET
                 
                 __PUTDP1:
000945 93ed      	ST   X+,R30
000946 93fd      	ST   X+,R31
000947 936d      	ST   X+,R22
000948 937c      	ST   X,R23
000949 9508      	RET
                 
                 __GETD1S0:
00094a 81e8      	LD   R30,Y
00094b 81f9      	LDD  R31,Y+1
00094c 816a      	LDD  R22,Y+2
00094d 817b      	LDD  R23,Y+3
00094e 9508      	RET
                 
                 __GETD2S0:
00094f 81a8      	LD   R26,Y
000950 81b9      	LDD  R27,Y+1
000951 818a      	LDD  R24,Y+2
000952 819b      	LDD  R25,Y+3
000953 9508      	RET
                 
                 __PUTD1S0:
000954 83e8      	ST   Y,R30
000955 83f9      	STD  Y+1,R31
000956 836a      	STD  Y+2,R22
000957 837b      	STD  Y+3,R23
000958 9508      	RET
                 
                 __PUTPARD1:
000959 937a      	ST   -Y,R23
00095a 936a      	ST   -Y,R22
00095b 93fa      	ST   -Y,R31
00095c 93ea      	ST   -Y,R30
00095d 9508      	RET
                 
                 __PUTPARD2:
00095e 939a      	ST   -Y,R25
00095f 938a      	ST   -Y,R24
000960 93ba      	ST   -Y,R27
000961 93aa      	ST   -Y,R26
000962 9508      	RET
                 
                 __SWAPD12:
000963 2e18      	MOV  R1,R24
000964 2f86      	MOV  R24,R22
000965 2d61      	MOV  R22,R1
000966 2e19      	MOV  R1,R25
000967 2f97      	MOV  R25,R23
000968 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
000969 2e1b      	MOV  R1,R27
00096a 2fbf      	MOV  R27,R31
00096b 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
00096c 2e1a      	MOV  R1,R26
00096d 2fae      	MOV  R26,R30
00096e 2de1      	MOV  R30,R1
00096f 9508      	RET
                 
                 __CPD10:
000970 9730      	SBIW R30,0
000971 4060      	SBCI R22,0
000972 4070      	SBCI R23,0
000973 9508      	RET
                 
                 __SAVELOCR6:
000974 935a      	ST   -Y,R21
                 __SAVELOCR5:
000975 934a      	ST   -Y,R20
                 __SAVELOCR4:
000976 933a      	ST   -Y,R19
                 __SAVELOCR3:
000977 932a      	ST   -Y,R18
                 __SAVELOCR2:
000978 931a      	ST   -Y,R17
000979 930a      	ST   -Y,R16
00097a 9508      	RET
                 
                 __LOADLOCR6:
00097b 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
00097c 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
00097d 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
00097e 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
00097f 8119      	LDD  R17,Y+1
000980 8108      	LD   R16,Y
000981 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :  60 r1 :  34 r2 :   0 r3 :   0 r4 :   4 r5 :   4 r6 :   0 r7 :   2 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  50 r17:  60 r18:  48 r19:  35 r20:  50 r21:  90 r22: 113 r23:  99 
r24:  77 r25:  61 r26: 213 r27:  97 r28:  31 r29:   1 r30: 416 r31: 153 
x  :  44 y  : 376 z  :  24 
Registers used: 25 out of 35 (71.4%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  21 add   :  14 
adiw  :  33 and   :   5 andi  :   7 asr   :   0 bclr  :   0 bld   :   3 
brbc  :   0 brbs  :   0 brcc  :   8 brcs  :   1 break :   0 breq  :  47 
brge  :   1 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  28 
brlt  :   2 brmi  :  11 brne  :  60 brpl  :   9 brsh  :   6 brtc  :   4 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   0 bst   :   3 call  : 166 
cbi   :   6 cbr   :   1 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  49 cls   :   0 clt   :   5 clv   :   0 clz   :   2 com   :   8 
cp    :  14 cpc   :  18 cpi   :  81 cpse  :   0 dec   :  18 des   :   0 
eor   :   7 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   3 ijmp  :   0 
in    :   4 inc   :   5 jmp   :  23 ld    :  51 ldd   : 191 ldi   : 225 
lds   :  12 lpm   :  12 lsl   :  14 lsr   :   3 mov   :  82 movw  :  48 
mul   :  11 muls  :   0 mulsu :   0 neg   :   9 nop   :   0 or    :   1 
ori   :  10 out   :  44 pop   :  22 push  :  22 rcall :  84 ret   :  90 
reti  :   0 rjmp  : 137 rol   :  32 ror   :  15 sbc   :  11 sbci  :  20 
sbi   :   8 sbic  :   0 sbis  :   1 sbiw  :  27 sbr   :   4 sbrc  :   4 
sbrs  :  20 sec   :   5 seh   :   0 sei   :   0 sen   :   0 ser   :   8 
ses   :   0 set   :   4 sev   :   0 sez   :   1 sleep :   0 spm   :   0 
st    : 105 std   :  86 sts   :   6 sub   :   6 subi  :  48 swap  :   1 
tst   :  24 wdr   :   1 
Instructions used: 80 out of 116 (69.0%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x001304   4794     74   4868   32768  14.9%
[.dseg] 0x000060 0x000290      0     48     48    2048   2.3%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 7 warnings
