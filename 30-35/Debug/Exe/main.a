;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;#include <alcd.h>
;#include <stdio.h>
;
;// Voltage Reference: Internal 2.56V, cap. on AREF
;#define ADC_VREF_TYPE ((1<<REFS1) | (1<<REFS0) | (0<<ADLAR))
;
;float adc_value;
;float temperature;
;char temp_str[16];
;char fan_str[16];
;
;unsigned int read_adc(unsigned char adc_input)
; 0000 000F {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0010     ADMUX = adc_input | ADC_VREF_TYPE;
;PCODE: $0000000F VOL: 0
;	adc_input -> Y+0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 0011     // Delay needed for the stabilization of the ADC input voltage
; 0000 0012     delay_us(10);
;PCODE: $00000013 VOL: 0
; 0000 0013     // Start the AD conversion
; 0000 0014     ADCSRA |= (1<<ADSC);
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0015     // Wait for the AD conversion to complete
; 0000 0016     while ((ADCSRA & (1<<ADIF)) == 0);
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 0017     ADCSRA |= (1<<ADIF);
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 0018     return ADCW;
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0019 }
;PCODE: $00000021 VOL: 0
;
;void main(void)
; 0000 001C {
;PCODE: $00000022 VOL: 0
; 0000 001D     // Port A initialization - for LCD data lines
; 0000 001E     DDRA = 0xFF;  // All pins as output for LCD
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 001F     PORTA = 0x00;
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 0020 
; 0000 0021     // Port B initialization
; 0000 0022     // Bit7=Out (Fan control), other bits as needed
; 0000 0023     DDRB = (1<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 0024     PORTB = (0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0 ...
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 0025 
; 0000 0026     // Port C initialization - for LCD control lines
; 0000 0027     DDRC = 0xFF;  // Configure as needed for LCD control
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 0028     PORTC = 0x00;
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 0029 
; 0000 002A     // Port D initialization
; 0000 002B     DDRD = 0x00;  // All inputs
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 002C     PORTD = 0x00;
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 002D 
; 0000 002E     // Timer/Counter 0 initialization (disabled)
; 0000 002F     TCCR0 = (0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (0<<CS01) | (0<<CS00);
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 0030     TCNT0 = 0x00;
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 0031     OCR0 = 0x00;
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 0032 
; 0000 0033     // Timer/Counter 1 initialization (disabled)
; 0000 0034     TCCR1A = (0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 0035     TCCR1B = (0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 0036     TCNT1H = 0x00;
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 0037     TCNT1L = 0x00;
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 0038     ICR1H = 0x00;
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 0039     ICR1L = 0x00;
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 003A     OCR1AH = 0x00;
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 003B     OCR1AL = 0x00;
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 003C     OCR1BH = 0x00;
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 003D     OCR1BL = 0x00;
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 003E 
; 0000 003F     // Timer/Counter 2 initialization (disabled)
; 0000 0040     ASSR = 0<<AS2;
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 0041     TCCR2 = (0<<PWM2) | (0<<COM21) | (0<<COM20) | (0<<CTC2) | (0<<CS22) | (0<<CS21) | (0<<CS20);
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0000 0042     TCNT2 = 0x00;
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 0043     OCR2 = 0x00;
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 0044 
; 0000 0045     // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0046     TIMSK = (0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (0<<TOIE0);
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 0047 
; 0000 0048     // External Interrupt(s) initialization
; 0000 0049     MCUCR = (0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0000 004A     MCUCSR = (0<<ISC2);
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0000 004B 
; 0000 004C     // USART initialization (disabled)
; 0000 004D     UCSRB = (0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (0<<RXEN) | (0<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 004E 
; 0000 004F     // Analog Comparator initialization (disabled)
; 0000 0050     ACSR = (1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
; 0000 0051 
; 0000 0052     // ADC initialization
; 0000 0053     // ADC Clock frequency: 1000.000 kHz
; 0000 0054     // ADC Voltage Reference: Int., cap. on AREF
; 0000 0055     ADMUX = ADC_VREF_TYPE;
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0000 0056     ADCSRA = (1<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (1<<ADPS1) | (1<<ADPS0);
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0000 0057     SFIOR = (0<<ADTS2) | (0<<ADTS1) | (0<<ADTS0);
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
; 0000 0058 
; 0000 0059     // SPI initialization (disabled)
; 0000 005A     SPCR = (0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0000 005B 
; 0000 005C     // TWI initialization (disabled)
; 0000 005D     TWCR = (0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0000 005E 
; 0000 005F 
; 0000 0060     lcd_init(16);
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
; 0000 0061 
; 0000 0062     while (1)
;PCODE: $0000006B VOL: 0
; 0000 0063     {
; 0000 0064 
; 0000 0065         adc_value = read_adc(3);
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0000 0066         temperature = (float)adc_value / 4.0;
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0000 0067 
; 0000 0068         // Format temperature string with proper clearing
; 0000 0069         sprintf(temp_str, "Temp: %4.2f C   ", temperature);
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0000 006A 
; 0000 006B 
; 0000 006C         if (temperature >= 30.0) {
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
; 0000 006D             PORTB.7=1;
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
; 0000 006E             sprintf(fan_str, "Fan: ON   ");
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0000 006F         } else {
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
; 0000 0070             PORTB.7=0;
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
; 0000 0071             sprintf(fan_str, "Fan: OFF  ");
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
; 0000 0072         }
;PCODE: $0000009C VOL: 0
; 0000 0073 
; 0000 0074         lcd_gotoxy(0, 0);
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
; 0000 0075         lcd_puts(temp_str);
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
; 0000 0076         lcd_gotoxy(0, 1);
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
; 0000 0077         lcd_puts(fan_str);
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
; 0000 0078 
; 0000 0079         delay_ms(100);
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
; 0000 007A     }
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
; 0000 007B }
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
