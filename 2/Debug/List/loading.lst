
AVRASM ver. 2.1.30  C:\Users\Bardia\Desktop\hw4\65\2\Debug\List\loading.asm Wed Jul 23 12:49:02 2025

C:\Users\Bardia\Desktop\hw4\65\2\Debug\List\loading.asm(1088): warning: Register r7 already defined by the .DEF directive
C:\Users\Bardia\Desktop\hw4\65\2\Debug\List\loading.asm(1089): warning: Register r6 already defined by the .DEF directive
C:\Users\Bardia\Desktop\hw4\65\2\Debug\List\loading.asm(1090): warning: Register r9 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32
                 ;Program type           : Application
                 ;Clock frequency        : 1.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF __lcd_x=R7
                 	.DEF __lcd_y=R6
                 	.DEF __lcd_maxx=R9
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 003b 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G101:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G101:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
000033 3325
000034 2564
000035 0025      	.DB  0x25,0x33,0x64,0x25,0x25,0x0
                 _0x2000003:
000036 c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
000037 0002      	.DW  0x02
000038 0274      	.DW  __base_y_G100
000039 006c      	.DW  _0x2000003*2
                 
                 _0xFFFFFFFF:
00003a 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00003b 94f8      	CLI
00003c 27ee      	CLR  R30
00003d bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00003e e0f1      	LDI  R31,1
00003f bffb      	OUT  GICR,R31
000040 bfeb      	OUT  GICR,R30
000041 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000042 e08d      	LDI  R24,(14-2)+1
000043 e0a2      	LDI  R26,2
000044 27bb      	CLR  R27
                 __CLEAR_REG:
000045 93ed      	ST   X+,R30
000046 958a      	DEC  R24
000047 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000048 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000049 e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00004a e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
00004b 93ed      	ST   X+,R30
00004c 9701      	SBIW R24,1
00004d f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00004e e6ee      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00004f e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000050 9185      	LPM  R24,Z+
000051 9195      	LPM  R25,Z+
000052 9700      	SBIW R24,0
000053 f061      	BREQ __GLOBAL_INI_END
000054 91a5      	LPM  R26,Z+
000055 91b5      	LPM  R27,Z+
000056 9005      	LPM  R0,Z+
000057 9015      	LPM  R1,Z+
000058 01bf      	MOVW R22,R30
000059 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00005a 9005      	LPM  R0,Z+
00005b 920d      	ST   X+,R0
00005c 9701      	SBIW R24,1
00005d f7e1      	BRNE __GLOBAL_INI_LOOP
00005e 01fb      	MOVW R30,R22
00005f cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000060 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000061 bfed      	OUT  SPL,R30
000062 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000063 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000064 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000065 e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000066 940c 0068 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;#include <mega32.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include <alcd.h>
                 ;#include <stdio.h>
                 ;
                 ;char percent_str[4]; // String for "XXX%", needs 5 chars for "100%" + null
                 ;char bar_str[16];    // String for progress bar, needs 17 chars for 16 blocks + null
                 ;
                 ;void main(void)
                 ; 0000 000A {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 000B     int percent = 0;
                 ; 0000 000C     int i = 0;
                 ; 0000 000D     lcd_init(16);
                 ;	percent -> R16,R17
                 ;	i -> R18,R19
                +
000068 e000     +LDI R16 , LOW ( 0 )
000069 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
00006a e020     +LDI R18 , LOW ( 0 )
00006b e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
00006c e1a0      	LDI  R26,LOW(16)
00006d d0b0      	RCALL _lcd_init
                 ; 0000 000E     lcd_clear();
00006e d07d      	RCALL _lcd_clear
                 ; 0000 000F 
                 ; 0000 0010     while (1)
                 _0x3:
                 ; 0000 0011     {
                 ; 0000 0012         for (percent = 0; percent <= 100; percent++)
                +
00006f e000     +LDI R16 , LOW ( 0 )
000070 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x7:
                +
000071 3605     +CPI R16 , LOW ( 101 )
000072 e0e0     +LDI R30 , HIGH ( 101 )
000073 071e     +CPC R17 , R30
                 	__CPWRN 16,17,101
000074 f00c      	BRLT PC+2
000075 c047      	RJMP _0x8
                 ; 0000 0013         {
                 ; 0000 0014 
                 ; 0000 0015             int bars;
                 ; 0000 0016             sprintf(percent_str, "%3d%%", percent);
000076 9722      	SBIW R28,2
                 ;	bars -> Y+0
000077 e6e0      	LDI  R30,LOW(_percent_str)
000078 e0f2      	LDI  R31,HIGH(_percent_str)
000079 93fa      	ST   -Y,R31
00007a 93ea      	ST   -Y,R30
                +
00007b e6e6     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
00007c e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
00007d 93fa      	ST   -Y,R31
00007e 93ea      	ST   -Y,R30
00007f 01f8      	MOVW R30,R16
000080 940e 0360 	CALL __CWD1
000082 940e 0393 	CALL __PUTPARD1
000084 e084      	LDI  R24,4
000085 940e 02bf 	CALL _sprintf
000087 9628      	ADIW R28,8
                 ; 0000 0017             lcd_gotoxy(6, 0);
000088 e0e6      	LDI  R30,LOW(6)
000089 93ea      	ST   -Y,R30
00008a e0a0      	LDI  R26,LOW(0)
00008b d053      	RCALL _lcd_gotoxy
                 ; 0000 0018             lcd_puts(percent_str);
00008c e6a0      	LDI  R26,LOW(_percent_str)
00008d e0b2      	LDI  R27,HIGH(_percent_str)
00008e d07e      	RCALL _lcd_puts
                 ; 0000 0019             ///////////////////////////
                 ; 0000 001A             bars = (percent * 16) / 100;
00008f 01f8      	MOVW R30,R16
000090 940e 0357 	CALL __LSLW4
000092 01df      	MOVW R26,R30
000093 e6e4      	LDI  R30,LOW(100)
000094 e0f0      	LDI  R31,HIGH(100)
000095 940e 0378 	CALL __DIVW21
000097 83e8      	ST   Y,R30
000098 83f9      	STD  Y+1,R31
                 ; 0000 001B 
                 ; 0000 001C             for (i = 0; i < 16; i++)
                +
000099 e020     +LDI R18 , LOW ( 0 )
00009a e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0xA:
                +
00009b 3120     +CPI R18 , LOW ( 16 )
00009c e0e0     +LDI R30 , HIGH ( 16 )
00009d 073e     +CPC R19 , R30
                 	__CPWRN 18,19,16
00009e f47c      	BRGE _0xB
                 ; 0000 001D             {
                 ; 0000 001E                 bar_str[i] = (i < bars) ? 255 : ' ';
00009f 01d9      	MOVW R26,R18
0000a0 59ac      	SUBI R26,LOW(-_bar_str)
0000a1 4fbd      	SBCI R27,HIGH(-_bar_str)
0000a2 81e8      	LD   R30,Y
0000a3 81f9      	LDD  R31,Y+1
0000a4 172e      	CP   R18,R30
0000a5 073f      	CPC  R19,R31
0000a6 f414      	BRGE _0xC
0000a7 efef      	LDI  R30,LOW(255)
0000a8 c001      	RJMP _0xD
                 _0xC:
0000a9 e2e0      	LDI  R30,LOW(32)
                 _0xD:
0000aa 93ec      	ST   X,R30
                 ; 0000 001F             }
                +
0000ab 5f2f     +SUBI R18 , LOW ( - 1 )
0000ac 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0000ad cfed      	RJMP _0xA
                 _0xB:
                 ; 0000 0020             //bar_str[16] = '\0';
                 ; 0000 0021             lcd_gotoxy(0, 1);
0000ae e0e0      	LDI  R30,LOW(0)
0000af 93ea      	ST   -Y,R30
0000b0 e0a1      	LDI  R26,LOW(1)
0000b1 d02d      	RCALL _lcd_gotoxy
                 ; 0000 0022             lcd_puts(bar_str);
0000b2 e6a4      	LDI  R26,LOW(_bar_str)
0000b3 e0b2      	LDI  R27,HIGH(_bar_str)
0000b4 d058      	RCALL _lcd_puts
                 ; 0000 0023             delay_ms(100);
0000b5 e6a4      	LDI  R26,LOW(100)
0000b6 e0b0      	LDI  R27,0
0000b7 940e 0345 	CALL _delay_ms
                 ; 0000 0024         }
0000b9 9622      	ADIW R28,2
                +
0000ba 5f0f     +SUBI R16 , LOW ( - 1 )
0000bb 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0000bc cfb4      	RJMP _0x7
                 _0x8:
                 ; 0000 0025     }
0000bd cfb1      	RJMP _0x3
                 ; 0000 0026 }
                 _0xF:
0000be cfff      	RJMP _0xF
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
                 ; .FSTART __lcd_write_nibble_G100
0000bf 93aa      	ST   -Y,R26
0000c0 b3eb      	IN   R30,0x1B
0000c1 70ef      	ANDI R30,LOW(0xF)
0000c2 2fae      	MOV  R26,R30
0000c3 81e8      	LD   R30,Y
0000c4 7fe0      	ANDI R30,LOW(0xF0)
0000c5 2bea      	OR   R30,R26
0000c6 bbeb      	OUT  0x1B,R30
                +
0000c7 e082     +LDI R24 , LOW ( 2 )
                +__DELAY_USB_LOOP :
0000c8 958a     +DEC R24
0000c9 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 2
0000ca 9ada      	SBI  0x1B,2
                +
0000cb e082     +LDI R24 , LOW ( 2 )
                +__DELAY_USB_LOOP :
0000cc 958a     +DEC R24
0000cd f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 2
0000ce 98da      	CBI  0x1B,2
                +
0000cf e082     +LDI R24 , LOW ( 2 )
                +__DELAY_USB_LOOP :
0000d0 958a     +DEC R24
0000d1 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 2
0000d2 c076      	RJMP _0x2080002
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
0000d3 93aa      	ST   -Y,R26
0000d4 81a8      	LD   R26,Y
0000d5 dfe9      	RCALL __lcd_write_nibble_G100
0000d6 81e8          ld    r30,y
0000d7 95e2          swap  r30
0000d8 83e8          st    y,r30
0000d9 81a8      	LD   R26,Y
0000da dfe4      	RCALL __lcd_write_nibble_G100
                +
0000db e181     +LDI R24 , LOW ( 17 )
                +__DELAY_USB_LOOP :
0000dc 958a     +DEC R24
0000dd f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 17
0000de c06a      	RJMP _0x2080002
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
0000df 93aa      	ST   -Y,R26
0000e0 81e8      	LD   R30,Y
0000e1 e0f0      	LDI  R31,0
0000e2 58ec      	SUBI R30,LOW(-__base_y_G100)
0000e3 4ffd      	SBCI R31,HIGH(-__base_y_G100)
0000e4 81e0      	LD   R30,Z
0000e5 81a9      	LDD  R26,Y+1
0000e6 0fae      	ADD  R26,R30
0000e7 dfeb      	RCALL __lcd_write_data
0000e8 8079      	LDD  R7,Y+1
0000e9 8068      	LDD  R6,Y+0
0000ea 9622      	ADIW R28,2
0000eb 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
0000ec e0a2      	LDI  R26,LOW(2)
0000ed 940e 030c 	CALL SUBOPT_0x0
0000ef e0ac      	LDI  R26,LOW(12)
0000f0 dfe2      	RCALL __lcd_write_data
0000f1 e0a1      	LDI  R26,LOW(1)
0000f2 940e 030c 	CALL SUBOPT_0x0
0000f4 e0e0      	LDI  R30,LOW(0)
0000f5 2e6e      	MOV  R6,R30
0000f6 2e7e      	MOV  R7,R30
0000f7 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
0000f8 93aa      	ST   -Y,R26
0000f9 81a8      	LD   R26,Y
0000fa 30aa      	CPI  R26,LOW(0xA)
0000fb f011      	BREQ _0x2000005
0000fc 1479      	CP   R7,R9
0000fd f048      	BRLO _0x2000004
                 _0x2000005:
0000fe e0e0      	LDI  R30,LOW(0)
0000ff 93ea      	ST   -Y,R30
000100 9463      	INC  R6
000101 2da6      	MOV  R26,R6
000102 dfdc      	RCALL _lcd_gotoxy
000103 81a8      	LD   R26,Y
000104 30aa      	CPI  R26,LOW(0xA)
000105 f409      	BRNE _0x2000007
000106 c042      	RJMP _0x2080002
                 _0x2000007:
                 _0x2000004:
000107 9473      	INC  R7
000108 9ad8      	SBI  0x1B,0
000109 81a8      	LD   R26,Y
00010a dfc8      	RCALL __lcd_write_data
00010b 98d8      	CBI  0x1B,0
00010c c03c      	RJMP _0x2080002
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
00010d 93ba      	ST   -Y,R27
00010e 93aa      	ST   -Y,R26
00010f 931a      	ST   -Y,R17
                 _0x2000008:
000110 81a9      	LDD  R26,Y+1
000111 81ba      	LDD  R27,Y+1+1
000112 91ed      	LD   R30,X+
000113 83a9      	STD  Y+1,R26
000114 83ba      	STD  Y+1+1,R27
000115 2f1e      	MOV  R17,R30
000116 30e0      	CPI  R30,0
000117 f019      	BREQ _0x200000A
000118 2fa1      	MOV  R26,R17
000119 dfde      	RCALL _lcd_putchar
00011a cff5      	RJMP _0x2000008
                 _0x200000A:
00011b 8118      	LDD  R17,Y+0
00011c 9623      	ADIW R28,3
00011d 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
00011e 93aa      	ST   -Y,R26
00011f b3ea      	IN   R30,0x1A
000120 6fe0      	ORI  R30,LOW(0xF0)
000121 bbea      	OUT  0x1A,R30
000122 9ad2      	SBI  0x1A,2
000123 9ad0      	SBI  0x1A,0
000124 9ad1      	SBI  0x1A,1
000125 98da      	CBI  0x1B,2
000126 98d8      	CBI  0x1B,0
000127 98d9      	CBI  0x1B,1
000128 8098      	LDD  R9,Y+0
000129 81e8      	LD   R30,Y
00012a 58e0      	SUBI R30,-LOW(128)
                +
00012b 93e0 0276+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
00012d 81e8      	LD   R30,Y
00012e 54e0      	SUBI R30,-LOW(192)
                +
00012f 93e0 0277+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
000131 e1a4      	LDI  R26,LOW(20)
000132 e0b0      	LDI  R27,0
000133 940e 0345 	CALL _delay_ms
000135 940e 0312 	CALL SUBOPT_0x1
000137 940e 0312 	CALL SUBOPT_0x1
000139 940e 0312 	CALL SUBOPT_0x1
00013b e2a0      	LDI  R26,LOW(32)
00013c df82      	RCALL __lcd_write_nibble_G100
                +
00013d e281     +LDI R24 , LOW ( 33 )
                +__DELAY_USB_LOOP :
00013e 958a     +DEC R24
00013f f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 33
000140 e2a8      	LDI  R26,LOW(40)
000141 df91      	RCALL __lcd_write_data
000142 e0a4      	LDI  R26,LOW(4)
000143 df8f      	RCALL __lcd_write_data
000144 e8a5      	LDI  R26,LOW(133)
000145 df8d      	RCALL __lcd_write_data
000146 e0a6      	LDI  R26,LOW(6)
000147 df8b      	RCALL __lcd_write_data
000148 dfa3      	RCALL _lcd_clear
                 _0x2080002:
000149 9621      	ADIW R28,1
00014a 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G101:
                 ; .FSTART _put_buff_G101
00014b 93ba      	ST   -Y,R27
00014c 93aa      	ST   -Y,R26
00014d 931a      	ST   -Y,R17
00014e 930a      	ST   -Y,R16
00014f 81aa      	LDD  R26,Y+2
000150 81bb      	LDD  R27,Y+2+1
000151 9612      	ADIW R26,2
000152 940e 038b 	CALL __GETW1P
000154 9730      	SBIW R30,0
000155 f159      	BREQ _0x2020010
000156 81aa      	LDD  R26,Y+2
000157 81bb      	LDD  R27,Y+2+1
000158 9614      	ADIW R26,4
000159 940e 038b 	CALL __GETW1P
00015b 018f      	MOVW R16,R30
00015c 9730      	SBIW R30,0
00015d f061      	BREQ _0x2020012
                +
00015e 3002     +CPI R16 , LOW ( 2 )
00015f e0e0     +LDI R30 , HIGH ( 2 )
000160 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
000161 f098      	BRLO _0x2020013
000162 01f8      	MOVW R30,R16
000163 9731      	SBIW R30,1
000164 018f      	MOVW R16,R30
                +
000165 81aa     +LDD R26 , Y + 2
000166 81bb     +LDD R27 , Y + 2 + 1
000167 9614     +ADIW R26 , 4
000168 93ed     +ST X + , R30
000169 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2020012:
00016a 81aa      	LDD  R26,Y+2
00016b 81bb      	LDD  R27,Y+2+1
00016c 9612      	ADIW R26,2
00016d 91ed      	LD   R30,X+
00016e 91fd      	LD   R31,X+
00016f 9631      	ADIW R30,1
000170 93fe      	ST   -X,R31
000171 93ee      	ST   -X,R30
000172 9731      	SBIW R30,1
000173 81ac      	LDD  R26,Y+4
000174 83a0      	STD  Z+0,R26
                 _0x2020013:
000175 81aa      	LDD  R26,Y+2
000176 81bb      	LDD  R27,Y+2+1
000177 940e 038b 	CALL __GETW1P
000179 23ff      	TST  R31
00017a f02a      	BRMI _0x2020014
00017b 91ed      	LD   R30,X+
00017c 91fd      	LD   R31,X+
00017d 9631      	ADIW R30,1
00017e 93fe      	ST   -X,R31
00017f 93ee      	ST   -X,R30
                 _0x2020014:
000180 c006      	RJMP _0x2020015
                 _0x2020010:
000181 81aa      	LDD  R26,Y+2
000182 81bb      	LDD  R27,Y+2+1
000183 efef      	LDI  R30,LOW(65535)
000184 efff      	LDI  R31,HIGH(65535)
000185 93ed      	ST   X+,R30
000186 93fc      	ST   X,R31
                 _0x2020015:
000187 8119      	LDD  R17,Y+1
000188 8108      	LDD  R16,Y+0
000189 9625      	ADIW R28,5
00018a 9508      	RET
                 ; .FEND
                 __print_G101:
                 ; .FSTART __print_G101
00018b 93ba      	ST   -Y,R27
00018c 93aa      	ST   -Y,R26
00018d 9726      	SBIW R28,6
00018e 940e 0398 	CALL __SAVELOCR6
000190 e010      	LDI  R17,0
000191 85ac      	LDD  R26,Y+12
000192 85bd      	LDD  R27,Y+12+1
000193 e0e0      	LDI  R30,LOW(0)
000194 e0f0      	LDI  R31,HIGH(0)
000195 93ed      	ST   X+,R30
000196 93fc      	ST   X,R31
                 _0x2020016:
000197 89ea      	LDD  R30,Y+18
000198 89fb      	LDD  R31,Y+18+1
000199 9631      	ADIW R30,1
00019a 8bea      	STD  Y+18,R30
00019b 8bfb      	STD  Y+18+1,R31
00019c 9731      	SBIW R30,1
00019d 91e4      	LPM  R30,Z
00019e 2f2e      	MOV  R18,R30
00019f 30e0      	CPI  R30,0
0001a0 f409      	BRNE PC+2
0001a1 c115      	RJMP _0x2020018
0001a2 2fe1      	MOV  R30,R17
0001a3 30e0      	CPI  R30,0
0001a4 f439      	BRNE _0x202001C
0001a5 3225      	CPI  R18,37
0001a6 f411      	BRNE _0x202001D
0001a7 e011      	LDI  R17,LOW(1)
0001a8 c002      	RJMP _0x202001E
                 _0x202001D:
0001a9 940e 0319 	CALL SUBOPT_0x2
                 _0x202001E:
0001ab c10a      	RJMP _0x202001B
                 _0x202001C:
0001ac 30e1      	CPI  R30,LOW(0x1)
0001ad f4a9      	BRNE _0x202001F
0001ae 3225      	CPI  R18,37
0001af f419      	BRNE _0x2020020
0001b0 940e 0319 	CALL SUBOPT_0x2
0001b2 c102      	RJMP _0x20200CC
                 _0x2020020:
0001b3 e012      	LDI  R17,LOW(2)
0001b4 e040      	LDI  R20,LOW(0)
0001b5 e000      	LDI  R16,LOW(0)
0001b6 322d      	CPI  R18,45
0001b7 f411      	BRNE _0x2020021
0001b8 e001      	LDI  R16,LOW(1)
0001b9 c0fc      	RJMP _0x202001B
                 _0x2020021:
0001ba 322b      	CPI  R18,43
0001bb f411      	BRNE _0x2020022
0001bc e24b      	LDI  R20,LOW(43)
0001bd c0f8      	RJMP _0x202001B
                 _0x2020022:
0001be 3220      	CPI  R18,32
0001bf f411      	BRNE _0x2020023
0001c0 e240      	LDI  R20,LOW(32)
0001c1 c0f4      	RJMP _0x202001B
                 _0x2020023:
0001c2 c002      	RJMP _0x2020024
                 _0x202001F:
0001c3 30e2      	CPI  R30,LOW(0x2)
0001c4 f439      	BRNE _0x2020025
                 _0x2020024:
0001c5 e050      	LDI  R21,LOW(0)
0001c6 e013      	LDI  R17,LOW(3)
0001c7 3320      	CPI  R18,48
0001c8 f411      	BRNE _0x2020026
0001c9 6800      	ORI  R16,LOW(128)
0001ca c0eb      	RJMP _0x202001B
                 _0x2020026:
0001cb c003      	RJMP _0x2020027
                 _0x2020025:
0001cc 30e3      	CPI  R30,LOW(0x3)
0001cd f009      	BREQ PC+2
0001ce c0e7      	RJMP _0x202001B
                 _0x2020027:
0001cf 3320      	CPI  R18,48
0001d0 f010      	BRLO _0x202002A
0001d1 332a      	CPI  R18,58
0001d2 f008      	BRLO _0x202002B
                 _0x202002A:
0001d3 c007      	RJMP _0x2020029
                 _0x202002B:
0001d4 e0aa      	LDI  R26,LOW(10)
0001d5 9f5a      	MUL  R21,R26
0001d6 2d50      	MOV  R21,R0
0001d7 2fe2      	MOV  R30,R18
0001d8 53e0      	SUBI R30,LOW(48)
0001d9 0f5e      	ADD  R21,R30
0001da c0db      	RJMP _0x202001B
                 _0x2020029:
0001db 2fe2      	MOV  R30,R18
0001dc 36e3      	CPI  R30,LOW(0x63)
0001dd f449      	BRNE _0x202002F
0001de 940e 0320 	CALL SUBOPT_0x3
0001e0 89e8      	LDD  R30,Y+16
0001e1 89f9      	LDD  R31,Y+16+1
0001e2 81a4      	LDD  R26,Z+4
0001e3 93aa      	ST   -Y,R26
0001e4 940e 0326 	CALL SUBOPT_0x4
0001e6 c0ce      	RJMP _0x2020030
                 _0x202002F:
0001e7 37e3      	CPI  R30,LOW(0x73)
0001e8 f441      	BRNE _0x2020032
0001e9 940e 0320 	CALL SUBOPT_0x3
0001eb 940e 032c 	CALL SUBOPT_0x5
0001ed 940e 02f3 	CALL _strlen
0001ef 2f1e      	MOV  R17,R30
0001f0 c00a      	RJMP _0x2020033
                 _0x2020032:
0001f1 37e0      	CPI  R30,LOW(0x70)
0001f2 f461      	BRNE _0x2020035
0001f3 940e 0320 	CALL SUBOPT_0x3
0001f5 940e 032c 	CALL SUBOPT_0x5
0001f7 940e 02ff 	CALL _strlenf
0001f9 2f1e      	MOV  R17,R30
0001fa 6008      	ORI  R16,LOW(8)
                 _0x2020033:
0001fb 6002      	ORI  R16,LOW(2)
0001fc 770f      	ANDI R16,LOW(127)
0001fd e030      	LDI  R19,LOW(0)
0001fe c034      	RJMP _0x2020036
                 _0x2020035:
0001ff 36e4      	CPI  R30,LOW(0x64)
000200 f011      	BREQ _0x2020039
000201 36e9      	CPI  R30,LOW(0x69)
000202 f411      	BRNE _0x202003A
                 _0x2020039:
000203 6004      	ORI  R16,LOW(4)
000204 c002      	RJMP _0x202003B
                 _0x202003A:
000205 37e5      	CPI  R30,LOW(0x75)
000206 f431      	BRNE _0x202003C
                 _0x202003B:
000207 e5e4      	LDI  R30,LOW(_tbl10_G101*2)
000208 e0f0      	LDI  R31,HIGH(_tbl10_G101*2)
000209 83ee      	STD  Y+6,R30
00020a 83ff      	STD  Y+6+1,R31
00020b e015      	LDI  R17,LOW(5)
00020c c00c      	RJMP _0x202003D
                 _0x202003C:
00020d 35e8      	CPI  R30,LOW(0x58)
00020e f411      	BRNE _0x202003F
00020f 6008      	ORI  R16,LOW(8)
000210 c003      	RJMP _0x2020040
                 _0x202003F:
000211 37e8      	CPI  R30,LOW(0x78)
000212 f009      	BREQ PC+2
000213 c0a1      	RJMP _0x2020071
                 _0x2020040:
000214 e5ee      	LDI  R30,LOW(_tbl16_G101*2)
000215 e0f0      	LDI  R31,HIGH(_tbl16_G101*2)
000216 83ee      	STD  Y+6,R30
000217 83ff      	STD  Y+6+1,R31
000218 e014      	LDI  R17,LOW(4)
                 _0x202003D:
000219 ff02      	SBRS R16,2
00021a c014      	RJMP _0x2020042
00021b 940e 0320 	CALL SUBOPT_0x3
00021d 940e 0336 	CALL SUBOPT_0x6
00021f 85ab      	LDD  R26,Y+11
000220 23aa      	TST  R26
000221 f43a      	BRPL _0x2020043
000222 85ea      	LDD  R30,Y+10
000223 85fb      	LDD  R31,Y+10+1
000224 940e 0353 	CALL __ANEGW1
000226 87ea      	STD  Y+10,R30
000227 87fb      	STD  Y+10+1,R31
000228 e24d      	LDI  R20,LOW(45)
                 _0x2020043:
000229 3040      	CPI  R20,0
00022a f011      	BREQ _0x2020044
00022b 5f1f      	SUBI R17,-LOW(1)
00022c c001      	RJMP _0x2020045
                 _0x2020044:
00022d 7f0b      	ANDI R16,LOW(251)
                 _0x2020045:
00022e c004      	RJMP _0x2020046
                 _0x2020042:
00022f 940e 0320 	CALL SUBOPT_0x3
000231 940e 0336 	CALL SUBOPT_0x6
                 _0x2020046:
                 _0x2020036:
000233 fd00      	SBRC R16,0
000234 c011      	RJMP _0x2020047
                 _0x2020048:
000235 1715      	CP   R17,R21
000236 f478      	BRSH _0x202004A
000237 ff07      	SBRS R16,7
000238 c008      	RJMP _0x202004B
000239 ff02      	SBRS R16,2
00023a c004      	RJMP _0x202004C
00023b 7f0b      	ANDI R16,LOW(251)
00023c 2f24      	MOV  R18,R20
00023d 5011      	SUBI R17,LOW(1)
00023e c001      	RJMP _0x202004D
                 _0x202004C:
00023f e320      	LDI  R18,LOW(48)
                 _0x202004D:
000240 c001      	RJMP _0x202004E
                 _0x202004B:
000241 e220      	LDI  R18,LOW(32)
                 _0x202004E:
000242 940e 0319 	CALL SUBOPT_0x2
000244 5051      	SUBI R21,LOW(1)
000245 cfef      	RJMP _0x2020048
                 _0x202004A:
                 _0x2020047:
000246 2f31      	MOV  R19,R17
000247 ff01      	SBRS R16,1
000248 c017      	RJMP _0x202004F
                 _0x2020050:
000249 3030      	CPI  R19,0
00024a f0a1      	BREQ _0x2020052
00024b ff03      	SBRS R16,3
00024c c006      	RJMP _0x2020053
00024d 81ee      	LDD  R30,Y+6
00024e 81ff      	LDD  R31,Y+6+1
00024f 9125      	LPM  R18,Z+
000250 83ee      	STD  Y+6,R30
000251 83ff      	STD  Y+6+1,R31
000252 c005      	RJMP _0x2020054
                 _0x2020053:
000253 81ae      	LDD  R26,Y+6
000254 81bf      	LDD  R27,Y+6+1
000255 912d      	LD   R18,X+
000256 83ae      	STD  Y+6,R26
000257 83bf      	STD  Y+6+1,R27
                 _0x2020054:
000258 940e 0319 	CALL SUBOPT_0x2
00025a 3050      	CPI  R21,0
00025b f009      	BREQ _0x2020055
00025c 5051      	SUBI R21,LOW(1)
                 _0x2020055:
00025d 5031      	SUBI R19,LOW(1)
00025e cfea      	RJMP _0x2020050
                 _0x2020052:
00025f c04b      	RJMP _0x2020056
                 _0x202004F:
                 _0x2020058:
000260 e320      	LDI  R18,LOW(48)
000261 81ee      	LDD  R30,Y+6
000262 81ff      	LDD  R31,Y+6+1
000263 940e 038f 	CALL __GETW1PF
000265 87e8      	STD  Y+8,R30
000266 87f9      	STD  Y+8+1,R31
000267 81ee      	LDD  R30,Y+6
000268 81ff      	LDD  R31,Y+6+1
000269 9632      	ADIW R30,2
00026a 83ee      	STD  Y+6,R30
00026b 83ff      	STD  Y+6+1,R31
                 _0x202005A:
00026c 85e8      	LDD  R30,Y+8
00026d 85f9      	LDD  R31,Y+8+1
00026e 85aa      	LDD  R26,Y+10
00026f 85bb      	LDD  R27,Y+10+1
000270 17ae      	CP   R26,R30
000271 07bf      	CPC  R27,R31
000272 f050      	BRLO _0x202005C
000273 5f2f      	SUBI R18,-LOW(1)
000274 85a8      	LDD  R26,Y+8
000275 85b9      	LDD  R27,Y+8+1
000276 85ea      	LDD  R30,Y+10
000277 85fb      	LDD  R31,Y+10+1
000278 1bea      	SUB  R30,R26
000279 0bfb      	SBC  R31,R27
00027a 87ea      	STD  Y+10,R30
00027b 87fb      	STD  Y+10+1,R31
00027c cfef      	RJMP _0x202005A
                 _0x202005C:
00027d 332a      	CPI  R18,58
00027e f028      	BRLO _0x202005D
00027f ff03      	SBRS R16,3
000280 c002      	RJMP _0x202005E
000281 5f29      	SUBI R18,-LOW(7)
000282 c001      	RJMP _0x202005F
                 _0x202005E:
000283 5d29      	SUBI R18,-LOW(39)
                 _0x202005F:
                 _0x202005D:
000284 fd04      	SBRC R16,4
000285 c01a      	RJMP _0x2020061
000286 3321      	CPI  R18,49
000287 f420      	BRSH _0x2020063
000288 85a8      	LDD  R26,Y+8
000289 85b9      	LDD  R27,Y+8+1
00028a 9711      	SBIW R26,1
00028b f409      	BRNE _0x2020062
                 _0x2020063:
00028c c009      	RJMP _0x20200CD
                 _0x2020062:
00028d 1753      	CP   R21,R19
00028e f010      	BRLO _0x2020067
00028f ff00      	SBRS R16,0
000290 c001      	RJMP _0x2020068
                 _0x2020067:
000291 c013      	RJMP _0x2020066
                 _0x2020068:
000292 e220      	LDI  R18,LOW(32)
000293 ff07      	SBRS R16,7
000294 c00b      	RJMP _0x2020069
000295 e320      	LDI  R18,LOW(48)
                 _0x20200CD:
000296 6100      	ORI  R16,LOW(16)
000297 ff02      	SBRS R16,2
000298 c007      	RJMP _0x202006A
000299 7f0b      	ANDI R16,LOW(251)
00029a 934a      	ST   -Y,R20
00029b 940e 0326 	CALL SUBOPT_0x4
00029d 3050      	CPI  R21,0
00029e f009      	BREQ _0x202006B
00029f 5051      	SUBI R21,LOW(1)
                 _0x202006B:
                 _0x202006A:
                 _0x2020069:
                 _0x2020061:
0002a0 940e 0319 	CALL SUBOPT_0x2
0002a2 3050      	CPI  R21,0
0002a3 f009      	BREQ _0x202006C
0002a4 5051      	SUBI R21,LOW(1)
                 _0x202006C:
                 _0x2020066:
0002a5 5031      	SUBI R19,LOW(1)
0002a6 85a8      	LDD  R26,Y+8
0002a7 85b9      	LDD  R27,Y+8+1
0002a8 9712      	SBIW R26,2
0002a9 f008      	BRLO _0x2020059
0002aa cfb5      	RJMP _0x2020058
                 _0x2020059:
                 _0x2020056:
0002ab ff00      	SBRS R16,0
0002ac c008      	RJMP _0x202006D
                 _0x202006E:
0002ad 3050      	CPI  R21,0
0002ae f031      	BREQ _0x2020070
0002af 5051      	SUBI R21,LOW(1)
0002b0 e2e0      	LDI  R30,LOW(32)
0002b1 93ea      	ST   -Y,R30
0002b2 940e 0326 	CALL SUBOPT_0x4
0002b4 cff8      	RJMP _0x202006E
                 _0x2020070:
                 _0x202006D:
                 _0x2020071:
                 _0x2020030:
                 _0x20200CC:
0002b5 e010      	LDI  R17,LOW(0)
                 _0x202001B:
0002b6 cee0      	RJMP _0x2020016
                 _0x2020018:
0002b7 85ac      	LDD  R26,Y+12
0002b8 85bd      	LDD  R27,Y+12+1
0002b9 940e 038b 	CALL __GETW1P
0002bb 940e 039f 	CALL __LOADLOCR6
0002bd 9664      	ADIW R28,20
0002be 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
0002bf 92ff      	PUSH R15
0002c0 2ef8      	MOV  R15,R24
0002c1 9726      	SBIW R28,6
0002c2 940e 039a 	CALL __SAVELOCR4
0002c4 940e 033e 	CALL SUBOPT_0x7
0002c6 9730      	SBIW R30,0
0002c7 f419      	BRNE _0x2020072
0002c8 efef      	LDI  R30,LOW(65535)
0002c9 efff      	LDI  R31,HIGH(65535)
0002ca c023      	RJMP _0x2080001
                 _0x2020072:
0002cb 01de      	MOVW R26,R28
0002cc 9616      	ADIW R26,6
0002cd 940e 034f 	CALL __ADDW2R15
0002cf 018d      	MOVW R16,R26
0002d0 940e 033e 	CALL SUBOPT_0x7
0002d2 83ee      	STD  Y+6,R30
0002d3 83ff      	STD  Y+6+1,R31
0002d4 e0e0      	LDI  R30,LOW(0)
0002d5 87e8      	STD  Y+8,R30
0002d6 87e9      	STD  Y+8+1,R30
0002d7 01de      	MOVW R26,R28
0002d8 961a      	ADIW R26,10
0002d9 940e 034f 	CALL __ADDW2R15
0002db 940e 038b 	CALL __GETW1P
0002dd 93fa      	ST   -Y,R31
0002de 93ea      	ST   -Y,R30
0002df 931a      	ST   -Y,R17
0002e0 930a      	ST   -Y,R16
0002e1 e4eb      	LDI  R30,LOW(_put_buff_G101)
0002e2 e0f1      	LDI  R31,HIGH(_put_buff_G101)
0002e3 93fa      	ST   -Y,R31
0002e4 93ea      	ST   -Y,R30
0002e5 01de      	MOVW R26,R28
0002e6 961a      	ADIW R26,10
0002e7 dea3      	RCALL __print_G101
0002e8 019f      	MOVW R18,R30
0002e9 81ae      	LDD  R26,Y+6
0002ea 81bf      	LDD  R27,Y+6+1
0002eb e0e0      	LDI  R30,LOW(0)
0002ec 93ec      	ST   X,R30
0002ed 01f9      	MOVW R30,R18
                 _0x2080001:
0002ee 940e 03a1 	CALL __LOADLOCR4
0002f0 962a      	ADIW R28,10
0002f1 90ff      	POP  R15
0002f2 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
0002f3 93ba      	ST   -Y,R27
0002f4 93aa      	ST   -Y,R26
0002f5 91a9          ld   r26,y+
0002f6 91b9          ld   r27,y+
0002f7 27ee          clr  r30
0002f8 27ff          clr  r31
                 strlen0:
0002f9 916d          ld   r22,x+
0002fa 2366          tst  r22
0002fb f011          breq strlen1
0002fc 9631          adiw r30,1
0002fd cffb          rjmp strlen0
                 strlen1:
0002fe 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
0002ff 93ba      	ST   -Y,R27
000300 93aa      	ST   -Y,R26
000301 27aa          clr  r26
000302 27bb          clr  r27
000303 91e9          ld   r30,y+
000304 91f9          ld   r31,y+
                 strlenf0:
000305 9005      	lpm  r0,z+
000306 2000          tst  r0
000307 f011          breq strlenf1
000308 9611          adiw r26,1
000309 cffb          rjmp strlenf0
                 strlenf1:
00030a 01fd          movw r30,r26
00030b 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 _percent_str:
000260           	.BYTE 0x4
                 _bar_str:
000264           	.BYTE 0x10
                 __base_y_G100:
000274           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x0:
00030c 940e 00d3 	CALL __lcd_write_data
00030e e0a3      	LDI  R26,LOW(3)
00030f e0b0      	LDI  R27,0
000310 940c 0345 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1:
000312 e3a0      	LDI  R26,LOW(48)
000313 940e 00bf 	CALL __lcd_write_nibble_G100
                +
000315 e281     +LDI R24 , LOW ( 33 )
                +__DELAY_USB_LOOP :
000316 958a     +DEC R24
000317 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 33
000318 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x2:
000319 932a      	ST   -Y,R18
00031a 85ad      	LDD  R26,Y+13
00031b 85be      	LDD  R27,Y+13+1
00031c 85ef      	LDD  R30,Y+15
00031d 89f8      	LDD  R31,Y+15+1
00031e 9509      	ICALL
00031f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3:
000320 89e8      	LDD  R30,Y+16
000321 89f9      	LDD  R31,Y+16+1
000322 9734      	SBIW R30,4
000323 8be8      	STD  Y+16,R30
000324 8bf9      	STD  Y+16+1,R31
000325 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4:
000326 85ad      	LDD  R26,Y+13
000327 85be      	LDD  R27,Y+13+1
000328 85ef      	LDD  R30,Y+15
000329 89f8      	LDD  R31,Y+15+1
00032a 9509      	ICALL
00032b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x5:
00032c 89a8      	LDD  R26,Y+16
00032d 89b9      	LDD  R27,Y+16+1
00032e 9614      	ADIW R26,4
00032f 940e 038b 	CALL __GETW1P
000331 83ee      	STD  Y+6,R30
000332 83ff      	STD  Y+6+1,R31
000333 81ae      	LDD  R26,Y+6
000334 81bf      	LDD  R27,Y+6+1
000335 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x6:
000336 89a8      	LDD  R26,Y+16
000337 89b9      	LDD  R27,Y+16+1
000338 9614      	ADIW R26,4
000339 940e 038b 	CALL __GETW1P
00033b 87ea      	STD  Y+10,R30
00033c 87fb      	STD  Y+10+1,R31
00033d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
00033e 01de      	MOVW R26,R28
00033f 961c      	ADIW R26,12
000340 940e 034f 	CALL __ADDW2R15
000342 940e 038b 	CALL __GETW1P
000344 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000345 9610      	adiw r26,0
000346 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000347 ef8a     +LDI R24 , LOW ( 0xFA )
000348 e090     +LDI R25 , HIGH ( 0xFA )
                +__DELAY_USW_LOOP :
000349 9701     +SBIW R24 , 1
00034a f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xFA
00034b 95a8      	wdr
00034c 9711      	sbiw r26,1
00034d f7c9      	brne __delay_ms0
                 __delay_ms1:
00034e 9508      	ret
                 
                 __ADDW2R15:
00034f 2400      	CLR  R0
000350 0daf      	ADD  R26,R15
000351 1db0      	ADC  R27,R0
000352 9508      	RET
                 
                 __ANEGW1:
000353 95f1      	NEG  R31
000354 95e1      	NEG  R30
000355 40f0      	SBCI R31,0
000356 9508      	RET
                 
                 __LSLW4:
000357 0fee      	LSL  R30
000358 1fff      	ROL  R31
                 __LSLW3:
000359 0fee      	LSL  R30
00035a 1fff      	ROL  R31
                 __LSLW2:
00035b 0fee      	LSL  R30
00035c 1fff      	ROL  R31
00035d 0fee      	LSL  R30
00035e 1fff      	ROL  R31
00035f 9508      	RET
                 
                 __CWD1:
000360 2f6f      	MOV  R22,R31
000361 0f66      	ADD  R22,R22
000362 0b66      	SBC  R22,R22
000363 2f76      	MOV  R23,R22
000364 9508      	RET
                 
                 __DIVW21U:
000365 2400      	CLR  R0
000366 2411      	CLR  R1
000367 e190      	LDI  R25,16
                 __DIVW21U1:
000368 0faa      	LSL  R26
000369 1fbb      	ROL  R27
00036a 1c00      	ROL  R0
00036b 1c11      	ROL  R1
00036c 1a0e      	SUB  R0,R30
00036d 0a1f      	SBC  R1,R31
00036e f418      	BRCC __DIVW21U2
00036f 0e0e      	ADD  R0,R30
000370 1e1f      	ADC  R1,R31
000371 c001      	RJMP __DIVW21U3
                 __DIVW21U2:
000372 60a1      	SBR  R26,1
                 __DIVW21U3:
000373 959a      	DEC  R25
000374 f799      	BRNE __DIVW21U1
000375 01fd      	MOVW R30,R26
000376 01d0      	MOVW R26,R0
000377 9508      	RET
                 
                 __DIVW21:
000378 d004      	RCALL __CHKSIGNW
000379 dfeb      	RCALL __DIVW21U
00037a f40e      	BRTC __DIVW211
00037b dfd7      	RCALL __ANEGW1
                 __DIVW211:
00037c 9508      	RET
                 
                 __CHKSIGNW:
00037d 94e8      	CLT
00037e fff7      	SBRS R31,7
00037f c002      	RJMP __CHKSW1
000380 dfd2      	RCALL __ANEGW1
000381 9468      	SET
                 __CHKSW1:
000382 ffb7      	SBRS R27,7
000383 c006      	RJMP __CHKSW2
000384 95a0      	COM  R26
000385 95b0      	COM  R27
000386 9611      	ADIW R26,1
000387 f800      	BLD  R0,0
000388 9403      	INC  R0
000389 fa00      	BST  R0,0
                 __CHKSW2:
00038a 9508      	RET
                 
                 __GETW1P:
00038b 91ed      	LD   R30,X+
00038c 91fc      	LD   R31,X
00038d 9711      	SBIW R26,1
00038e 9508      	RET
                 
                 __GETW1PF:
00038f 9005      	LPM  R0,Z+
000390 91f4      	LPM  R31,Z
000391 2de0      	MOV  R30,R0
000392 9508      	RET
                 
                 __PUTPARD1:
000393 937a      	ST   -Y,R23
000394 936a      	ST   -Y,R22
000395 93fa      	ST   -Y,R31
000396 93ea      	ST   -Y,R30
000397 9508      	RET
                 
                 __SAVELOCR6:
000398 935a      	ST   -Y,R21
                 __SAVELOCR5:
000399 934a      	ST   -Y,R20
                 __SAVELOCR4:
00039a 933a      	ST   -Y,R19
                 __SAVELOCR3:
00039b 932a      	ST   -Y,R18
                 __SAVELOCR2:
00039c 931a      	ST   -Y,R17
00039d 930a      	ST   -Y,R16
00039e 9508      	RET
                 
                 __LOADLOCR6:
00039f 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0003a0 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0003a1 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0003a2 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0003a3 8119      	LDD  R17,Y+1
0003a4 8108      	LD   R16,Y
0003a5 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :  19 r1 :   5 r2 :   0 r3 :   0 r4 :   0 r5 :   0 r6 :   4 r7 :   4 
r8 :   0 r9 :   2 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  40 r17:  28 r18:  35 r19:  13 r20:   9 r21:  17 r22:  11 r23:   2 
r24:  23 r25:   5 r26: 109 r27:  43 r28:  16 r29:   1 r30: 169 r31:  69 
x  :  24 y  : 171 z  :  15 
Registers used: 25 out of 35 (71.4%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   2 add   :   5 
adiw  :  26 and   :   0 andi  :   6 asr   :   0 bclr  :   0 bld   :   1 
brbc  :   0 brbs  :   0 brcc  :   1 brcs  :   0 break :   0 breq  :  17 
brge  :   2 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   8 
brlt  :   1 brmi  :   1 brne  :  31 brpl  :   1 brsh  :   2 brtc  :   1 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   1 call  :  52 
cbi   :   5 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :   9 cls   :   0 clt   :   1 clv   :   0 clz   :   0 com   :   2 
cp    :   5 cpc   :   5 cpi   :  35 cpse  :   0 dec   :   8 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :   2 inc   :   3 jmp   :  23 ld    :  26 ldd   :  78 ldi   : 104 
lds   :   0 lpm   :  14 lsl   :   5 lsr   :   0 mov   :  19 movw  :  20 
mul   :   1 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   1 
ori   :   7 out   :   8 pop   :   1 push  :   1 rcall :  24 ret   :  29 
reti  :   0 rjmp  :  66 rol   :   7 ror   :   0 sbc   :   3 sbci  :   5 
sbi   :   5 sbic  :   0 sbis  :   0 sbiw  :  18 sbr   :   1 sbrc  :   2 
sbrs  :  12 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   1 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  62 std   :  32 sts   :   2 sub   :   2 subi  :  19 swap  :   1 
tst   :   4 wdr   :   1 
Instructions used: 64 out of 116 (55.2%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x00074c   1834     34   1868   32768   5.7%
[.dseg] 0x000060 0x000278      0     24     24    2048   1.2%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 3 warnings
