
AVRASM ver. 2.1.30  C:\Users\Bardia\Desktop\17mordad\2\Debug\List\dual.asm Tue Aug 05 12:07:32 2025

C:\Users\Bardia\Desktop\17mordad\2\Debug\List\dual.asm(1088): warning: Register r5 already defined by the .DEF directive
C:\Users\Bardia\Desktop\17mordad\2\Debug\List\dual.asm(1089): warning: Register r4 already defined by the .DEF directive
C:\Users\Bardia\Desktop\17mordad\2\Debug\List\dual.asm(1090): warning: Register r7 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32
                 ;Program type           : Application
                 ;Clock frequency        : 1.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : float, width, precision
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF __lcd_x=R5
                 	.DEF __lcd_y=R4
                 	.DEF __lcd_maxx=R7
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 004f 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _0x0:
00002a 3a41
00002b 3425
00002c 312e
00002d 2066      	.DB  0x41,0x3A,0x25,0x34,0x2E,0x31,0x66,0x20
00002e 4200
00002f 253a
000030 2e34
000031 6631      	.DB  0x0,0x42,0x3A,0x25,0x34,0x2E,0x31,0x66
000032 4600
000033 6e61
000034 203a
000035 4e4f      	.DB  0x0,0x46,0x61,0x6E,0x3A,0x20,0x4F,0x4E
000036 2020
000037 0020
000038 6146
000039 3a6e      	.DB  0x20,0x20,0x20,0x0,0x46,0x61,0x6E,0x3A
00003a 4f20
00003b 4646
00003c 2020
C:\Users\Bardia\Desktop\17mordad\2\Debug\List\dual.asm(1126): warning: .cseg .db misalignment - padding zero byte
00003d 0000      	.DB  0x20,0x4F,0x46,0x46,0x20,0x20,0x0
                 _0x2000000:
00003e 4e2d
00003f 4e41
C:\Users\Bardia\Desktop\17mordad\2\Debug\List\dual.asm(1128): warning: .cseg .db misalignment - padding zero byte
000040 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 _0x2020003:
000041 c080      	.DB  0x80,0xC0
                 _0x20A0060:
C:\Users\Bardia\Desktop\17mordad\2\Debug\List\dual.asm(1132): warning: .cseg .db misalignment - padding zero byte
000042 0001      	.DB  0x1
                 _0x20A0000:
000043 4e2d
000044 4e41
000045 4900
000046 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Users\Bardia\Desktop\17mordad\2\Debug\List\dual.asm(1135): warning: .cseg .db misalignment - padding zero byte
000047 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
000048 0002      	.DW  0x02
000049 0294      	.DW  __base_y_G101
00004a 0082      	.DW  _0x2020003*2
                 
00004b 0001      	.DW  0x01
00004c 0298      	.DW  __seed_G105
00004d 0084      	.DW  _0x20A0060*2
                 
                 _0xFFFFFFFF:
00004e 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00004f 94f8      	CLI
000050 27ee      	CLR  R30
000051 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000052 e0f1      	LDI  R31,1
000053 bffb      	OUT  GICR,R31
000054 bfeb      	OUT  GICR,R30
000055 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000056 e08d      	LDI  R24,(14-2)+1
000057 e0a2      	LDI  R26,2
000058 27bb      	CLR  R27
                 __CLEAR_REG:
000059 93ed      	ST   X+,R30
00005a 958a      	DEC  R24
00005b f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00005c e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00005d e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00005e e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
00005f 93ed      	ST   X+,R30
000060 9701      	SBIW R24,1
000061 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000062 e9e0      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000063 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000064 9185      	LPM  R24,Z+
000065 9195      	LPM  R25,Z+
000066 9700      	SBIW R24,0
000067 f061      	BREQ __GLOBAL_INI_END
000068 91a5      	LPM  R26,Z+
000069 91b5      	LPM  R27,Z+
00006a 9005      	LPM  R0,Z+
00006b 9015      	LPM  R1,Z+
00006c 01bf      	MOVW R22,R30
00006d 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00006e 9005      	LPM  R0,Z+
00006f 920d      	ST   X+,R0
000070 9701      	SBIW R24,1
000071 f7e1      	BRNE __GLOBAL_INI_LOOP
000072 01fb      	MOVW R30,R22
000073 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000074 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000075 bfed      	OUT  SPL,R30
000076 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000077 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000078 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000079 e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00007a 940c 008b 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;
                 ;#include <mega32.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;
                 ;// Alphanumeric LCD functions
                 ;#include <alcd.h>
                 ;
                 ;// Declare your global variables here
                 ;
                 ;// Voltage Reference: Int., cap. on AREF
                 ;#define ADC_VREF_TYPE ((1<<REFS1) | (1<<REFS0) | (0<<ADLAR))
                 ;float temp_1,temp_2,avg;
                 ;float adc1,adc2;
                 ;char temp_str[8];
                 ;char temp_str2[8];
                 ;char fan_str[16];
                 ;// Read the AD conversion result
                 ;unsigned int read_adc(unsigned char adc_input)
                 ; 0000 0014 {
                 
                 	.CSEG
                 _read_adc:
                 ; .FSTART _read_adc
                 ; 0000 0015 ADMUX=adc_input | ADC_VREF_TYPE;
00007c 93aa      	ST   -Y,R26
                 ;	adc_input -> Y+0
00007d 81e8      	LD   R30,Y
00007e 6ce0      	ORI  R30,LOW(0xC0)
00007f b9e7      	OUT  0x7,R30
                 ; 0000 0016 // Delay needed for the stabilization of the ADC input voltage
                 ; 0000 0017 delay_us(10);
                +
000080 e083     +LDI R24 , LOW ( 3 )
                +__DELAY_USB_LOOP :
000081 958a     +DEC R24
000082 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 3
                 ; 0000 0018 // Start the AD conversion
                 ; 0000 0019 ADCSRA|=(1<<ADSC);
000083 9a36      	SBI  0x6,6
                 ; 0000 001A // Wait for the AD conversion to complete
                 ; 0000 001B while ((ADCSRA & (1<<ADIF))==0);
                 _0x3:
000084 9b34      	SBIS 0x6,4
000085 cffe      	RJMP _0x3
                 ; 0000 001C ADCSRA|=(1<<ADIF);
000086 9a34      	SBI  0x6,4
                 ; 0000 001D return ADCW;
000087 b1e4      	IN   R30,0x4
000088 b1f5      	IN   R31,0x4+1
000089 940c 054c 	JMP  _0x20C0004
                 ; 0000 001E }
                 ; .FEND
                 ;
                 ;void main(void)
                 ; 0000 0021 {
                 _main:
                 ; .FSTART _main
                 ; 0000 0022 // Declare your local variables here
                 ; 0000 0023 
                 ; 0000 0024 // Input/Output Ports initialization
                 ; 0000 0025 // Port A initialization
                 ; 0000 0026 // Function: Bit7=Out Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0027 DDRA=(1<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
00008b e8e0      	LDI  R30,LOW(128)
00008c bbea      	OUT  0x1A,R30
                 ; 0000 0028 // State: Bit7=0 Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0029 PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
00008d e0e0      	LDI  R30,LOW(0)
00008e bbeb      	OUT  0x1B,R30
                 ; 0000 002A 
                 ; 0000 002B // Port B initialization
                 ; 0000 002C // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 002D DDRB=(1<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
00008f e8e0      	LDI  R30,LOW(128)
000090 bbe7      	OUT  0x17,R30
                 ; 0000 002E // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 002F PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
000091 e0e0      	LDI  R30,LOW(0)
000092 bbe8      	OUT  0x18,R30
                 ; 0000 0030 
                 ; 0000 0031 // Port C initialization
                 ; 0000 0032 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0033 DDRC=(0<<DDC7) | (0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
000093 bbe4      	OUT  0x14,R30
                 ; 0000 0034 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0035 PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
000094 bbe5      	OUT  0x15,R30
                 ; 0000 0036 
                 ; 0000 0037 // Port D initialization
                 ; 0000 0038 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0039 DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
000095 bbe1      	OUT  0x11,R30
                 ; 0000 003A // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 003B PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
000096 bbe2      	OUT  0x12,R30
                 ; 0000 003C 
                 ; 0000 003D // Timer/Counter 0 initialization
                 ; 0000 003E // Clock source: System Clock
                 ; 0000 003F // Clock value: Timer 0 Stopped
                 ; 0000 0040 // Mode: Normal top=0xFF
                 ; 0000 0041 // OC0 output: Disconnected
                 ; 0000 0042 TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (0<<CS01) | (0<<CS00);
000097 bfe3      	OUT  0x33,R30
                 ; 0000 0043 TCNT0=0x00;
000098 bfe2      	OUT  0x32,R30
                 ; 0000 0044 OCR0=0x00;
000099 bfec      	OUT  0x3C,R30
                 ; 0000 0045 
                 ; 0000 0046 // Timer/Counter 1 initialization
                 ; 0000 0047 // Clock source: System Clock
                 ; 0000 0048 // Clock value: Timer1 Stopped
                 ; 0000 0049 // Mode: Normal top=0xFFFF
                 ; 0000 004A // OC1A output: Disconnected
                 ; 0000 004B // OC1B output: Disconnected
                 ; 0000 004C // Noise Canceler: Off
                 ; 0000 004D // Input Capture on Falling Edge
                 ; 0000 004E // Timer1 Overflow Interrupt: Off
                 ; 0000 004F // Input Capture Interrupt: Off
                 ; 0000 0050 // Compare A Match Interrupt: Off
                 ; 0000 0051 // Compare B Match Interrupt: Off
                 ; 0000 0052 TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
00009a bdef      	OUT  0x2F,R30
                 ; 0000 0053 TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
00009b bdee      	OUT  0x2E,R30
                 ; 0000 0054 TCNT1H=0x00;
00009c bded      	OUT  0x2D,R30
                 ; 0000 0055 TCNT1L=0x00;
00009d bdec      	OUT  0x2C,R30
                 ; 0000 0056 ICR1H=0x00;
00009e bde7      	OUT  0x27,R30
                 ; 0000 0057 ICR1L=0x00;
00009f bde6      	OUT  0x26,R30
                 ; 0000 0058 OCR1AH=0x00;
0000a0 bdeb      	OUT  0x2B,R30
                 ; 0000 0059 OCR1AL=0x00;
0000a1 bdea      	OUT  0x2A,R30
                 ; 0000 005A OCR1BH=0x00;
0000a2 bde9      	OUT  0x29,R30
                 ; 0000 005B OCR1BL=0x00;
0000a3 bde8      	OUT  0x28,R30
                 ; 0000 005C 
                 ; 0000 005D // Timer/Counter 2 initialization
                 ; 0000 005E // Clock source: System Clock
                 ; 0000 005F // Clock value: Timer2 Stopped
                 ; 0000 0060 // Mode: Normal top=0xFF
                 ; 0000 0061 // OC2 output: Disconnected
                 ; 0000 0062 ASSR=0<<AS2;
0000a4 bde2      	OUT  0x22,R30
                 ; 0000 0063 TCCR2=(0<<PWM2) | (0<<COM21) | (0<<COM20) | (0<<CTC2) | (0<<CS22) | (0<<CS21) | (0<<CS20);
0000a5 bde5      	OUT  0x25,R30
                 ; 0000 0064 TCNT2=0x00;
0000a6 bde4      	OUT  0x24,R30
                 ; 0000 0065 OCR2=0x00;
0000a7 bde3      	OUT  0x23,R30
                 ; 0000 0066 
                 ; 0000 0067 // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 0068 TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (0<<TOIE0);
0000a8 bfe9      	OUT  0x39,R30
                 ; 0000 0069 
                 ; 0000 006A // External Interrupt(s) initialization
                 ; 0000 006B // INT0: Off
                 ; 0000 006C // INT1: Off
                 ; 0000 006D // INT2: Off
                 ; 0000 006E MCUCR=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
0000a9 bfe5      	OUT  0x35,R30
                 ; 0000 006F MCUCSR=(0<<ISC2);
0000aa bfe4      	OUT  0x34,R30
                 ; 0000 0070 
                 ; 0000 0071 // USART initialization
                 ; 0000 0072 // USART disabled
                 ; 0000 0073 UCSRB=(0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (0<<RXEN) | (0<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
0000ab b9ea      	OUT  0xA,R30
                 ; 0000 0074 
                 ; 0000 0075 // Analog Comparator initialization
                 ; 0000 0076 // Analog Comparator: Off
                 ; 0000 0077 // The Analog Comparator's positive input is
                 ; 0000 0078 // connected to the AIN0 pin
                 ; 0000 0079 // The Analog Comparator's negative input is
                 ; 0000 007A // connected to the AIN1 pin
                 ; 0000 007B ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
0000ac e8e0      	LDI  R30,LOW(128)
0000ad b9e8      	OUT  0x8,R30
                 ; 0000 007C 
                 ; 0000 007D // ADC initialization
                 ; 0000 007E // ADC Clock frequency: 125.000 kHz
                 ; 0000 007F // ADC Voltage Reference: Int., cap. on AREF
                 ; 0000 0080 // ADC Auto Trigger Source: ADC Stopped
                 ; 0000 0081 ADMUX=ADC_VREF_TYPE;
0000ae ece0      	LDI  R30,LOW(192)
0000af b9e7      	OUT  0x7,R30
                 ; 0000 0082 ADCSRA=(1<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (1<<ADPS1) | (1<<ADPS0);
0000b0 e8e3      	LDI  R30,LOW(131)
0000b1 b9e6      	OUT  0x6,R30
                 ; 0000 0083 SFIOR=(0<<ADTS2) | (0<<ADTS1) | (0<<ADTS0);
0000b2 e0e0      	LDI  R30,LOW(0)
0000b3 bfe0      	OUT  0x30,R30
                 ; 0000 0084 
                 ; 0000 0085 // SPI initialization
                 ; 0000 0086 // SPI disabled
                 ; 0000 0087 SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
0000b4 b9ed      	OUT  0xD,R30
                 ; 0000 0088 
                 ; 0000 0089 // TWI initialization
                 ; 0000 008A // TWI disabled
                 ; 0000 008B TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
0000b5 bfe6      	OUT  0x36,R30
                 ; 0000 008C 
                 ; 0000 008D // Alphanumeric LCD initialization
                 ; 0000 008E // Connections are specified in the
                 ; 0000 008F // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
                 ; 0000 0090 // RS - PORTC Bit 0
                 ; 0000 0091 // RD - PORTC Bit 1
                 ; 0000 0092 // EN - PORTC Bit 2
                 ; 0000 0093 // D4 - PORTC Bit 4
                 ; 0000 0094 // D5 - PORTC Bit 5
                 ; 0000 0095 // D6 - PORTC Bit 6
                 ; 0000 0096 // D7 - PORTC Bit 7
                 ; 0000 0097 // Characters/line: 16
                 ; 0000 0098 lcd_init(16);
0000b6 e1a0      	LDI  R26,LOW(16)
0000b7 940e 0521 	CALL _lcd_init
                 ; 0000 0099 
                 ; 0000 009A while (1)
                 _0x6:
                 ; 0000 009B       {
                 ; 0000 009C         adc1 = read_adc(3);
0000b9 e0a3      	LDI  R26,LOW(3)
0000ba dfc1      	RCALL _read_adc
0000bb e6ac      	LDI  R26,LOW(_adc1)
0000bc e0b2      	LDI  R27,HIGH(_adc1)
0000bd 940e 065c 	CALL SUBOPT_0x0
                 ; 0000 009D         adc2 = read_adc(2);
0000bf e0a2      	LDI  R26,LOW(2)
0000c0 dfbb      	RCALL _read_adc
0000c1 e7a0      	LDI  R26,LOW(_adc2)
0000c2 e0b2      	LDI  R27,HIGH(_adc2)
0000c3 940e 065c 	CALL SUBOPT_0x0
                 ; 0000 009E         temp_1 = (float)adc1 / 4.0;
0000c5 91a0 026c 	LDS  R26,_adc1
0000c7 91b0 026d 	LDS  R27,_adc1+1
0000c9 9180 026e 	LDS  R24,_adc1+2
0000cb 9190 026f 	LDS  R25,_adc1+3
0000cd 940e 0663 	CALL SUBOPT_0x1
0000cf 93e0 0260 	STS  _temp_1,R30
0000d1 93f0 0261 	STS  _temp_1+1,R31
0000d3 9360 0262 	STS  _temp_1+2,R22
0000d5 9370 0263 	STS  _temp_1+3,R23
                 ; 0000 009F         temp_2 = (float)adc2 / 4.0;
0000d7 91a0 0270 	LDS  R26,_adc2
0000d9 91b0 0271 	LDS  R27,_adc2+1
0000db 9180 0272 	LDS  R24,_adc2+2
0000dd 9190 0273 	LDS  R25,_adc2+3
0000df 940e 0663 	CALL SUBOPT_0x1
0000e1 93e0 0264 	STS  _temp_2,R30
0000e3 93f0 0265 	STS  _temp_2+1,R31
0000e5 9360 0266 	STS  _temp_2+2,R22
0000e7 9370 0267 	STS  _temp_2+3,R23
                 ; 0000 00A0 
                 ; 0000 00A1         avg = (temp_1 + temp_2)/2;
0000e9 940e 066a 	CALL SUBOPT_0x2
0000eb 91a0 0260 	LDS  R26,_temp_1
0000ed 91b0 0261 	LDS  R27,_temp_1+1
0000ef 9180 0262 	LDS  R24,_temp_1+2
0000f1 9190 0263 	LDS  R25,_temp_1+3
0000f3 940e 0673 	CALL SUBOPT_0x3
                +
0000f5 e0e0     +LDI R30 , LOW ( 0x40000000 )
0000f6 e0f0     +LDI R31 , HIGH ( 0x40000000 )
0000f7 e060     +LDI R22 , BYTE3 ( 0x40000000 )
0000f8 e470     +LDI R23 , BYTE4 ( 0x40000000 )
                 	__GETD1N 0x40000000
0000f9 940e 08cc 	CALL __DIVF21
0000fb 93e0 0268 	STS  _avg,R30
0000fd 93f0 0269 	STS  _avg+1,R31
0000ff 9360 026a 	STS  _avg+2,R22
000101 9370 026b 	STS  _avg+3,R23
                 ; 0000 00A2 
                 ; 0000 00A3         sprintf(temp_str, "A:%4.1f ", temp_1);
000103 e7e4      	LDI  R30,LOW(_temp_str)
000104 e0f2      	LDI  R31,HIGH(_temp_str)
000105 93fa      	ST   -Y,R31
000106 93ea      	ST   -Y,R30
                +
000107 e5e4     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
000108 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
000109 93fa      	ST   -Y,R31
00010a 93ea      	ST   -Y,R30
00010b 91e0 0260 	LDS  R30,_temp_1
00010d 91f0 0261 	LDS  R31,_temp_1+1
00010f 9160 0262 	LDS  R22,_temp_1+2
000111 9170 0263 	LDS  R23,_temp_1+3
000113 940e 0678 	CALL SUBOPT_0x4
                 ; 0000 00A4         sprintf(temp_str2, "B:%4.1f", temp_2);
000115 e7ec      	LDI  R30,LOW(_temp_str2)
000116 e0f2      	LDI  R31,HIGH(_temp_str2)
000117 93fa      	ST   -Y,R31
000118 93ea      	ST   -Y,R30
                +
000119 e5ed     +LDI R30 , LOW ( 2 * _0x0 + ( 9 ) )
00011a e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 9 ) )
                 	__POINTW1FN _0x0,9
00011b 93fa      	ST   -Y,R31
00011c 93ea      	ST   -Y,R30
00011d 940e 066a 	CALL SUBOPT_0x2
00011f 940e 0678 	CALL SUBOPT_0x4
                 ; 0000 00A5 
                 ; 0000 00A6         if (avg >= 30.0) {
000121 91a0 0268 	LDS  R26,_avg
000123 91b0 0269 	LDS  R27,_avg+1
000125 9180 026a 	LDS  R24,_avg+2
000127 9190 026b 	LDS  R25,_avg+3
                +
000129 e0e0     +LDI R30 , LOW ( 0x41F00000 )
00012a e0f0     +LDI R31 , HIGH ( 0x41F00000 )
00012b ef60     +LDI R22 , BYTE3 ( 0x41F00000 )
00012c e471     +LDI R23 , BYTE4 ( 0x41F00000 )
                 	__GETD1N 0x41F00000
00012d 940e 0911 	CALL __CMPF12
00012f f040      	BRLO _0x9
                 ; 0000 00A7             PORTB.7=1;
000130 9ac7      	SBI  0x18,7
                 ; 0000 00A8             sprintf(fan_str, "Fan: ON   ");
000131 e8e4      	LDI  R30,LOW(_fan_str)
000132 e0f2      	LDI  R31,HIGH(_fan_str)
000133 93fa      	ST   -Y,R31
000134 93ea      	ST   -Y,R30
                +
000135 e6e5     +LDI R30 , LOW ( 2 * _0x0 + ( 17 ) )
000136 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 17 ) )
                 	__POINTW1FN _0x0,17
000137 c007      	RJMP _0x10
                 ; 0000 00A9         } else {
                 _0x9:
                 ; 0000 00AA             PORTB.7=0;
000138 98c7      	CBI  0x18,7
                 ; 0000 00AB             sprintf(fan_str, "Fan: OFF  ");
000139 e8e4      	LDI  R30,LOW(_fan_str)
00013a e0f2      	LDI  R31,HIGH(_fan_str)
00013b 93fa      	ST   -Y,R31
00013c 93ea      	ST   -Y,R30
                +
00013d e7e0     +LDI R30 , LOW ( 2 * _0x0 + ( 28 ) )
00013e e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 28 ) )
                 	__POINTW1FN _0x0,28
                 _0x10:
00013f 93fa      	ST   -Y,R31
000140 93ea      	ST   -Y,R30
000141 e080      	LDI  R24,0
000142 940e 048e 	CALL _sprintf
000144 9624      	ADIW R28,4
                 ; 0000 00AC         }
                 ; 0000 00AD 
                 ; 0000 00AE         lcd_gotoxy(0, 0);
000145 e0e0      	LDI  R30,LOW(0)
000146 93ea      	ST   -Y,R30
000147 e0a0      	LDI  R26,LOW(0)
000148 940e 04e2 	CALL _lcd_gotoxy
                 ; 0000 00AF         lcd_puts(temp_str);
00014a e7a4      	LDI  R26,LOW(_temp_str)
00014b e0b2      	LDI  R27,HIGH(_temp_str)
00014c 940e 0510 	CALL _lcd_puts
                 ; 0000 00B0         lcd_gotoxy(0,9);
00014e e0e0      	LDI  R30,LOW(0)
00014f 93ea      	ST   -Y,R30
000150 e0a9      	LDI  R26,LOW(9)
000151 940e 04e2 	CALL _lcd_gotoxy
                 ; 0000 00B1         lcd_puts(temp_str2);
000153 e7ac      	LDI  R26,LOW(_temp_str2)
000154 e0b2      	LDI  R27,HIGH(_temp_str2)
000155 940e 0510 	CALL _lcd_puts
                 ; 0000 00B2         lcd_gotoxy(0, 1);
000157 e0e0      	LDI  R30,LOW(0)
000158 93ea      	ST   -Y,R30
000159 e0a1      	LDI  R26,LOW(1)
00015a 940e 04e2 	CALL _lcd_gotoxy
                 ; 0000 00B3         lcd_puts(fan_str);
00015c e8a4      	LDI  R26,LOW(_fan_str)
00015d e0b2      	LDI  R27,HIGH(_fan_str)
00015e 940e 0510 	CALL _lcd_puts
                 ; 0000 00B4 
                 ; 0000 00B5         delay_ms(100);
000160 e6a4      	LDI  R26,LOW(100)
000161 e0b0      	LDI  R27,0
000162 940e 077e 	CALL _delay_ms
                 ; 0000 00B6 
                 ; 0000 00B7       }
000164 cf54      	RJMP _0x6
                 ; 0000 00B8 }
                 _0xF:
000165 cfff      	RJMP _0xF
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
                 ; .FSTART _put_buff_G100
000166 93ba      	ST   -Y,R27
000167 93aa      	ST   -Y,R26
000168 931a      	ST   -Y,R17
000169 930a      	ST   -Y,R16
00016a 81aa      	LDD  R26,Y+2
00016b 81bb      	LDD  R27,Y+2+1
00016c 9612      	ADIW R26,2
00016d 940e 099c 	CALL __GETW1P
00016f 9730      	SBIW R30,0
000170 f129      	BREQ _0x2000010
000171 81aa      	LDD  R26,Y+2
000172 81bb      	LDD  R27,Y+2+1
000173 9614      	ADIW R26,4
000174 940e 099c 	CALL __GETW1P
000176 018f      	MOVW R16,R30
000177 9730      	SBIW R30,0
000178 f061      	BREQ _0x2000012
                +
000179 3002     +CPI R16 , LOW ( 2 )
00017a e0e0     +LDI R30 , HIGH ( 2 )
00017b 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
00017c f080      	BRLO _0x2000013
00017d 01f8      	MOVW R30,R16
00017e 9731      	SBIW R30,1
00017f 018f      	MOVW R16,R30
                +
000180 81aa     +LDD R26 , Y + 2
000181 81bb     +LDD R27 , Y + 2 + 1
000182 9614     +ADIW R26 , 4
000183 93ed     +ST X + , R30
000184 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2000012:
000185 81aa      	LDD  R26,Y+2
000186 81bb      	LDD  R27,Y+2+1
000187 9612      	ADIW R26,2
000188 940e 067f 	CALL SUBOPT_0x5
00018a 9731      	SBIW R30,1
00018b 81ac      	LDD  R26,Y+4
00018c 83a0      	STD  Z+0,R26
                 _0x2000013:
00018d 81aa      	LDD  R26,Y+2
00018e 81bb      	LDD  R27,Y+2+1
00018f 940e 099c 	CALL __GETW1P
000191 23ff      	TST  R31
000192 f012      	BRMI _0x2000014
000193 940e 067f 	CALL SUBOPT_0x5
                 _0x2000014:
000195 c006      	RJMP _0x2000015
                 _0x2000010:
000196 81aa      	LDD  R26,Y+2
000197 81bb      	LDD  R27,Y+2+1
000198 efef      	LDI  R30,LOW(65535)
000199 efff      	LDI  R31,HIGH(65535)
00019a 93ed      	ST   X+,R30
00019b 93fc      	ST   X,R31
                 _0x2000015:
00019c 8119      	LDD  R17,Y+1
00019d 8108      	LDD  R16,Y+0
00019e 9625      	ADIW R28,5
00019f 9508      	RET
                 ; .FEND
                 __ftoe_G100:
                 ; .FSTART __ftoe_G100
0001a0 940e 0685 	CALL SUBOPT_0x6
0001a2 e8e0      	LDI  R30,LOW(128)
0001a3 83ea      	STD  Y+2,R30
0001a4 e3ef      	LDI  R30,LOW(63)
0001a5 83eb      	STD  Y+3,R30
0001a6 940e 09d7 	CALL __SAVELOCR4
0001a8 85ee      	LDD  R30,Y+14
0001a9 85ff      	LDD  R31,Y+14+1
0001aa 3fef      	CPI  R30,LOW(0xFFFF)
0001ab efaf      	LDI  R26,HIGH(0xFFFF)
0001ac 07fa      	CPC  R31,R26
0001ad f449      	BRNE _0x2000019
0001ae 85e8      	LDD  R30,Y+8
0001af 85f9      	LDD  R31,Y+8+1
0001b0 93fa      	ST   -Y,R31
0001b1 93ea      	ST   -Y,R30
                +
0001b2 e7ac     +LDI R26 , LOW ( 2 * _0x2000000 + ( 0 ) )
0001b3 e0b0     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 0 ) )
                 	__POINTW2FN _0x2000000,0
0001b4 940e 054e 	CALL _strcpyf
0001b6 c0b9      	RJMP _0x20C0006
                 _0x2000019:
0001b7 3fef      	CPI  R30,LOW(0x7FFF)
0001b8 e7af      	LDI  R26,HIGH(0x7FFF)
0001b9 07fa      	CPC  R31,R26
0001ba f449      	BRNE _0x2000018
0001bb 85e8      	LDD  R30,Y+8
0001bc 85f9      	LDD  R31,Y+8+1
0001bd 93fa      	ST   -Y,R31
0001be 93ea      	ST   -Y,R30
                +
0001bf e7ad     +LDI R26 , LOW ( 2 * _0x2000000 + ( 1 ) )
0001c0 e0b0     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 1 ) )
                 	__POINTW2FN _0x2000000,1
0001c1 940e 054e 	CALL _strcpyf
0001c3 c0ac      	RJMP _0x20C0006
                 _0x2000018:
0001c4 85ab      	LDD  R26,Y+11
0001c5 30a7      	CPI  R26,LOW(0x7)
0001c6 f010      	BRLO _0x200001B
0001c7 e0e6      	LDI  R30,LOW(6)
0001c8 87eb      	STD  Y+11,R30
                 _0x200001B:
0001c9 851b      	LDD  R17,Y+11
                 _0x200001C:
0001ca 2fe1      	MOV  R30,R17
0001cb 5011      	SUBI R17,1
0001cc 30e0      	CPI  R30,0
0001cd f019      	BREQ _0x200001E
0001ce 940e 068c 	CALL SUBOPT_0x7
0001d0 cff9      	RJMP _0x200001C
                 _0x200001E:
                +
0001d1 85ec     +LDD R30 , Y + 12
0001d2 85fd     +LDD R31 , Y + 12 + 1
0001d3 856e     +LDD R22 , Y + 12 + 2
0001d4 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
0001d5 940e 09d1 	CALL __CPD10
0001d7 f421      	BRNE _0x200001F
0001d8 e030      	LDI  R19,LOW(0)
0001d9 940e 068c 	CALL SUBOPT_0x7
0001db c02f      	RJMP _0x2000020
                 _0x200001F:
0001dc 853b      	LDD  R19,Y+11
0001dd 940e 069b 	CALL SUBOPT_0x8
0001df f009      	BREQ PC+2
0001e0 f408      	BRCC PC+2
0001e1 c00b      	RJMP _0x2000021
0001e2 940e 068c 	CALL SUBOPT_0x7
                 _0x2000022:
0001e4 940e 069b 	CALL SUBOPT_0x8
0001e6 f028      	BRLO _0x2000024
0001e7 940e 06a6 	CALL SUBOPT_0x9
0001e9 940e 06ab 	CALL SUBOPT_0xA
0001eb cff8      	RJMP _0x2000022
                 _0x2000024:
0001ec c00d      	RJMP _0x2000025
                 _0x2000021:
                 _0x2000026:
0001ed 940e 069b 	CALL SUBOPT_0x8
0001ef f440      	BRSH _0x2000028
0001f0 940e 06a6 	CALL SUBOPT_0x9
0001f2 940e 06b7 	CALL SUBOPT_0xB
0001f4 940e 06be 	CALL SUBOPT_0xC
0001f6 5031      	SUBI R19,LOW(1)
0001f7 cff5      	RJMP _0x2000026
                 _0x2000028:
0001f8 940e 068c 	CALL SUBOPT_0x7
                 _0x2000025:
                +
0001fa 85ec     +LDD R30 , Y + 12
0001fb 85fd     +LDD R31 , Y + 12 + 1
0001fc 856e     +LDD R22 , Y + 12 + 2
0001fd 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
0001fe 940e 06c3 	CALL SUBOPT_0xD
000200 940e 082e 	CALL __ADDF12
000202 940e 06be 	CALL SUBOPT_0xC
000204 940e 069b 	CALL SUBOPT_0x8
000206 f020      	BRLO _0x2000029
000207 940e 06a6 	CALL SUBOPT_0x9
000209 940e 06ab 	CALL SUBOPT_0xA
                 _0x2000029:
                 _0x2000020:
00020b e010      	LDI  R17,LOW(0)
                 _0x200002A:
00020c 85eb      	LDD  R30,Y+11
00020d 17e1      	CP   R30,R17
00020e f1a8      	BRLO _0x200002C
                +
00020f 81ac     +LDD R26 , Y + 4
000210 81bd     +LDD R27 , Y + 4 + 1
000211 818e     +LDD R24 , Y + 4 + 2
000212 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
000213 940e 06c8 	CALL SUBOPT_0xE
000215 940e 06c3 	CALL SUBOPT_0xD
000217 940e 0673 	CALL SUBOPT_0x3
000219 940e 05a5 	CALL _floor
                +
00021b 83ec     +STD Y + 4 , R30
00021c 83fd     +STD Y + 4 + 1 , R31
00021d 836e     +STD Y + 4 + 2 , R22
00021e 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
00021f 940e 06a6 	CALL SUBOPT_0x9
000221 940e 08cc 	CALL __DIVF21
000223 940e 07bb 	CALL __CFD1U
000225 2f0e      	MOV  R16,R30
000226 940e 06cf 	CALL SUBOPT_0xF
000228 940e 06d6 	CALL SUBOPT_0x10
00022a 27ff      	CLR  R31
00022b 2766      	CLR  R22
00022c 2777      	CLR  R23
00022d 940e 07f4 	CALL __CDF1
                +
00022f 81ac     +LDD R26 , Y + 4
000230 81bd     +LDD R27 , Y + 4 + 1
000231 818e     +LDD R24 , Y + 4 + 2
000232 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
000233 940e 087e 	CALL __MULF12
000235 940e 06a6 	CALL SUBOPT_0x9
000237 940e 06db 	CALL SUBOPT_0x11
000239 940e 06be 	CALL SUBOPT_0xC
00023b 2fe1      	MOV  R30,R17
00023c 5f1f      	SUBI R17,-1
00023d 30e0      	CPI  R30,0
00023e f669      	BRNE _0x200002A
00023f 940e 06cf 	CALL SUBOPT_0xF
000241 e2ee      	LDI  R30,LOW(46)
000242 93ec      	ST   X,R30
000243 cfc8      	RJMP _0x200002A
                 _0x200002C:
000244 940e 06e0 	CALL SUBOPT_0x12
000246 9731      	SBIW R30,1
000247 85aa      	LDD  R26,Y+10
000248 83a0      	STD  Z+0,R26
000249 3030      	CPI  R19,0
00024a f42c      	BRGE _0x200002E
00024b 9531      	NEG  R19
00024c 85a8      	LDD  R26,Y+8
00024d 85b9      	LDD  R27,Y+8+1
00024e e2ed      	LDI  R30,LOW(45)
00024f c003      	RJMP _0x2000113
                 _0x200002E:
000250 85a8      	LDD  R26,Y+8
000251 85b9      	LDD  R27,Y+8+1
000252 e2eb      	LDI  R30,LOW(43)
                 _0x2000113:
000253 93ec      	ST   X,R30
000254 940e 06e0 	CALL SUBOPT_0x12
000256 940e 06e0 	CALL SUBOPT_0x12
000258 9731      	SBIW R30,1
000259 01bf      	MOVW R22,R30
00025a 2fa3      	MOV  R26,R19
00025b e0ea      	LDI  R30,LOW(10)
00025c 940e 0956 	CALL __DIVB21
00025e 5de0      	SUBI R30,-LOW(48)
00025f 01db      	MOVW R26,R22
000260 93ec      	ST   X,R30
000261 940e 06e0 	CALL SUBOPT_0x12
000263 9731      	SBIW R30,1
000264 01bf      	MOVW R22,R30
000265 2fa3      	MOV  R26,R19
000266 e0ea      	LDI  R30,LOW(10)
000267 940e 0980 	CALL __MODB21
000269 5de0      	SUBI R30,-LOW(48)
00026a 01db      	MOVW R26,R22
00026b 93ec      	ST   X,R30
00026c 85a8      	LDD  R26,Y+8
00026d 85b9      	LDD  R27,Y+8+1
00026e e0e0      	LDI  R30,LOW(0)
00026f 93ec      	ST   X,R30
                 _0x20C0006:
000270 940e 09de 	CALL __LOADLOCR4
000272 9660      	ADIW R28,16
000273 9508      	RET
                 ; .FEND
                 __print_G100:
                 ; .FSTART __print_G100
000274 93ba      	ST   -Y,R27
000275 93aa      	ST   -Y,R26
000276 97ef      	SBIW R28,63
000277 9761      	SBIW R28,17
000278 940e 09d5 	CALL __SAVELOCR6
00027a e010      	LDI  R17,0
                +
00027b 01fe     +MOVW R30 , R28
00027c 5ae8     +SUBI R30 , LOW ( - 88 )
00027d 4fff     +SBCI R31 , HIGH ( - 88 )
00027e 9001     +LD R0 , Z +
00027f 81f0     +LD R31 , Z
000280 2de0     +MOV R30 , R0
                 	__GETW1SX 88
000281 87e8      	STD  Y+8,R30
000282 87f9      	STD  Y+8+1,R31
                +
000283 01fe     +MOVW R30 , R28
000284 5aea     +SUBI R30 , LOW ( - 86 )
000285 4fff     +SBCI R31 , HIGH ( - 86 )
000286 9001     +LD R0 , Z +
000287 81f0     +LD R31 , Z
000288 2de0     +MOV R30 , R0
                 	__GETW1SX 86
000289 83ee      	STD  Y+6,R30
00028a 83ff      	STD  Y+6+1,R31
00028b 81ae      	LDD  R26,Y+6
00028c 81bf      	LDD  R27,Y+6+1
00028d e0e0      	LDI  R30,LOW(0)
00028e e0f0      	LDI  R31,HIGH(0)
00028f 93ed      	ST   X+,R30
000290 93fc      	ST   X,R31
                 _0x2000030:
000291 01de      	MOVW R26,R28
000292 5aa4      	SUBI R26,LOW(-(92))
000293 4fbf      	SBCI R27,HIGH(-(92))
000294 940e 067f 	CALL SUBOPT_0x5
000296 9731      	SBIW R30,1
000297 91e4      	LPM  R30,Z
000298 2f2e      	MOV  R18,R30
000299 30e0      	CPI  R30,0
00029a f409      	BRNE PC+2
00029b c1e9      	RJMP _0x2000032
00029c 2fe1      	MOV  R30,R17
00029d 30e0      	CPI  R30,0
00029e f439      	BRNE _0x2000036
00029f 3225      	CPI  R18,37
0002a0 f411      	BRNE _0x2000037
0002a1 e011      	LDI  R17,LOW(1)
0002a2 c002      	RJMP _0x2000038
                 _0x2000037:
0002a3 940e 06e6 	CALL SUBOPT_0x13
                 _0x2000038:
0002a5 c1de      	RJMP _0x2000035
                 _0x2000036:
0002a6 30e1      	CPI  R30,LOW(0x1)
0002a7 f4c1      	BRNE _0x2000039
0002a8 3225      	CPI  R18,37
0002a9 f419      	BRNE _0x200003A
0002aa 940e 06e6 	CALL SUBOPT_0x13
0002ac c1d6      	RJMP _0x2000114
                 _0x200003A:
0002ad e012      	LDI  R17,LOW(2)
0002ae e0e0      	LDI  R30,LOW(0)
0002af 8bed      	STD  Y+21,R30
0002b0 e000      	LDI  R16,LOW(0)
0002b1 322d      	CPI  R18,45
0002b2 f411      	BRNE _0x200003B
0002b3 e001      	LDI  R16,LOW(1)
0002b4 c1cf      	RJMP _0x2000035
                 _0x200003B:
0002b5 322b      	CPI  R18,43
0002b6 f419      	BRNE _0x200003C
0002b7 e2eb      	LDI  R30,LOW(43)
0002b8 8bed      	STD  Y+21,R30
0002b9 c1ca      	RJMP _0x2000035
                 _0x200003C:
0002ba 3220      	CPI  R18,32
0002bb f419      	BRNE _0x200003D
0002bc e2e0      	LDI  R30,LOW(32)
0002bd 8bed      	STD  Y+21,R30
0002be c1c5      	RJMP _0x2000035
                 _0x200003D:
0002bf c002      	RJMP _0x200003E
                 _0x2000039:
0002c0 30e2      	CPI  R30,LOW(0x2)
0002c1 f439      	BRNE _0x200003F
                 _0x200003E:
0002c2 e050      	LDI  R21,LOW(0)
0002c3 e013      	LDI  R17,LOW(3)
0002c4 3320      	CPI  R18,48
0002c5 f411      	BRNE _0x2000040
0002c6 6800      	ORI  R16,LOW(128)
0002c7 c1bc      	RJMP _0x2000035
                 _0x2000040:
0002c8 c002      	RJMP _0x2000041
                 _0x200003F:
0002c9 30e3      	CPI  R30,LOW(0x3)
0002ca f491      	BRNE _0x2000042
                 _0x2000041:
0002cb 3320      	CPI  R18,48
0002cc f010      	BRLO _0x2000044
0002cd 332a      	CPI  R18,58
0002ce f008      	BRLO _0x2000045
                 _0x2000044:
0002cf c007      	RJMP _0x2000043
                 _0x2000045:
0002d0 e0aa      	LDI  R26,LOW(10)
0002d1 9f5a      	MUL  R21,R26
0002d2 2d50      	MOV  R21,R0
0002d3 2fe2      	MOV  R30,R18
0002d4 53e0      	SUBI R30,LOW(48)
0002d5 0f5e      	ADD  R21,R30
0002d6 c1ad      	RJMP _0x2000035
                 _0x2000043:
0002d7 e040      	LDI  R20,LOW(0)
0002d8 322e      	CPI  R18,46
0002d9 f411      	BRNE _0x2000046
0002da e014      	LDI  R17,LOW(4)
0002db c1a8      	RJMP _0x2000035
                 _0x2000046:
0002dc c00f      	RJMP _0x2000047
                 _0x2000042:
0002dd 30e4      	CPI  R30,LOW(0x4)
0002de f499      	BRNE _0x2000049
0002df 3320      	CPI  R18,48
0002e0 f010      	BRLO _0x200004B
0002e1 332a      	CPI  R18,58
0002e2 f008      	BRLO _0x200004C
                 _0x200004B:
0002e3 c008      	RJMP _0x200004A
                 _0x200004C:
0002e4 6200      	ORI  R16,LOW(32)
0002e5 e0aa      	LDI  R26,LOW(10)
0002e6 9f4a      	MUL  R20,R26
0002e7 2d40      	MOV  R20,R0
0002e8 2fe2      	MOV  R30,R18
0002e9 53e0      	SUBI R30,LOW(48)
0002ea 0f4e      	ADD  R20,R30
0002eb c198      	RJMP _0x2000035
                 _0x200004A:
                 _0x2000047:
0002ec 362c      	CPI  R18,108
0002ed f419      	BRNE _0x200004D
0002ee 6002      	ORI  R16,LOW(2)
0002ef e015      	LDI  R17,LOW(5)
0002f0 c193      	RJMP _0x2000035
                 _0x200004D:
0002f1 c003      	RJMP _0x200004E
                 _0x2000049:
0002f2 30e5      	CPI  R30,LOW(0x5)
0002f3 f009      	BREQ PC+2
0002f4 c18f      	RJMP _0x2000035
                 _0x200004E:
0002f5 2fe2      	MOV  R30,R18
0002f6 36e3      	CPI  R30,LOW(0x63)
0002f7 f459      	BRNE _0x2000053
0002f8 940e 06ed 	CALL SUBOPT_0x14
0002fa 940e 06f4 	CALL SUBOPT_0x15
0002fc 940e 06ed 	CALL SUBOPT_0x14
0002fe 81a4      	LDD  R26,Z+4
0002ff 93aa      	ST   -Y,R26
000300 940e 06fb 	CALL SUBOPT_0x16
000302 c180      	RJMP _0x2000054
                 _0x2000053:
000303 34e5      	CPI  R30,LOW(0x45)
000304 f011      	BREQ _0x2000057
000305 36e5      	CPI  R30,LOW(0x65)
000306 f409      	BRNE _0x2000058
                 _0x2000057:
000307 c003      	RJMP _0x2000059
                 _0x2000058:
000308 36e6      	CPI  R30,LOW(0x66)
000309 f009      	BREQ PC+2
00030a c048      	RJMP _0x200005A
                 _0x2000059:
00030b 01fe      	MOVW R30,R28
00030c 9676      	ADIW R30,22
00030d 87ee      	STD  Y+14,R30
00030e 87ff      	STD  Y+14+1,R31
00030f 940e 0701 	CALL SUBOPT_0x17
000311 940e 09a0 	CALL __GETD1P
000313 940e 0708 	CALL SUBOPT_0x18
000315 940e 070d 	CALL SUBOPT_0x19
000317 85ad      	LDD  R26,Y+13
000318 23aa      	TST  R26
000319 f032      	BRMI _0x200005B
00031a 89ad      	LDD  R26,Y+21
00031b 32ab      	CPI  R26,LOW(0x2B)
00031c f059      	BREQ _0x200005D
00031d 32a0      	CPI  R26,LOW(0x20)
00031e f081      	BREQ _0x200005F
00031f c017      	RJMP _0x2000060
                 _0x200005B:
000320 940e 070f 	CALL SUBOPT_0x1A
000322 940e 0788 	CALL __ANEGF1
000324 940e 0708 	CALL SUBOPT_0x18
000326 e2ed      	LDI  R30,LOW(45)
000327 8bed      	STD  Y+21,R30
                 _0x200005D:
000328 ff07      	SBRS R16,7
000329 c005      	RJMP _0x2000061
00032a 89ed      	LDD  R30,Y+21
00032b 93ea      	ST   -Y,R30
00032c 940e 06fb 	CALL SUBOPT_0x16
00032e c008      	RJMP _0x2000062
                 _0x2000061:
                 _0x200005F:
00032f 85ee      	LDD  R30,Y+14
000330 85ff      	LDD  R31,Y+14+1
000331 9631      	ADIW R30,1
000332 87ee      	STD  Y+14,R30
000333 87ff      	STD  Y+14+1,R31
000334 9731      	SBIW R30,1
000335 89ad      	LDD  R26,Y+21
000336 83a0      	STD  Z+0,R26
                 _0x2000062:
                 _0x2000060:
000337 ff05      	SBRS R16,5
000338 e046      	LDI  R20,LOW(6)
000339 3626      	CPI  R18,102
00033a f451      	BRNE _0x2000064
00033b 940e 070f 	CALL SUBOPT_0x1A
00033d 940e 09ba 	CALL __PUTPARD1
00033f 934a      	ST   -Y,R20
000340 89ab      	LDD  R26,Y+19
000341 89bc      	LDD  R27,Y+19+1
000342 940e 05bc 	CALL _ftoa
000344 c009      	RJMP _0x2000065
                 _0x2000064:
000345 940e 070f 	CALL SUBOPT_0x1A
000347 940e 09ba 	CALL __PUTPARD1
000349 934a      	ST   -Y,R20
00034a 932a      	ST   -Y,R18
00034b 89ac      	LDD  R26,Y+20
00034c 89bd      	LDD  R27,Y+20+1
00034d de52      	RCALL __ftoe_G100
                 _0x2000065:
00034e 01fe      	MOVW R30,R28
00034f 9676      	ADIW R30,22
000350 940e 0714 	CALL SUBOPT_0x1B
000352 c01e      	RJMP _0x2000066
                 _0x200005A:
000353 37e3      	CPI  R30,LOW(0x73)
000354 f439      	BRNE _0x2000068
000355 940e 070d 	CALL SUBOPT_0x19
000357 940e 071c 	CALL SUBOPT_0x1C
000359 940e 0714 	CALL SUBOPT_0x1B
00035b c00e      	RJMP _0x2000069
                 _0x2000068:
00035c 37e0      	CPI  R30,LOW(0x70)
00035d f4c1      	BRNE _0x200006B
00035e 940e 070d 	CALL SUBOPT_0x19
000360 940e 071c 	CALL SUBOPT_0x1C
000362 87ee      	STD  Y+14,R30
000363 87ff      	STD  Y+14+1,R31
000364 85ae      	LDD  R26,Y+14
000365 85bf      	LDD  R27,Y+14+1
000366 940e 0567 	CALL _strlenf
000368 2f1e      	MOV  R17,R30
000369 6008      	ORI  R16,LOW(8)
                 _0x2000069:
00036a 770f      	ANDI R16,LOW(127)
00036b 3040      	CPI  R20,0
00036c f011      	BREQ _0x200006D
00036d 1741      	CP   R20,R17
00036e f008      	BRLO _0x200006E
                 _0x200006D:
00036f c001      	RJMP _0x200006C
                 _0x200006E:
000370 2f14      	MOV  R17,R20
                 _0x200006C:
                 _0x2000066:
000371 e040      	LDI  R20,LOW(0)
000372 e0e0      	LDI  R30,LOW(0)
000373 8bec      	STD  Y+20,R30
000374 e030      	LDI  R19,LOW(0)
000375 c06d      	RJMP _0x200006F
                 _0x200006B:
000376 36e4      	CPI  R30,LOW(0x64)
000377 f011      	BREQ _0x2000072
000378 36e9      	CPI  R30,LOW(0x69)
000379 f411      	BRNE _0x2000073
                 _0x2000072:
00037a 6004      	ORI  R16,LOW(4)
00037b c002      	RJMP _0x2000074
                 _0x2000073:
00037c 37e5      	CPI  R30,LOW(0x75)
00037d f4a1      	BRNE _0x2000075
                 _0x2000074:
00037e e0ea      	LDI  R30,LOW(10)
00037f 8bec      	STD  Y+20,R30
000380 ff01      	SBRS R16,1
000381 c008      	RJMP _0x2000076
                +
000382 e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
000383 ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
000384 e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
000385 e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
000386 940e 0721 	CALL SUBOPT_0x1D
000388 e01a      	LDI  R17,LOW(10)
000389 c022      	RJMP _0x2000077
                 _0x2000076:
                +
00038a e1e0     +LDI R30 , LOW ( 0x2710 )
00038b e2f7     +LDI R31 , HIGH ( 0x2710 )
00038c e060     +LDI R22 , BYTE3 ( 0x2710 )
00038d e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
00038e 940e 0721 	CALL SUBOPT_0x1D
000390 e015      	LDI  R17,LOW(5)
000391 c01a      	RJMP _0x2000077
                 _0x2000075:
000392 35e8      	CPI  R30,LOW(0x58)
000393 f411      	BRNE _0x2000079
000394 6008      	ORI  R16,LOW(8)
000395 c003      	RJMP _0x200007A
                 _0x2000079:
000396 37e8      	CPI  R30,LOW(0x78)
000397 f009      	BREQ PC+2
000398 c0ea      	RJMP _0x20000B8
                 _0x200007A:
000399 e1e0      	LDI  R30,LOW(16)
00039a 8bec      	STD  Y+20,R30
00039b ff01      	SBRS R16,1
00039c c008      	RJMP _0x200007C
                +
00039d e0e0     +LDI R30 , LOW ( 0x10000000 )
00039e e0f0     +LDI R31 , HIGH ( 0x10000000 )
00039f e060     +LDI R22 , BYTE3 ( 0x10000000 )
0003a0 e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
0003a1 940e 0721 	CALL SUBOPT_0x1D
0003a3 e018      	LDI  R17,LOW(8)
0003a4 c007      	RJMP _0x2000077
                 _0x200007C:
                +
0003a5 e0e0     +LDI R30 , LOW ( 0x1000 )
0003a6 e1f0     +LDI R31 , HIGH ( 0x1000 )
0003a7 e060     +LDI R22 , BYTE3 ( 0x1000 )
0003a8 e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
0003a9 940e 0721 	CALL SUBOPT_0x1D
0003ab e014      	LDI  R17,LOW(4)
                 _0x2000077:
0003ac 3040      	CPI  R20,0
0003ad f011      	BREQ _0x200007D
0003ae 770f      	ANDI R16,LOW(127)
0003af c001      	RJMP _0x200007E
                 _0x200007D:
0003b0 e041      	LDI  R20,LOW(1)
                 _0x200007E:
0003b1 ff01      	SBRS R16,1
0003b2 c008      	RJMP _0x200007F
0003b3 940e 070d 	CALL SUBOPT_0x19
0003b5 940e 0701 	CALL SUBOPT_0x17
0003b7 9614      	ADIW R26,4
0003b8 940e 09a0 	CALL __GETD1P
0003ba c00f      	RJMP _0x2000115
                 _0x200007F:
0003bb ff02      	SBRS R16,2
0003bc c007      	RJMP _0x2000081
0003bd 940e 070d 	CALL SUBOPT_0x19
0003bf 940e 071c 	CALL SUBOPT_0x1C
0003c1 940e 0943 	CALL __CWD1
0003c3 c006      	RJMP _0x2000115
                 _0x2000081:
0003c4 940e 070d 	CALL SUBOPT_0x19
0003c6 940e 071c 	CALL SUBOPT_0x1C
0003c8 2766      	CLR  R22
0003c9 2777      	CLR  R23
                 _0x2000115:
                +
0003ca 87ea     +STD Y + 10 , R30
0003cb 87fb     +STD Y + 10 + 1 , R31
0003cc 876c     +STD Y + 10 + 2 , R22
0003cd 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
0003ce ff02      	SBRS R16,2
0003cf c012      	RJMP _0x2000083
0003d0 85ad      	LDD  R26,Y+13
0003d1 23aa      	TST  R26
0003d2 f442      	BRPL _0x2000084
0003d3 940e 070f 	CALL SUBOPT_0x1A
0003d5 940e 0935 	CALL __ANEGD1
0003d7 940e 0708 	CALL SUBOPT_0x18
0003d9 e2ed      	LDI  R30,LOW(45)
0003da 8bed      	STD  Y+21,R30
                 _0x2000084:
0003db 89ed      	LDD  R30,Y+21
0003dc 30e0      	CPI  R30,0
0003dd f019      	BREQ _0x2000085
0003de 5f1f      	SUBI R17,-LOW(1)
0003df 5f4f      	SUBI R20,-LOW(1)
0003e0 c001      	RJMP _0x2000086
                 _0x2000085:
0003e1 7f0b      	ANDI R16,LOW(251)
                 _0x2000086:
                 _0x2000083:
0003e2 2f34      	MOV  R19,R20
                 _0x200006F:
0003e3 fd00      	SBRC R16,0
0003e4 c014      	RJMP _0x2000087
                 _0x2000088:
0003e5 1715      	CP   R17,R21
0003e6 f410      	BRSH _0x200008B
0003e7 1735      	CP   R19,R21
0003e8 f008      	BRLO _0x200008C
                 _0x200008B:
0003e9 c00f      	RJMP _0x200008A
                 _0x200008C:
0003ea ff07      	SBRS R16,7
0003eb c008      	RJMP _0x200008D
0003ec ff02      	SBRS R16,2
0003ed c004      	RJMP _0x200008E
0003ee 7f0b      	ANDI R16,LOW(251)
0003ef 892d      	LDD  R18,Y+21
0003f0 5011      	SUBI R17,LOW(1)
0003f1 c001      	RJMP _0x200008F
                 _0x200008E:
0003f2 e320      	LDI  R18,LOW(48)
                 _0x200008F:
0003f3 c001      	RJMP _0x2000090
                 _0x200008D:
0003f4 e220      	LDI  R18,LOW(32)
                 _0x2000090:
0003f5 940e 06e6 	CALL SUBOPT_0x13
0003f7 5051      	SUBI R21,LOW(1)
0003f8 cfec      	RJMP _0x2000088
                 _0x200008A:
                 _0x2000087:
                 _0x2000091:
0003f9 1714      	CP   R17,R20
0003fa f490      	BRSH _0x2000093
0003fb 6100      	ORI  R16,LOW(16)
0003fc ff02      	SBRS R16,2
0003fd c006      	RJMP _0x2000094
0003fe 940e 0726 	CALL SUBOPT_0x1E
000400 f009      	BREQ _0x2000095
000401 5051      	SUBI R21,LOW(1)
                 _0x2000095:
000402 5011      	SUBI R17,LOW(1)
000403 5041      	SUBI R20,LOW(1)
                 _0x2000094:
000404 e3e0      	LDI  R30,LOW(48)
000405 93ea      	ST   -Y,R30
000406 940e 06fb 	CALL SUBOPT_0x16
000408 3050      	CPI  R21,0
000409 f009      	BREQ _0x2000096
00040a 5051      	SUBI R21,LOW(1)
                 _0x2000096:
00040b 5041      	SUBI R20,LOW(1)
00040c cfec      	RJMP _0x2000091
                 _0x2000093:
00040d 2f31      	MOV  R19,R17
00040e 89ec      	LDD  R30,Y+20
00040f 30e0      	CPI  R30,0
000410 f4b9      	BRNE _0x2000097
                 _0x2000098:
000411 3030      	CPI  R19,0
000412 f0a1      	BREQ _0x200009A
000413 ff03      	SBRS R16,3
000414 c006      	RJMP _0x200009B
000415 85ee      	LDD  R30,Y+14
000416 85ff      	LDD  R31,Y+14+1
000417 9125      	LPM  R18,Z+
000418 87ee      	STD  Y+14,R30
000419 87ff      	STD  Y+14+1,R31
00041a c005      	RJMP _0x200009C
                 _0x200009B:
00041b 85ae      	LDD  R26,Y+14
00041c 85bf      	LDD  R27,Y+14+1
00041d 912d      	LD   R18,X+
00041e 87ae      	STD  Y+14,R26
00041f 87bf      	STD  Y+14+1,R27
                 _0x200009C:
000420 940e 06e6 	CALL SUBOPT_0x13
000422 3050      	CPI  R21,0
000423 f009      	BREQ _0x200009D
000424 5051      	SUBI R21,LOW(1)
                 _0x200009D:
000425 5031      	SUBI R19,LOW(1)
000426 cfea      	RJMP _0x2000098
                 _0x200009A:
000427 c051      	RJMP _0x200009E
                 _0x2000097:
                 _0x20000A0:
000428 940e 0738 	CALL SUBOPT_0x1F
00042a 940e 095b 	CALL __DIVD21U
00042c 2f2e      	MOV  R18,R30
00042d 302a      	CPI  R18,10
00042e f030      	BRLO _0x20000A2
00042f ff03      	SBRS R16,3
000430 c002      	RJMP _0x20000A3
000431 5c29      	SUBI R18,-LOW(55)
000432 c001      	RJMP _0x20000A4
                 _0x20000A3:
000433 5a29      	SUBI R18,-LOW(87)
                 _0x20000A4:
000434 c001      	RJMP _0x20000A5
                 _0x20000A2:
000435 5d20      	SUBI R18,-LOW(48)
                 _0x20000A5:
000436 fd04      	SBRC R16,4
000437 c021      	RJMP _0x20000A7
000438 3321      	CPI  R18,49
000439 f460      	BRSH _0x20000A9
                +
00043a 89a8     +LDD R26 , Y + 16
00043b 89b9     +LDD R27 , Y + 16 + 1
00043c 898a     +LDD R24 , Y + 16 + 2
00043d 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
                +
00043e 30a1     +CPI R26 , LOW ( 0x1 )
00043f e0e0     +LDI R30 , HIGH ( 0x1 )
000440 07be     +CPC R27 , R30
000441 e0e0     +LDI R30 , BYTE3 ( 0x1 )
000442 078e     +CPC R24 , R30
000443 e0e0     +LDI R30 , BYTE4 ( 0x1 )
000444 079e     +CPC R25 , R30
                 	__CPD2N 0x1
000445 f409      	BRNE _0x20000A8
                 _0x20000A9:
000446 c00b      	RJMP _0x20000AB
                 _0x20000A8:
000447 1743      	CP   R20,R19
000448 f440      	BRSH _0x2000116
000449 1753      	CP   R21,R19
00044a f010      	BRLO _0x20000AE
00044b ff00      	SBRS R16,0
00044c c001      	RJMP _0x20000AF
                 _0x20000AE:
00044d c010      	RJMP _0x20000AD
                 _0x20000AF:
00044e e220      	LDI  R18,LOW(32)
00044f ff07      	SBRS R16,7
000450 c008      	RJMP _0x20000B0
                 _0x2000116:
000451 e320      	LDI  R18,LOW(48)
                 _0x20000AB:
000452 6100      	ORI  R16,LOW(16)
000453 ff02      	SBRS R16,2
000454 c004      	RJMP _0x20000B1
000455 940e 0726 	CALL SUBOPT_0x1E
000457 f009      	BREQ _0x20000B2
000458 5051      	SUBI R21,LOW(1)
                 _0x20000B2:
                 _0x20000B1:
                 _0x20000B0:
                 _0x20000A7:
000459 940e 06e6 	CALL SUBOPT_0x13
00045b 3050      	CPI  R21,0
00045c f009      	BREQ _0x20000B3
00045d 5051      	SUBI R21,LOW(1)
                 _0x20000B3:
                 _0x20000AD:
00045e 5031      	SUBI R19,LOW(1)
00045f 940e 0738 	CALL SUBOPT_0x1F
000461 940e 098c 	CALL __MODD21U
000463 940e 0708 	CALL SUBOPT_0x18
000465 89ec      	LDD  R30,Y+20
                +
000466 89a8     +LDD R26 , Y + 16
000467 89b9     +LDD R27 , Y + 16 + 1
000468 898a     +LDD R24 , Y + 16 + 2
000469 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
00046a 27ff      	CLR  R31
00046b 2766      	CLR  R22
00046c 2777      	CLR  R23
00046d 940e 095b 	CALL __DIVD21U
00046f 940e 0721 	CALL SUBOPT_0x1D
                +
000471 89e8     +LDD R30 , Y + 16
000472 89f9     +LDD R31 , Y + 16 + 1
000473 896a     +LDD R22 , Y + 16 + 2
000474 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
000475 940e 09d1 	CALL __CPD10
000477 f009      	BREQ _0x20000A1
000478 cfaf      	RJMP _0x20000A0
                 _0x20000A1:
                 _0x200009E:
000479 ff00      	SBRS R16,0
00047a c008      	RJMP _0x20000B4
                 _0x20000B5:
00047b 3050      	CPI  R21,0
00047c f031      	BREQ _0x20000B7
00047d 5051      	SUBI R21,LOW(1)
00047e e2e0      	LDI  R30,LOW(32)
00047f 93ea      	ST   -Y,R30
000480 940e 06fb 	CALL SUBOPT_0x16
000482 cff8      	RJMP _0x20000B5
                 _0x20000B7:
                 _0x20000B4:
                 _0x20000B8:
                 _0x2000054:
                 _0x2000114:
000483 e010      	LDI  R17,LOW(0)
                 _0x2000035:
000484 ce0c      	RJMP _0x2000030
                 _0x2000032:
000485 81ae      	LDD  R26,Y+6
000486 81bf      	LDD  R27,Y+6+1
000487 940e 099c 	CALL __GETW1P
000489 940e 09dc 	CALL __LOADLOCR6
00048b 96ef      	ADIW R28,63
00048c 966f      	ADIW R28,31
00048d 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
00048e 92ff      	PUSH R15
00048f 2ef8      	MOV  R15,R24
000490 9726      	SBIW R28,6
000491 940e 09d7 	CALL __SAVELOCR4
000493 940e 0741 	CALL SUBOPT_0x20
000495 9730      	SBIW R30,0
000496 f419      	BRNE _0x20000B9
000497 efef      	LDI  R30,LOW(65535)
000498 efff      	LDI  R31,HIGH(65535)
000499 c023      	RJMP _0x20C0005
                 _0x20000B9:
00049a 01de      	MOVW R26,R28
00049b 9616      	ADIW R26,6
00049c 940e 0931 	CALL __ADDW2R15
00049e 018d      	MOVW R16,R26
00049f 940e 0741 	CALL SUBOPT_0x20
0004a1 83ee      	STD  Y+6,R30
0004a2 83ff      	STD  Y+6+1,R31
0004a3 e0e0      	LDI  R30,LOW(0)
0004a4 87e8      	STD  Y+8,R30
0004a5 87e9      	STD  Y+8+1,R30
0004a6 01de      	MOVW R26,R28
0004a7 961a      	ADIW R26,10
0004a8 940e 0931 	CALL __ADDW2R15
0004aa 940e 099c 	CALL __GETW1P
0004ac 93fa      	ST   -Y,R31
0004ad 93ea      	ST   -Y,R30
0004ae 931a      	ST   -Y,R17
0004af 930a      	ST   -Y,R16
0004b0 e6e6      	LDI  R30,LOW(_put_buff_G100)
0004b1 e0f1      	LDI  R31,HIGH(_put_buff_G100)
0004b2 93fa      	ST   -Y,R31
0004b3 93ea      	ST   -Y,R30
0004b4 01de      	MOVW R26,R28
0004b5 961a      	ADIW R26,10
0004b6 ddbd      	RCALL __print_G100
0004b7 019f      	MOVW R18,R30
0004b8 81ae      	LDD  R26,Y+6
0004b9 81bf      	LDD  R27,Y+6+1
0004ba e0e0      	LDI  R30,LOW(0)
0004bb 93ec      	ST   X,R30
0004bc 01f9      	MOVW R30,R18
                 _0x20C0005:
0004bd 940e 09de 	CALL __LOADLOCR4
0004bf 962a      	ADIW R28,10
0004c0 90ff      	POP  R15
0004c1 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G101:
                 ; .FSTART __lcd_write_nibble_G101
0004c2 93aa      	ST   -Y,R26
0004c3 b3e5      	IN   R30,0x15
0004c4 70ef      	ANDI R30,LOW(0xF)
0004c5 2fae      	MOV  R26,R30
0004c6 81e8      	LD   R30,Y
0004c7 7fe0      	ANDI R30,LOW(0xF0)
0004c8 2bea      	OR   R30,R26
0004c9 bbe5      	OUT  0x15,R30
                +
0004ca e082     +LDI R24 , LOW ( 2 )
                +__DELAY_USB_LOOP :
0004cb 958a     +DEC R24
0004cc f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 2
0004cd 9aaa      	SBI  0x15,2
                +
0004ce e082     +LDI R24 , LOW ( 2 )
                +__DELAY_USB_LOOP :
0004cf 958a     +DEC R24
0004d0 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 2
0004d1 98aa      	CBI  0x15,2
                +
0004d2 e082     +LDI R24 , LOW ( 2 )
                +__DELAY_USB_LOOP :
0004d3 958a     +DEC R24
0004d4 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 2
0004d5 c076      	RJMP _0x20C0004
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
0004d6 93aa      	ST   -Y,R26
0004d7 81a8      	LD   R26,Y
0004d8 dfe9      	RCALL __lcd_write_nibble_G101
0004d9 81e8          ld    r30,y
0004da 95e2          swap  r30
0004db 83e8          st    y,r30
0004dc 81a8      	LD   R26,Y
0004dd dfe4      	RCALL __lcd_write_nibble_G101
                +
0004de e181     +LDI R24 , LOW ( 17 )
                +__DELAY_USB_LOOP :
0004df 958a     +DEC R24
0004e0 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 17
0004e1 c06a      	RJMP _0x20C0004
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
0004e2 93aa      	ST   -Y,R26
0004e3 81e8      	LD   R30,Y
0004e4 e0f0      	LDI  R31,0
0004e5 56ec      	SUBI R30,LOW(-__base_y_G101)
0004e6 4ffd      	SBCI R31,HIGH(-__base_y_G101)
0004e7 81e0      	LD   R30,Z
0004e8 81a9      	LDD  R26,Y+1
0004e9 0fae      	ADD  R26,R30
0004ea dfeb      	RCALL __lcd_write_data
0004eb 8059      	LDD  R5,Y+1
0004ec 8048      	LDD  R4,Y+0
0004ed 9622      	ADIW R28,2
0004ee 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
0004ef e0a2      	LDI  R26,LOW(2)
0004f0 940e 0748 	CALL SUBOPT_0x21
0004f2 e0ac      	LDI  R26,LOW(12)
0004f3 dfe2      	RCALL __lcd_write_data
0004f4 e0a1      	LDI  R26,LOW(1)
0004f5 940e 0748 	CALL SUBOPT_0x21
0004f7 e0e0      	LDI  R30,LOW(0)
0004f8 2e4e      	MOV  R4,R30
0004f9 2e5e      	MOV  R5,R30
0004fa 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
0004fb 93aa      	ST   -Y,R26
0004fc 81a8      	LD   R26,Y
0004fd 30aa      	CPI  R26,LOW(0xA)
0004fe f011      	BREQ _0x2020005
0004ff 1457      	CP   R5,R7
000500 f048      	BRLO _0x2020004
                 _0x2020005:
000501 e0e0      	LDI  R30,LOW(0)
000502 93ea      	ST   -Y,R30
000503 9443      	INC  R4
000504 2da4      	MOV  R26,R4
000505 dfdc      	RCALL _lcd_gotoxy
000506 81a8      	LD   R26,Y
000507 30aa      	CPI  R26,LOW(0xA)
000508 f409      	BRNE _0x2020007
000509 c042      	RJMP _0x20C0004
                 _0x2020007:
                 _0x2020004:
00050a 9453      	INC  R5
00050b 9aa8      	SBI  0x15,0
00050c 81a8      	LD   R26,Y
00050d dfc8      	RCALL __lcd_write_data
00050e 98a8      	CBI  0x15,0
00050f c03c      	RJMP _0x20C0004
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
000510 93ba      	ST   -Y,R27
000511 93aa      	ST   -Y,R26
000512 931a      	ST   -Y,R17
                 _0x2020008:
000513 81a9      	LDD  R26,Y+1
000514 81ba      	LDD  R27,Y+1+1
000515 91ed      	LD   R30,X+
000516 83a9      	STD  Y+1,R26
000517 83ba      	STD  Y+1+1,R27
000518 2f1e      	MOV  R17,R30
000519 30e0      	CPI  R30,0
00051a f019      	BREQ _0x202000A
00051b 2fa1      	MOV  R26,R17
00051c dfde      	RCALL _lcd_putchar
00051d cff5      	RJMP _0x2020008
                 _0x202000A:
00051e 8118      	LDD  R17,Y+0
00051f 9623      	ADIW R28,3
000520 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
000521 93aa      	ST   -Y,R26
000522 b3e4      	IN   R30,0x14
000523 6fe0      	ORI  R30,LOW(0xF0)
000524 bbe4      	OUT  0x14,R30
000525 9aa2      	SBI  0x14,2
000526 9aa0      	SBI  0x14,0
000527 9aa1      	SBI  0x14,1
000528 98aa      	CBI  0x15,2
000529 98a8      	CBI  0x15,0
00052a 98a9      	CBI  0x15,1
00052b 8078      	LDD  R7,Y+0
00052c 81e8      	LD   R30,Y
00052d 58e0      	SUBI R30,-LOW(128)
                +
00052e 93e0 0296+STS __base_y_G101 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G101,2
000530 81e8      	LD   R30,Y
000531 54e0      	SUBI R30,-LOW(192)
                +
000532 93e0 0297+STS __base_y_G101 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G101,3
000534 e1a4      	LDI  R26,LOW(20)
000535 e0b0      	LDI  R27,0
000536 940e 077e 	CALL _delay_ms
000538 940e 074e 	CALL SUBOPT_0x22
00053a 940e 074e 	CALL SUBOPT_0x22
00053c 940e 074e 	CALL SUBOPT_0x22
00053e e2a0      	LDI  R26,LOW(32)
00053f df82      	RCALL __lcd_write_nibble_G101
                +
000540 e281     +LDI R24 , LOW ( 33 )
                +__DELAY_USB_LOOP :
000541 958a     +DEC R24
000542 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 33
000543 e2a8      	LDI  R26,LOW(40)
000544 df91      	RCALL __lcd_write_data
000545 e0a4      	LDI  R26,LOW(4)
000546 df8f      	RCALL __lcd_write_data
000547 e8a5      	LDI  R26,LOW(133)
000548 df8d      	RCALL __lcd_write_data
000549 e0a6      	LDI  R26,LOW(6)
00054a df8b      	RCALL __lcd_write_data
00054b dfa3      	RCALL _lcd_clear
                 _0x20C0004:
00054c 9621      	ADIW R28,1
00054d 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strcpyf:
                 ; .FSTART _strcpyf
00054e 93ba      	ST   -Y,R27
00054f 93aa      	ST   -Y,R26
000550 91e9          ld   r30,y+
000551 91f9          ld   r31,y+
000552 91a9          ld   r26,y+
000553 91b9          ld   r27,y+
000554 01cd          movw r24,r26
                 strcpyf0:
000555 9005      	lpm  r0,z+
000556 920d          st   x+,r0
000557 2000          tst  r0
000558 f7e1          brne strcpyf0
000559 01fc          movw r30,r24
00055a 9508          ret
                 ; .FEND
                 _strlen:
                 ; .FSTART _strlen
00055b 93ba      	ST   -Y,R27
00055c 93aa      	ST   -Y,R26
00055d 91a9          ld   r26,y+
00055e 91b9          ld   r27,y+
00055f 27ee          clr  r30
000560 27ff          clr  r31
                 strlen0:
000561 916d          ld   r22,x+
000562 2366          tst  r22
000563 f011          breq strlen1
000564 9631          adiw r30,1
000565 cffb          rjmp strlen0
                 strlen1:
000566 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
000567 93ba      	ST   -Y,R27
000568 93aa      	ST   -Y,R26
000569 27aa          clr  r26
00056a 27bb          clr  r27
00056b 91e9          ld   r30,y+
00056c 91f9          ld   r31,y+
                 strlenf0:
00056d 9005      	lpm  r0,z+
00056e 2000          tst  r0
00056f f011          breq strlenf1
000570 9611          adiw r26,1
000571 cffb          rjmp strlenf0
                 strlenf1:
000572 01fd          movw r30,r26
000573 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 _ftrunc:
                 ; .FSTART _ftrunc
000574 940e 09bf 	CALL __PUTPARD2
000576 817b         ldd  r23,y+3
000577 816a         ldd  r22,y+2
000578 81f9         ldd  r31,y+1
000579 81e8         ld   r30,y
00057a fb77         bst  r23,7
00057b 0f77         lsl  r23
00057c fd67         sbrc r22,7
00057d 6071         sbr  r23,1
00057e 2f97         mov  r25,r23
00057f 579e         subi r25,0x7e
000580 f081         breq __ftrunc0
000581 f078         brcs __ftrunc0
000582 3198         cpi  r25,24
000583 f490         brsh __ftrunc1
000584 27aa         clr  r26
000585 27bb         clr  r27
000586 2788         clr  r24
                 __ftrunc2:
000587 9408         sec
000588 9587         ror  r24
000589 95b7         ror  r27
00058a 95a7         ror  r26
00058b 959a         dec  r25
00058c f7d1         brne __ftrunc2
00058d 23ea         and  r30,r26
00058e 23fb         and  r31,r27
00058f 2368         and  r22,r24
000590 c005         rjmp __ftrunc1
                 __ftrunc0:
000591 94e8         clt
000592 2777         clr  r23
000593 27ee         clr  r30
000594 27ff         clr  r31
000595 2766         clr  r22
                 __ftrunc1:
000596 776f         cbr  r22,0x80
000597 9576         lsr  r23
000598 f408         brcc __ftrunc3
000599 6860         sbr  r22,0x80
                 __ftrunc3:
00059a f977         bld  r23,7
00059b 91a9         ld   r26,y+
00059c 91b9         ld   r27,y+
00059d 9189         ld   r24,y+
00059e 9199         ld   r25,y+
00059f 17ea         cp   r30,r26
0005a0 07fb         cpc  r31,r27
0005a1 0768         cpc  r22,r24
0005a2 0779         cpc  r23,r25
0005a3 fb97         bst  r25,7
0005a4 9508         ret
                 ; .FEND
                 _floor:
                 ; .FSTART _floor
0005a5 940e 09bf 	CALL __PUTPARD2
0005a7 940e 09b0 	CALL __GETD2S0
0005a9 940e 0574 	CALL _ftrunc
0005ab 940e 09b5 	CALL __PUTD1S0
0005ad f419          brne __floor1
                 __floor0:
0005ae 940e 09ab 	CALL __GETD1S0
0005b0 c009      	RJMP _0x20C0003
                 __floor1:
0005b1 f7e6          brtc __floor0
0005b2 940e 09ab 	CALL __GETD1S0
                +
0005b4 e0a0     +LDI R26 , LOW ( 0x3F800000 )
0005b5 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
0005b6 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
0005b7 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
0005b8 940e 0827 	CALL __SUBF12
                 _0x20C0003:
0005ba 9624      	ADIW R28,4
0005bb 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _ftoa:
                 ; .FSTART _ftoa
0005bc d0c8      	RCALL SUBOPT_0x6
0005bd e0e0      	LDI  R30,LOW(0)
0005be 83ea      	STD  Y+2,R30
0005bf e3ef      	LDI  R30,LOW(63)
0005c0 83eb      	STD  Y+3,R30
0005c1 931a      	ST   -Y,R17
0005c2 930a      	ST   -Y,R16
0005c3 85eb      	LDD  R30,Y+11
0005c4 85fc      	LDD  R31,Y+11+1
0005c5 3fef      	CPI  R30,LOW(0xFFFF)
0005c6 efaf      	LDI  R26,HIGH(0xFFFF)
0005c7 07fa      	CPC  R31,R26
0005c8 f431      	BRNE _0x20A000D
0005c9 d18b      	RCALL SUBOPT_0x23
                +
0005ca e8a6     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 0 ) )
0005cb e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 0 ) )
                 	__POINTW2FN _0x20A0000,0
0005cc 940e 054e 	CALL _strcpyf
0005ce c089      	RJMP _0x20C0002
                 _0x20A000D:
0005cf 3fef      	CPI  R30,LOW(0x7FFF)
0005d0 e7af      	LDI  R26,HIGH(0x7FFF)
0005d1 07fa      	CPC  R31,R26
0005d2 f431      	BRNE _0x20A000C
0005d3 d181      	RCALL SUBOPT_0x23
                +
0005d4 e8a7     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 1 ) )
0005d5 e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 1 ) )
                 	__POINTW2FN _0x20A0000,1
0005d6 940e 054e 	CALL _strcpyf
0005d8 c07f      	RJMP _0x20C0002
                 _0x20A000C:
0005d9 85ac      	LDD  R26,Y+12
0005da 23aa      	TST  R26
0005db f452      	BRPL _0x20A000F
                +
0005dc 85e9     +LDD R30 , Y + 9
0005dd 85fa     +LDD R31 , Y + 9 + 1
0005de 856b     +LDD R22 , Y + 9 + 2
0005df 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
0005e0 940e 0788 	CALL __ANEGF1
0005e2 d177      	RCALL SUBOPT_0x24
0005e3 d17b      	RCALL SUBOPT_0x25
0005e4 e2ed      	LDI  R30,LOW(45)
0005e5 93ec      	ST   X,R30
                 _0x20A000F:
0005e6 85a8      	LDD  R26,Y+8
0005e7 30a7      	CPI  R26,LOW(0x7)
0005e8 f010      	BRLO _0x20A0010
0005e9 e0e6      	LDI  R30,LOW(6)
0005ea 87e8      	STD  Y+8,R30
                 _0x20A0010:
0005eb 8518      	LDD  R17,Y+8
                 _0x20A0011:
0005ec 2fe1      	MOV  R30,R17
0005ed 5011      	SUBI R17,1
0005ee 30e0      	CPI  R30,0
0005ef f021      	BREQ _0x20A0013
0005f0 d175      	RCALL SUBOPT_0x26
0005f1 d0d6      	RCALL SUBOPT_0xE
0005f2 d178      	RCALL SUBOPT_0x27
0005f3 cff8      	RJMP _0x20A0011
                 _0x20A0013:
0005f4 d17b      	RCALL SUBOPT_0x28
0005f5 940e 082e 	CALL __ADDF12
0005f7 d162      	RCALL SUBOPT_0x24
0005f8 e010      	LDI  R17,LOW(0)
                +
0005f9 e0e0     +LDI R30 , LOW ( 0x3F800000 )
0005fa e0f0     +LDI R31 , HIGH ( 0x3F800000 )
0005fb e860     +LDI R22 , BYTE3 ( 0x3F800000 )
0005fc e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
0005fd d16d      	RCALL SUBOPT_0x27
                 _0x20A0014:
0005fe d171      	RCALL SUBOPT_0x28
0005ff 940e 0911 	CALL __CMPF12
000601 f068      	BRLO _0x20A0016
000602 d163      	RCALL SUBOPT_0x26
000603 d0b3      	RCALL SUBOPT_0xB
000604 d166      	RCALL SUBOPT_0x27
000605 5f1f      	SUBI R17,-LOW(1)
000606 3217      	CPI  R17,39
000607 f030      	BRLO _0x20A0017
000608 d14c      	RCALL SUBOPT_0x23
                +
000609 e8ab     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 5 ) )
00060a e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 5 ) )
                 	__POINTW2FN _0x20A0000,5
00060b 940e 054e 	CALL _strcpyf
00060d c04a      	RJMP _0x20C0002
                 _0x20A0017:
00060e cfef      	RJMP _0x20A0014
                 _0x20A0016:
00060f 3010      	CPI  R17,0
000610 f421      	BRNE _0x20A0018
000611 d14d      	RCALL SUBOPT_0x25
000612 e3e0      	LDI  R30,LOW(48)
000613 93ec      	ST   X,R30
000614 c01f      	RJMP _0x20A0019
                 _0x20A0018:
                 _0x20A001A:
000615 2fe1      	MOV  R30,R17
000616 5011      	SUBI R17,1
000617 30e0      	CPI  R30,0
000618 f0d9      	BREQ _0x20A001C
000619 d14c      	RCALL SUBOPT_0x26
00061a d0ad      	RCALL SUBOPT_0xE
00061b d0a7      	RCALL SUBOPT_0xD
00061c d056      	RCALL SUBOPT_0x3
00061d 940e 05a5 	CALL _floor
00061f d14b      	RCALL SUBOPT_0x27
000620 d14f      	RCALL SUBOPT_0x28
000621 940e 08cc 	CALL __DIVF21
000623 940e 07bb 	CALL __CFD1U
000625 2f0e      	MOV  R16,R30
000626 d138      	RCALL SUBOPT_0x25
000627 d0ae      	RCALL SUBOPT_0x10
000628 e0f0      	LDI  R31,0
000629 d13c      	RCALL SUBOPT_0x26
00062a 940e 0943 	CALL __CWD1
00062c 940e 07f4 	CALL __CDF1
00062e 940e 087e 	CALL __MULF12
000630 d148      	RCALL SUBOPT_0x29
000631 d0a9      	RCALL SUBOPT_0x11
000632 d127      	RCALL SUBOPT_0x24
000633 cfe1      	RJMP _0x20A001A
                 _0x20A001C:
                 _0x20A0019:
000634 85e8      	LDD  R30,Y+8
000635 30e0      	CPI  R30,0
000636 f0e9      	BREQ _0x20C0001
000637 d127      	RCALL SUBOPT_0x25
000638 e2ee      	LDI  R30,LOW(46)
000639 93ec      	ST   X,R30
                 _0x20A001E:
00063a 85e8      	LDD  R30,Y+8
00063b 50e1      	SUBI R30,LOW(1)
00063c 87e8      	STD  Y+8,R30
00063d 5fef      	SUBI R30,-LOW(1)
00063e f0a9      	BREQ _0x20A0020
00063f d139      	RCALL SUBOPT_0x29
000640 d076      	RCALL SUBOPT_0xB
000641 d118      	RCALL SUBOPT_0x24
                +
000642 85e9     +LDD R30 , Y + 9
000643 85fa     +LDD R31 , Y + 9 + 1
000644 856b     +LDD R22 , Y + 9 + 2
000645 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000646 940e 07bb 	CALL __CFD1U
000648 2f0e      	MOV  R16,R30
000649 d115      	RCALL SUBOPT_0x25
00064a d08b      	RCALL SUBOPT_0x10
00064b e0f0      	LDI  R31,0
00064c d12c      	RCALL SUBOPT_0x29
00064d 940e 0943 	CALL __CWD1
00064f 940e 07f4 	CALL __CDF1
000651 d089      	RCALL SUBOPT_0x11
000652 d107      	RCALL SUBOPT_0x24
000653 cfe6      	RJMP _0x20A001E
                 _0x20A0020:
                 _0x20C0001:
000654 81ae      	LDD  R26,Y+6
000655 81bf      	LDD  R27,Y+6+1
000656 e0e0      	LDI  R30,LOW(0)
000657 93ec      	ST   X,R30
                 _0x20C0002:
000658 8119      	LDD  R17,Y+1
000659 8108      	LDD  R16,Y+0
00065a 962d      	ADIW R28,13
00065b 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _temp_1:
000260           	.BYTE 0x4
                 _temp_2:
000264           	.BYTE 0x4
                 _avg:
000268           	.BYTE 0x4
                 _adc1:
00026c           	.BYTE 0x4
                 _adc2:
000270           	.BYTE 0x4
                 _temp_str:
000274           	.BYTE 0x8
                 _temp_str2:
00027c           	.BYTE 0x8
                 _fan_str:
000284           	.BYTE 0x10
                 __base_y_G101:
000294           	.BYTE 0x4
                 __seed_G105:
000298           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x0:
00065c 2766      	CLR  R22
00065d 2777      	CLR  R23
00065e 940e 07f4 	CALL __CDF1
000660 940e 09a6 	CALL __PUTDP1
000662 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1:
                +
000663 e0e0     +LDI R30 , LOW ( 0x40800000 )
000664 e0f0     +LDI R31 , HIGH ( 0x40800000 )
000665 e860     +LDI R22 , BYTE3 ( 0x40800000 )
000666 e470     +LDI R23 , BYTE4 ( 0x40800000 )
                 	__GETD1N 0x40800000
000667 940e 08cc 	CALL __DIVF21
000669 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2:
00066a 91e0 0264 	LDS  R30,_temp_2
00066c 91f0 0265 	LDS  R31,_temp_2+1
00066e 9160 0266 	LDS  R22,_temp_2+2
000670 9170 0267 	LDS  R23,_temp_2+3
000672 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3:
000673 940e 082e 	CALL __ADDF12
000675 01df      	MOVW R26,R30
000676 01cb      	MOVW R24,R22
000677 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4:
000678 940e 09ba 	CALL __PUTPARD1
00067a e084      	LDI  R24,4
00067b 940e 048e 	CALL _sprintf
00067d 9628      	ADIW R28,8
00067e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x5:
00067f 91ed      	LD   R30,X+
000680 91fd      	LD   R31,X+
000681 9631      	ADIW R30,1
000682 93fe      	ST   -X,R31
000683 93ee      	ST   -X,R30
000684 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x6:
000685 93ba      	ST   -Y,R27
000686 93aa      	ST   -Y,R26
000687 9724      	SBIW R28,4
000688 e0e0      	LDI  R30,LOW(0)
000689 83e8      	ST   Y,R30
00068a 83e9      	STD  Y+1,R30
00068b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x7:
                +
00068c 81ac     +LDD R26 , Y + 4
00068d 81bd     +LDD R27 , Y + 4 + 1
00068e 818e     +LDD R24 , Y + 4 + 2
00068f 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
000690 e0e0     +LDI R30 , LOW ( 0x41200000 )
000691 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000692 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000693 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000694 940e 087e 	CALL __MULF12
                +
000696 83ec     +STD Y + 4 , R30
000697 83fd     +STD Y + 4 + 1 , R31
000698 836e     +STD Y + 4 + 2 , R22
000699 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
00069a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x8:
                +
00069b 81ec     +LDD R30 , Y + 4
00069c 81fd     +LDD R31 , Y + 4 + 1
00069d 816e     +LDD R22 , Y + 4 + 2
00069e 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
00069f 85ac     +LDD R26 , Y + 12
0006a0 85bd     +LDD R27 , Y + 12 + 1
0006a1 858e     +LDD R24 , Y + 12 + 2
0006a2 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
0006a3 940e 0911 	CALL __CMPF12
0006a5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x9:
                +
0006a6 85ac     +LDD R26 , Y + 12
0006a7 85bd     +LDD R27 , Y + 12 + 1
0006a8 858e     +LDD R24 , Y + 12 + 2
0006a9 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
0006aa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0xA:
                +
0006ab eced     +LDI R30 , LOW ( 0x3DCCCCCD )
0006ac ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
0006ad ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
0006ae e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
0006af 940e 087e 	CALL __MULF12
                +
0006b1 87ec     +STD Y + 12 , R30
0006b2 87fd     +STD Y + 12 + 1 , R31
0006b3 876e     +STD Y + 12 + 2 , R22
0006b4 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
0006b5 5f3f      	SUBI R19,-LOW(1)
0006b6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xB:
                +
0006b7 e0e0     +LDI R30 , LOW ( 0x41200000 )
0006b8 e0f0     +LDI R31 , HIGH ( 0x41200000 )
0006b9 e260     +LDI R22 , BYTE3 ( 0x41200000 )
0006ba e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
0006bb 940e 087e 	CALL __MULF12
0006bd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xC:
                +
0006be 87ec     +STD Y + 12 , R30
0006bf 87fd     +STD Y + 12 + 1 , R31
0006c0 876e     +STD Y + 12 + 2 , R22
0006c1 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
0006c2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xD:
                +
0006c3 e0a0     +LDI R26 , LOW ( 0x3F000000 )
0006c4 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
0006c5 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
0006c6 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
0006c7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xE:
                +
0006c8 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
0006c9 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
0006ca ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
0006cb e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
0006cc 940e 087e 	CALL __MULF12
0006ce 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF:
0006cf 85a8      	LDD  R26,Y+8
0006d0 85b9      	LDD  R27,Y+8+1
0006d1 9611      	ADIW R26,1
0006d2 87a8      	STD  Y+8,R26
0006d3 87b9      	STD  Y+8+1,R27
0006d4 9711      	SBIW R26,1
0006d5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x10:
0006d6 2fe0      	MOV  R30,R16
0006d7 5de0      	SUBI R30,-LOW(48)
0006d8 93ec      	ST   X,R30
0006d9 2fe0      	MOV  R30,R16
0006da 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x11:
0006db 940e 09c4 	CALL __SWAPD12
0006dd 940e 0827 	CALL __SUBF12
0006df 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x12:
0006e0 85e8      	LDD  R30,Y+8
0006e1 85f9      	LDD  R31,Y+8+1
0006e2 9631      	ADIW R30,1
0006e3 87e8      	STD  Y+8,R30
0006e4 87f9      	STD  Y+8+1,R31
0006e5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x13:
0006e6 932a      	ST   -Y,R18
0006e7 81af      	LDD  R26,Y+7
0006e8 85b8      	LDD  R27,Y+7+1
0006e9 85e9      	LDD  R30,Y+9
0006ea 85fa      	LDD  R31,Y+9+1
0006eb 9509      	ICALL
0006ec 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x14:
                +
0006ed 01fe     +MOVW R30 , R28
0006ee 5ae6     +SUBI R30 , LOW ( - 90 )
0006ef 4fff     +SBCI R31 , HIGH ( - 90 )
0006f0 9001     +LD R0 , Z +
0006f1 81f0     +LD R31 , Z
0006f2 2de0     +MOV R30 , R0
                 	__GETW1SX 90
0006f3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x15:
0006f4 9734      	SBIW R30,4
                +
0006f5 01de     +MOVW R26 , R28
0006f6 5aa6     +SUBI R26 , LOW ( - 90 )
0006f7 4fbf     +SBCI R27 , HIGH ( - 90 )
0006f8 93ed     +ST X + , R30
0006f9 93fc     +ST X , R31
                 	__PUTW1SX 90
0006fa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x16:
0006fb 81af      	LDD  R26,Y+7
0006fc 85b8      	LDD  R27,Y+7+1
0006fd 85e9      	LDD  R30,Y+9
0006fe 85fa      	LDD  R31,Y+9+1
0006ff 9509      	ICALL
000700 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x17:
                +
000701 01de     +MOVW R26 , R28
000702 5aa6     +SUBI R26 , LOW ( - 90 )
000703 4fbf     +SBCI R27 , HIGH ( - 90 )
000704 900d     +LD R0 , X +
000705 91bc     +LD R27 , X
000706 2da0     +MOV R26 , R0
                 	__GETW2SX 90
000707 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x18:
                +
000708 87ea     +STD Y + 10 , R30
000709 87fb     +STD Y + 10 + 1 , R31
00070a 876c     +STD Y + 10 + 2 , R22
00070b 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
00070c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x19:
00070d dfdf      	RCALL SUBOPT_0x14
00070e cfe5      	RJMP SUBOPT_0x15
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1A:
                +
00070f 85ea     +LDD R30 , Y + 10
000710 85fb     +LDD R31 , Y + 10 + 1
000711 856c     +LDD R22 , Y + 10 + 2
000712 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
000713 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1B:
000714 87ee      	STD  Y+14,R30
000715 87ff      	STD  Y+14+1,R31
000716 85ae      	LDD  R26,Y+14
000717 85bf      	LDD  R27,Y+14+1
000718 940e 055b 	CALL _strlen
00071a 2f1e      	MOV  R17,R30
00071b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x1C:
00071c dfe4      	RCALL SUBOPT_0x17
00071d 9614      	ADIW R26,4
00071e 940e 099c 	CALL __GETW1P
000720 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1D:
                +
000721 8be8     +STD Y + 16 , R30
000722 8bf9     +STD Y + 16 + 1 , R31
000723 8b6a     +STD Y + 16 + 2 , R22
000724 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
000725 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x1E:
000726 7f0b      	ANDI R16,LOW(251)
000727 89ed      	LDD  R30,Y+21
000728 93ea      	ST   -Y,R30
                +
000729 01de     +MOVW R26 , R28
00072a 5aa9     +SUBI R26 , LOW ( - 87 )
00072b 4fbf     +SBCI R27 , HIGH ( - 87 )
00072c 900d     +LD R0 , X +
00072d 91bc     +LD R27 , X
00072e 2da0     +MOV R26 , R0
                 	__GETW2SX 87
                +
00072f 01fe     +MOVW R30 , R28
000730 5ae7     +SUBI R30 , LOW ( - 89 )
000731 4fff     +SBCI R31 , HIGH ( - 89 )
000732 9001     +LD R0 , Z +
000733 81f0     +LD R31 , Z
000734 2de0     +MOV R30 , R0
                 	__GETW1SX 89
000735 9509      	ICALL
000736 3050      	CPI  R21,0
000737 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1F:
                +
000738 89e8     +LDD R30 , Y + 16
000739 89f9     +LDD R31 , Y + 16 + 1
00073a 896a     +LDD R22 , Y + 16 + 2
00073b 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
00073c 85aa     +LDD R26 , Y + 10
00073d 85bb     +LDD R27 , Y + 10 + 1
00073e 858c     +LDD R24 , Y + 10 + 2
00073f 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
000740 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x20:
000741 01de      	MOVW R26,R28
000742 961c      	ADIW R26,12
000743 940e 0931 	CALL __ADDW2R15
000745 940e 099c 	CALL __GETW1P
000747 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x21:
000748 940e 04d6 	CALL __lcd_write_data
00074a e0a3      	LDI  R26,LOW(3)
00074b e0b0      	LDI  R27,0
00074c 940c 077e 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x22:
00074e e3a0      	LDI  R26,LOW(48)
00074f 940e 04c2 	CALL __lcd_write_nibble_G101
                +
000751 e281     +LDI R24 , LOW ( 33 )
                +__DELAY_USB_LOOP :
000752 958a     +DEC R24
000753 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 33
000754 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x23:
000755 81ee      	LDD  R30,Y+6
000756 81ff      	LDD  R31,Y+6+1
000757 93fa      	ST   -Y,R31
000758 93ea      	ST   -Y,R30
000759 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x24:
                +
00075a 87e9     +STD Y + 9 , R30
00075b 87fa     +STD Y + 9 + 1 , R31
00075c 876b     +STD Y + 9 + 2 , R22
00075d 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
00075e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x25:
00075f 81ae      	LDD  R26,Y+6
000760 81bf      	LDD  R27,Y+6+1
000761 9611      	ADIW R26,1
000762 83ae      	STD  Y+6,R26
000763 83bf      	STD  Y+6+1,R27
000764 9711      	SBIW R26,1
000765 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x26:
                +
000766 81aa     +LDD R26 , Y + 2
000767 81bb     +LDD R27 , Y + 2 + 1
000768 818c     +LDD R24 , Y + 2 + 2
000769 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
00076a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x27:
                +
00076b 83ea     +STD Y + 2 , R30
00076c 83fb     +STD Y + 2 + 1 , R31
00076d 836c     +STD Y + 2 + 2 , R22
00076e 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
00076f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x28:
                +
000770 81ea     +LDD R30 , Y + 2
000771 81fb     +LDD R31 , Y + 2 + 1
000772 816c     +LDD R22 , Y + 2 + 2
000773 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
000774 85a9     +LDD R26 , Y + 9
000775 85ba     +LDD R27 , Y + 9 + 1
000776 858b     +LDD R24 , Y + 9 + 2
000777 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000778 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x29:
                +
000779 85a9     +LDD R26 , Y + 9
00077a 85ba     +LDD R27 , Y + 9 + 1
00077b 858b     +LDD R24 , Y + 9 + 2
00077c 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
00077d 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
00077e 9610      	adiw r26,0
00077f f039      	breq __delay_ms1
                 __delay_ms0:
                +
000780 ef8a     +LDI R24 , LOW ( 0xFA )
000781 e090     +LDI R25 , HIGH ( 0xFA )
                +__DELAY_USW_LOOP :
000782 9701     +SBIW R24 , 1
000783 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xFA
000784 95a8      	wdr
000785 9711      	sbiw r26,1
000786 f7c9      	brne __delay_ms0
                 __delay_ms1:
000787 9508      	ret
                 
                 __ANEGF1:
000788 9730      	SBIW R30,0
000789 4060      	SBCI R22,0
00078a 4070      	SBCI R23,0
00078b f009      	BREQ __ANEGF10
00078c 5870      	SUBI R23,0x80
                 __ANEGF10:
00078d 9508      	RET
                 
                 __ROUND_REPACK:
00078e 2355      	TST  R21
00078f f442      	BRPL __REPACK
000790 3850      	CPI  R21,0x80
000791 f411      	BRNE __ROUND_REPACK0
000792 ffe0      	SBRS R30,0
000793 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
000794 9631      	ADIW R30,1
000795 1f69      	ADC  R22,R25
000796 1f79      	ADC  R23,R25
000797 f06b      	BRVS __REPACK1
                 
                 __REPACK:
000798 e850      	LDI  R21,0x80
000799 2757      	EOR  R21,R23
00079a f411      	BRNE __REPACK0
00079b 935f      	PUSH R21
00079c c0cf      	RJMP __ZERORES
                 __REPACK0:
00079d 3f5f      	CPI  R21,0xFF
00079e f031      	BREQ __REPACK1
00079f 0f66      	LSL  R22
0007a0 0c00      	LSL  R0
0007a1 9557      	ROR  R21
0007a2 9567      	ROR  R22
0007a3 2f75      	MOV  R23,R21
0007a4 9508      	RET
                 __REPACK1:
0007a5 935f      	PUSH R21
0007a6 2000      	TST  R0
0007a7 f00a      	BRMI __REPACK2
0007a8 c0cf      	RJMP __MAXRES
                 __REPACK2:
0007a9 c0c8      	RJMP __MINRES
                 
                 __UNPACK:
0007aa e850      	LDI  R21,0x80
0007ab 2e19      	MOV  R1,R25
0007ac 2215      	AND  R1,R21
0007ad 0f88      	LSL  R24
0007ae 1f99      	ROL  R25
0007af 2795      	EOR  R25,R21
0007b0 0f55      	LSL  R21
0007b1 9587      	ROR  R24
                 
                 __UNPACK1:
0007b2 e850      	LDI  R21,0x80
0007b3 2e07      	MOV  R0,R23
0007b4 2205      	AND  R0,R21
0007b5 0f66      	LSL  R22
0007b6 1f77      	ROL  R23
0007b7 2775      	EOR  R23,R21
0007b8 0f55      	LSL  R21
0007b9 9567      	ROR  R22
0007ba 9508      	RET
                 
                 __CFD1U:
0007bb 9468      	SET
0007bc c001      	RJMP __CFD1U0
                 __CFD1:
0007bd 94e8      	CLT
                 __CFD1U0:
0007be 935f      	PUSH R21
0007bf dff2      	RCALL __UNPACK1
0007c0 3870      	CPI  R23,0x80
0007c1 f018      	BRLO __CFD10
0007c2 3f7f      	CPI  R23,0xFF
0007c3 f408      	BRCC __CFD10
0007c4 c0a7      	RJMP __ZERORES
                 __CFD10:
0007c5 e156      	LDI  R21,22
0007c6 1b57      	SUB  R21,R23
0007c7 f4aa      	BRPL __CFD11
0007c8 9551      	NEG  R21
0007c9 3058      	CPI  R21,8
0007ca f40e      	BRTC __CFD19
0007cb 3059      	CPI  R21,9
                 __CFD19:
0007cc f030      	BRLO __CFD17
0007cd efef      	SER  R30
0007ce efff      	SER  R31
0007cf ef6f      	SER  R22
0007d0 e77f      	LDI  R23,0x7F
0007d1 f977      	BLD  R23,7
0007d2 c01a      	RJMP __CFD15
                 __CFD17:
0007d3 2777      	CLR  R23
0007d4 2355      	TST  R21
0007d5 f0b9      	BREQ __CFD15
                 __CFD18:
0007d6 0fee      	LSL  R30
0007d7 1fff      	ROL  R31
0007d8 1f66      	ROL  R22
0007d9 1f77      	ROL  R23
0007da 955a      	DEC  R21
0007db f7d1      	BRNE __CFD18
0007dc c010      	RJMP __CFD15
                 __CFD11:
0007dd 2777      	CLR  R23
                 __CFD12:
0007de 3058      	CPI  R21,8
0007df f028      	BRLO __CFD13
0007e0 2fef      	MOV  R30,R31
0007e1 2ff6      	MOV  R31,R22
0007e2 2f67      	MOV  R22,R23
0007e3 5058      	SUBI R21,8
0007e4 cff9      	RJMP __CFD12
                 __CFD13:
0007e5 2355      	TST  R21
0007e6 f031      	BREQ __CFD15
                 __CFD14:
0007e7 9576      	LSR  R23
0007e8 9567      	ROR  R22
0007e9 95f7      	ROR  R31
0007ea 95e7      	ROR  R30
0007eb 955a      	DEC  R21
0007ec f7d1      	BRNE __CFD14
                 __CFD15:
0007ed 2000      	TST  R0
0007ee f40a      	BRPL __CFD16
0007ef d145      	RCALL __ANEGD1
                 __CFD16:
0007f0 915f      	POP  R21
0007f1 9508      	RET
                 
                 __CDF1U:
0007f2 9468      	SET
0007f3 c001      	RJMP __CDF1U0
                 __CDF1:
0007f4 94e8      	CLT
                 __CDF1U0:
0007f5 9730      	SBIW R30,0
0007f6 4060      	SBCI R22,0
0007f7 4070      	SBCI R23,0
0007f8 f0b1      	BREQ __CDF10
0007f9 2400      	CLR  R0
0007fa f026      	BRTS __CDF11
0007fb 2377      	TST  R23
0007fc f412      	BRPL __CDF11
0007fd 9400      	COM  R0
0007fe d136      	RCALL __ANEGD1
                 __CDF11:
0007ff 2e17      	MOV  R1,R23
000800 e17e      	LDI  R23,30
000801 2011      	TST  R1
                 __CDF12:
000802 f032      	BRMI __CDF13
000803 957a      	DEC  R23
000804 0fee      	LSL  R30
000805 1fff      	ROL  R31
000806 1f66      	ROL  R22
000807 1c11      	ROL  R1
000808 cff9      	RJMP __CDF12
                 __CDF13:
000809 2fef      	MOV  R30,R31
00080a 2ff6      	MOV  R31,R22
00080b 2d61      	MOV  R22,R1
00080c 935f      	PUSH R21
00080d df8a      	RCALL __REPACK
00080e 915f      	POP  R21
                 __CDF10:
00080f 9508      	RET
                 
                 __SWAPACC:
000810 934f      	PUSH R20
000811 01af      	MOVW R20,R30
000812 01fd      	MOVW R30,R26
000813 01da      	MOVW R26,R20
000814 01ab      	MOVW R20,R22
000815 01bc      	MOVW R22,R24
000816 01ca      	MOVW R24,R20
000817 2d40      	MOV  R20,R0
000818 2c01      	MOV  R0,R1
000819 2e14      	MOV  R1,R20
00081a 914f      	POP  R20
00081b 9508      	RET
                 
                 __UADD12:
00081c 0fea      	ADD  R30,R26
00081d 1ffb      	ADC  R31,R27
00081e 1f68      	ADC  R22,R24
00081f 9508      	RET
                 
                 __NEGMAN1:
000820 95e0      	COM  R30
000821 95f0      	COM  R31
000822 9560      	COM  R22
000823 5fef      	SUBI R30,-1
000824 4fff      	SBCI R31,-1
000825 4f6f      	SBCI R22,-1
000826 9508      	RET
                 
                 __SUBF12:
000827 935f      	PUSH R21
000828 df81      	RCALL __UNPACK
000829 3890      	CPI  R25,0x80
00082a f171      	BREQ __ADDF129
00082b e850      	LDI  R21,0x80
00082c 2615      	EOR  R1,R21
                 
00082d c004      	RJMP __ADDF120
                 
                 __ADDF12:
00082e 935f      	PUSH R21
00082f df7a      	RCALL __UNPACK
000830 3890      	CPI  R25,0x80
000831 f139      	BREQ __ADDF129
                 
                 __ADDF120:
000832 3870      	CPI  R23,0x80
000833 f121      	BREQ __ADDF128
                 __ADDF121:
000834 2f57      	MOV  R21,R23
000835 1b59      	SUB  R21,R25
000836 f12b      	BRVS __ADDF1211
000837 f412      	BRPL __ADDF122
000838 dfd7      	RCALL __SWAPACC
000839 cffa      	RJMP __ADDF121
                 __ADDF122:
00083a 3158      	CPI  R21,24
00083b f018      	BRLO __ADDF123
00083c 27aa      	CLR  R26
00083d 27bb      	CLR  R27
00083e 2788      	CLR  R24
                 __ADDF123:
00083f 3058      	CPI  R21,8
000840 f028      	BRLO __ADDF124
000841 2fab      	MOV  R26,R27
000842 2fb8      	MOV  R27,R24
000843 2788      	CLR  R24
000844 5058      	SUBI R21,8
000845 cff9      	RJMP __ADDF123
                 __ADDF124:
000846 2355      	TST  R21
000847 f029      	BREQ __ADDF126
                 __ADDF125:
000848 9586      	LSR  R24
000849 95b7      	ROR  R27
00084a 95a7      	ROR  R26
00084b 955a      	DEC  R21
00084c f7d9      	BRNE __ADDF125
                 __ADDF126:
00084d 2d50      	MOV  R21,R0
00084e 2551      	EOR  R21,R1
00084f f072      	BRMI __ADDF127
000850 dfcb      	RCALL __UADD12
000851 f438      	BRCC __ADDF129
000852 9567      	ROR  R22
000853 95f7      	ROR  R31
000854 95e7      	ROR  R30
000855 9573      	INC  R23
000856 f413      	BRVC __ADDF129
000857 c020      	RJMP __MAXRES
                 __ADDF128:
000858 dfb7      	RCALL __SWAPACC
                 __ADDF129:
000859 df3e      	RCALL __REPACK
00085a 915f      	POP  R21
00085b 9508      	RET
                 __ADDF1211:
00085c f7d8      	BRCC __ADDF128
00085d cffb      	RJMP __ADDF129
                 __ADDF127:
00085e 1bea      	SUB  R30,R26
00085f 0bfb      	SBC  R31,R27
000860 0b68      	SBC  R22,R24
000861 f051      	BREQ __ZERORES
000862 f410      	BRCC __ADDF1210
000863 9400      	COM  R0
000864 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
000865 2366      	TST  R22
000866 f392      	BRMI __ADDF129
000867 0fee      	LSL  R30
000868 1fff      	ROL  R31
000869 1f66      	ROL  R22
00086a 957a      	DEC  R23
00086b f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
00086c 27ee      	CLR  R30
00086d 27ff      	CLR  R31
00086e 2766      	CLR  R22
00086f 2777      	CLR  R23
000870 915f      	POP  R21
000871 9508      	RET
                 
                 __MINRES:
000872 efef      	SER  R30
000873 efff      	SER  R31
000874 e76f      	LDI  R22,0x7F
000875 ef7f      	SER  R23
000876 915f      	POP  R21
000877 9508      	RET
                 
                 __MAXRES:
000878 efef      	SER  R30
000879 efff      	SER  R31
00087a e76f      	LDI  R22,0x7F
00087b e77f      	LDI  R23,0x7F
00087c 915f      	POP  R21
00087d 9508      	RET
                 
                 __MULF12:
00087e 935f      	PUSH R21
00087f df2a      	RCALL __UNPACK
000880 3870      	CPI  R23,0x80
000881 f351      	BREQ __ZERORES
000882 3890      	CPI  R25,0x80
000883 f341      	BREQ __ZERORES
000884 2401      	EOR  R0,R1
000885 9408      	SEC
000886 1f79      	ADC  R23,R25
000887 f423      	BRVC __MULF124
000888 f31c      	BRLT __ZERORES
                 __MULF125:
000889 2000      	TST  R0
00088a f33a      	BRMI __MINRES
00088b cfec      	RJMP __MAXRES
                 __MULF124:
00088c 920f      	PUSH R0
00088d 931f      	PUSH R17
00088e 932f      	PUSH R18
00088f 933f      	PUSH R19
000890 934f      	PUSH R20
000891 2711      	CLR  R17
000892 2722      	CLR  R18
000893 2799      	CLR  R25
000894 9f68      	MUL  R22,R24
000895 01a0      	MOVW R20,R0
000896 9f8f      	MUL  R24,R31
000897 2d30      	MOV  R19,R0
000898 0d41      	ADD  R20,R1
000899 1f59      	ADC  R21,R25
00089a 9f6b      	MUL  R22,R27
00089b 0d30      	ADD  R19,R0
00089c 1d41      	ADC  R20,R1
00089d 1f59      	ADC  R21,R25
00089e 9f8e      	MUL  R24,R30
00089f d027      	RCALL __MULF126
0008a0 9fbf      	MUL  R27,R31
0008a1 d025      	RCALL __MULF126
0008a2 9f6a      	MUL  R22,R26
0008a3 d023      	RCALL __MULF126
0008a4 9fbe      	MUL  R27,R30
0008a5 d01d      	RCALL __MULF127
0008a6 9faf      	MUL  R26,R31
0008a7 d01b      	RCALL __MULF127
0008a8 9fae      	MUL  R26,R30
0008a9 0d11      	ADD  R17,R1
0008aa 1f29      	ADC  R18,R25
0008ab 1f39      	ADC  R19,R25
0008ac 1f49      	ADC  R20,R25
0008ad 1f59      	ADC  R21,R25
0008ae 2fe3      	MOV  R30,R19
0008af 2ff4      	MOV  R31,R20
0008b0 2f65      	MOV  R22,R21
0008b1 2f52      	MOV  R21,R18
0008b2 914f      	POP  R20
0008b3 913f      	POP  R19
0008b4 912f      	POP  R18
0008b5 911f      	POP  R17
0008b6 900f      	POP  R0
0008b7 2366      	TST  R22
0008b8 f02a      	BRMI __MULF122
0008b9 0f55      	LSL  R21
0008ba 1fee      	ROL  R30
0008bb 1fff      	ROL  R31
0008bc 1f66      	ROL  R22
0008bd c002      	RJMP __MULF123
                 __MULF122:
0008be 9573      	INC  R23
0008bf f24b      	BRVS __MULF125
                 __MULF123:
0008c0 decd      	RCALL __ROUND_REPACK
0008c1 915f      	POP  R21
0008c2 9508      	RET
                 
                 __MULF127:
0008c3 0d10      	ADD  R17,R0
0008c4 1d21      	ADC  R18,R1
0008c5 1f39      	ADC  R19,R25
0008c6 c002      	RJMP __MULF128
                 __MULF126:
0008c7 0d20      	ADD  R18,R0
0008c8 1d31      	ADC  R19,R1
                 __MULF128:
0008c9 1f49      	ADC  R20,R25
0008ca 1f59      	ADC  R21,R25
0008cb 9508      	RET
                 
                 __DIVF21:
0008cc 935f      	PUSH R21
0008cd dedc      	RCALL __UNPACK
0008ce 3870      	CPI  R23,0x80
0008cf f421      	BRNE __DIVF210
0008d0 2011      	TST  R1
                 __DIVF211:
0008d1 f40a      	BRPL __DIVF219
0008d2 cf9f      	RJMP __MINRES
                 __DIVF219:
0008d3 cfa4      	RJMP __MAXRES
                 __DIVF210:
0008d4 3890      	CPI  R25,0x80
0008d5 f409      	BRNE __DIVF218
                 __DIVF217:
0008d6 cf95      	RJMP __ZERORES
                 __DIVF218:
0008d7 2401      	EOR  R0,R1
0008d8 9408      	SEC
0008d9 0b97      	SBC  R25,R23
0008da f41b      	BRVC __DIVF216
0008db f3d4      	BRLT __DIVF217
0008dc 2000      	TST  R0
0008dd cff3      	RJMP __DIVF211
                 __DIVF216:
0008de 2f79      	MOV  R23,R25
0008df 931f      	PUSH R17
0008e0 932f      	PUSH R18
0008e1 933f      	PUSH R19
0008e2 934f      	PUSH R20
0008e3 2411      	CLR  R1
0008e4 2711      	CLR  R17
0008e5 2722      	CLR  R18
0008e6 2733      	CLR  R19
0008e7 2744      	CLR  R20
0008e8 2755      	CLR  R21
0008e9 e290      	LDI  R25,32
                 __DIVF212:
0008ea 17ae      	CP   R26,R30
0008eb 07bf      	CPC  R27,R31
0008ec 0786      	CPC  R24,R22
0008ed 0741      	CPC  R20,R17
0008ee f030      	BRLO __DIVF213
0008ef 1bae      	SUB  R26,R30
0008f0 0bbf      	SBC  R27,R31
0008f1 0b86      	SBC  R24,R22
0008f2 0b41      	SBC  R20,R17
0008f3 9408      	SEC
0008f4 c001      	RJMP __DIVF214
                 __DIVF213:
0008f5 9488      	CLC
                 __DIVF214:
0008f6 1f55      	ROL  R21
0008f7 1f22      	ROL  R18
0008f8 1f33      	ROL  R19
0008f9 1c11      	ROL  R1
0008fa 1faa      	ROL  R26
0008fb 1fbb      	ROL  R27
0008fc 1f88      	ROL  R24
0008fd 1f44      	ROL  R20
0008fe 959a      	DEC  R25
0008ff f751      	BRNE __DIVF212
000900 01f9      	MOVW R30,R18
000901 2d61      	MOV  R22,R1
000902 914f      	POP  R20
000903 913f      	POP  R19
000904 912f      	POP  R18
000905 911f      	POP  R17
000906 2366      	TST  R22
000907 f032      	BRMI __DIVF215
000908 0f55      	LSL  R21
000909 1fee      	ROL  R30
00090a 1fff      	ROL  R31
00090b 1f66      	ROL  R22
00090c 957a      	DEC  R23
00090d f243      	BRVS __DIVF217
                 __DIVF215:
00090e de7f      	RCALL __ROUND_REPACK
00090f 915f      	POP  R21
000910 9508      	RET
                 
                 __CMPF12:
000911 2399      	TST  R25
000912 f09a      	BRMI __CMPF120
000913 2377      	TST  R23
000914 f042      	BRMI __CMPF121
000915 1797      	CP   R25,R23
000916 f048      	BRLO __CMPF122
000917 f429      	BRNE __CMPF121
000918 17ae      	CP   R26,R30
000919 07bf      	CPC  R27,R31
00091a 0786      	CPC  R24,R22
00091b f020      	BRLO __CMPF122
00091c f031      	BREQ __CMPF123
                 __CMPF121:
00091d 9498      	CLZ
00091e 9488      	CLC
00091f 9508      	RET
                 __CMPF122:
000920 9498      	CLZ
000921 9408      	SEC
000922 9508      	RET
                 __CMPF123:
000923 9418      	SEZ
000924 9488      	CLC
000925 9508      	RET
                 __CMPF120:
000926 2377      	TST  R23
000927 f7c2      	BRPL __CMPF122
000928 1797      	CP   R25,R23
000929 f398      	BRLO __CMPF121
00092a f7a9      	BRNE __CMPF122
00092b 17ea      	CP   R30,R26
00092c 07fb      	CPC  R31,R27
00092d 0768      	CPC  R22,R24
00092e f388      	BRLO __CMPF122
00092f f399      	BREQ __CMPF123
000930 cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
000931 2400      	CLR  R0
000932 0daf      	ADD  R26,R15
000933 1db0      	ADC  R27,R0
000934 9508      	RET
                 
                 __ANEGD1:
000935 95f0      	COM  R31
000936 9560      	COM  R22
000937 9570      	COM  R23
000938 95e1      	NEG  R30
000939 4fff      	SBCI R31,-1
00093a 4f6f      	SBCI R22,-1
00093b 4f7f      	SBCI R23,-1
00093c 9508      	RET
                 
                 __CBD1:
00093d 2ffe      	MOV  R31,R30
00093e 0fff      	ADD  R31,R31
00093f 0bff      	SBC  R31,R31
000940 2f6f      	MOV  R22,R31
000941 2f7f      	MOV  R23,R31
000942 9508      	RET
                 
                 __CWD1:
000943 2f6f      	MOV  R22,R31
000944 0f66      	ADD  R22,R22
000945 0b66      	SBC  R22,R22
000946 2f76      	MOV  R23,R22
000947 9508      	RET
                 
                 __DIVB21U:
000948 2400      	CLR  R0
000949 e098      	LDI  R25,8
                 __DIVB21U1:
00094a 0faa      	LSL  R26
00094b 1c00      	ROL  R0
00094c 1a0e      	SUB  R0,R30
00094d f410      	BRCC __DIVB21U2
00094e 0e0e      	ADD  R0,R30
00094f c001      	RJMP __DIVB21U3
                 __DIVB21U2:
000950 60a1      	SBR  R26,1
                 __DIVB21U3:
000951 959a      	DEC  R25
000952 f7b9      	BRNE __DIVB21U1
000953 2fea      	MOV  R30,R26
000954 2da0      	MOV  R26,R0
000955 9508      	RET
                 
                 __DIVB21:
000956 d039      	RCALL __CHKSIGNB
000957 dff0      	RCALL __DIVB21U
000958 f40e      	BRTC __DIVB211
000959 95e1      	NEG  R30
                 __DIVB211:
00095a 9508      	RET
                 
                 __DIVD21U:
00095b 933f      	PUSH R19
00095c 934f      	PUSH R20
00095d 935f      	PUSH R21
00095e 2400      	CLR  R0
00095f 2411      	CLR  R1
000960 2744      	CLR  R20
000961 2755      	CLR  R21
000962 e230      	LDI  R19,32
                 __DIVD21U1:
000963 0faa      	LSL  R26
000964 1fbb      	ROL  R27
000965 1f88      	ROL  R24
000966 1f99      	ROL  R25
000967 1c00      	ROL  R0
000968 1c11      	ROL  R1
000969 1f44      	ROL  R20
00096a 1f55      	ROL  R21
00096b 1a0e      	SUB  R0,R30
00096c 0a1f      	SBC  R1,R31
00096d 0b46      	SBC  R20,R22
00096e 0b57      	SBC  R21,R23
00096f f428      	BRCC __DIVD21U2
000970 0e0e      	ADD  R0,R30
000971 1e1f      	ADC  R1,R31
000972 1f46      	ADC  R20,R22
000973 1f57      	ADC  R21,R23
000974 c001      	RJMP __DIVD21U3
                 __DIVD21U2:
000975 60a1      	SBR  R26,1
                 __DIVD21U3:
000976 953a      	DEC  R19
000977 f759      	BRNE __DIVD21U1
000978 01fd      	MOVW R30,R26
000979 01bc      	MOVW R22,R24
00097a 01d0      	MOVW R26,R0
00097b 01ca      	MOVW R24,R20
00097c 915f      	POP  R21
00097d 914f      	POP  R20
00097e 913f      	POP  R19
00097f 9508      	RET
                 
                 __MODB21:
000980 94e8      	CLT
000981 ffa7      	SBRS R26,7
000982 c002      	RJMP __MODB211
000983 95a1      	NEG  R26
000984 9468      	SET
                 __MODB211:
000985 fde7      	SBRC R30,7
000986 95e1      	NEG  R30
000987 dfc0      	RCALL __DIVB21U
000988 2fea      	MOV  R30,R26
000989 f40e      	BRTC __MODB212
00098a 95e1      	NEG  R30
                 __MODB212:
00098b 9508      	RET
                 
                 __MODD21U:
00098c dfce      	RCALL __DIVD21U
00098d 01fd      	MOVW R30,R26
00098e 01bc      	MOVW R22,R24
00098f 9508      	RET
                 
                 __CHKSIGNB:
000990 94e8      	CLT
000991 ffe7      	SBRS R30,7
000992 c002      	RJMP __CHKSB1
000993 95e1      	NEG  R30
000994 9468      	SET
                 __CHKSB1:
000995 ffa7      	SBRS R26,7
000996 c004      	RJMP __CHKSB2
000997 95a1      	NEG  R26
000998 f800      	BLD  R0,0
000999 9403      	INC  R0
00099a fa00      	BST  R0,0
                 __CHKSB2:
00099b 9508      	RET
                 
                 __GETW1P:
00099c 91ed      	LD   R30,X+
00099d 91fc      	LD   R31,X
00099e 9711      	SBIW R26,1
00099f 9508      	RET
                 
                 __GETD1P:
0009a0 91ed      	LD   R30,X+
0009a1 91fd      	LD   R31,X+
0009a2 916d      	LD   R22,X+
0009a3 917c      	LD   R23,X
0009a4 9713      	SBIW R26,3
0009a5 9508      	RET
                 
                 __PUTDP1:
0009a6 93ed      	ST   X+,R30
0009a7 93fd      	ST   X+,R31
0009a8 936d      	ST   X+,R22
0009a9 937c      	ST   X,R23
0009aa 9508      	RET
                 
                 __GETD1S0:
0009ab 81e8      	LD   R30,Y
0009ac 81f9      	LDD  R31,Y+1
0009ad 816a      	LDD  R22,Y+2
0009ae 817b      	LDD  R23,Y+3
0009af 9508      	RET
                 
                 __GETD2S0:
0009b0 81a8      	LD   R26,Y
0009b1 81b9      	LDD  R27,Y+1
0009b2 818a      	LDD  R24,Y+2
0009b3 819b      	LDD  R25,Y+3
0009b4 9508      	RET
                 
                 __PUTD1S0:
0009b5 83e8      	ST   Y,R30
0009b6 83f9      	STD  Y+1,R31
0009b7 836a      	STD  Y+2,R22
0009b8 837b      	STD  Y+3,R23
0009b9 9508      	RET
                 
                 __PUTPARD1:
0009ba 937a      	ST   -Y,R23
0009bb 936a      	ST   -Y,R22
0009bc 93fa      	ST   -Y,R31
0009bd 93ea      	ST   -Y,R30
0009be 9508      	RET
                 
                 __PUTPARD2:
0009bf 939a      	ST   -Y,R25
0009c0 938a      	ST   -Y,R24
0009c1 93ba      	ST   -Y,R27
0009c2 93aa      	ST   -Y,R26
0009c3 9508      	RET
                 
                 __SWAPD12:
0009c4 2e18      	MOV  R1,R24
0009c5 2f86      	MOV  R24,R22
0009c6 2d61      	MOV  R22,R1
0009c7 2e19      	MOV  R1,R25
0009c8 2f97      	MOV  R25,R23
0009c9 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
0009ca 2e1b      	MOV  R1,R27
0009cb 2fbf      	MOV  R27,R31
0009cc 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
0009cd 2e1a      	MOV  R1,R26
0009ce 2fae      	MOV  R26,R30
0009cf 2de1      	MOV  R30,R1
0009d0 9508      	RET
                 
                 __CPD10:
0009d1 9730      	SBIW R30,0
0009d2 4060      	SBCI R22,0
0009d3 4070      	SBCI R23,0
0009d4 9508      	RET
                 
                 __SAVELOCR6:
0009d5 935a      	ST   -Y,R21
                 __SAVELOCR5:
0009d6 934a      	ST   -Y,R20
                 __SAVELOCR4:
0009d7 933a      	ST   -Y,R19
                 __SAVELOCR3:
0009d8 932a      	ST   -Y,R18
                 __SAVELOCR2:
0009d9 931a      	ST   -Y,R17
0009da 930a      	ST   -Y,R16
0009db 9508      	RET
                 
                 __LOADLOCR6:
0009dc 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0009dd 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0009de 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0009df 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0009e0 8119      	LDD  R17,Y+1
0009e1 8108      	LD   R16,Y
0009e2 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :  60 r1 :  34 r2 :   0 r3 :   0 r4 :   4 r5 :   4 r6 :   0 r7 :   2 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  50 r17:  60 r18:  48 r19:  35 r20:  50 r21:  90 r22: 116 r23: 103 
r24:  78 r25:  63 r26: 218 r27: 101 r28:  31 r29:   1 r30: 423 r31: 161 
x  :  44 y  : 381 z  :  24 
Registers used: 25 out of 35 (71.4%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  21 add   :  14 
adiw  :  33 and   :   5 andi  :   7 asr   :   0 bclr  :   0 bld   :   3 
brbc  :   0 brbs  :   0 brcc  :   8 brcs  :   1 break :   0 breq  :  47 
brge  :   1 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  28 
brlt  :   2 brmi  :  11 brne  :  60 brpl  :   9 brsh  :   6 brtc  :   4 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   0 bst   :   3 call  : 185 
cbi   :   6 cbr   :   1 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  49 cls   :   0 clt   :   5 clv   :   0 clz   :   2 com   :   8 
cp    :  14 cpc   :  18 cpi   :  81 cpse  :   0 dec   :  18 des   :   0 
eor   :   7 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   3 ijmp  :   0 
in    :   4 inc   :   5 jmp   :  24 ld    :  51 ldd   : 191 ldi   : 238 
lds   :  24 lpm   :  12 lsl   :  14 lsr   :   3 mov   :  82 movw  :  46 
mul   :  11 muls  :   0 mulsu :   0 neg   :   9 nop   :   0 or    :   1 
ori   :  10 out   :  44 pop   :  22 push  :  22 rcall :  81 ret   :  95 
reti  :   0 rjmp  : 136 rol   :  32 ror   :  15 sbc   :  11 sbci  :  20 
sbi   :   8 sbic  :   0 sbis  :   1 sbiw  :  27 sbr   :   4 sbrc  :   4 
sbrs  :  20 sec   :   5 seh   :   0 sei   :   0 sen   :   0 ser   :   8 
ses   :   0 set   :   4 sev   :   0 sez   :   1 sleep :   0 spm   :   0 
st    : 110 std   :  86 sts   :  14 sub   :   6 subi  :  48 swap  :   1 
tst   :  24 wdr   :   1 
Instructions used: 80 out of 116 (69.0%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0013c6   4988     74   5062   32768  15.4%
[.dseg] 0x000060 0x00029c      0     60     60    2048   2.9%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 7 warnings
