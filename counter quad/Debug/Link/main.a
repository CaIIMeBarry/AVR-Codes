;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;
;void main(void)
; 0000 0005 {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 0006     unsigned char i = 0;  // memory for up&down counter
; 0000 0007     unsigned char johnson_state = 0; // initial state for john
; 0000 0008     unsigned char johnson_step = 0; // first or second half of johnson??
; 0000 0009     unsigned char ring_state = 0x01;// initial state for ring
; 0000 000A     char counter_mode = 0;
; 0000 000B     // 0=idle   1=upward   2=downward  3=john  4=ring
; 0000 000C     DDRA = 0xFF;
;	i -> R17
;	johnson_state -> R16
;	johnson_step -> R19
;	ring_state -> R18
;	counter_mode -> R21
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 000D     DDRD = 0x00;
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 000E 
; 0000 000F     PORTA = i;
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 0010 
; 0000 0011     while (1)
;PCODE: $0000001E VOL: 0
; 0000 0012     {
; 0000 0013         if (counter_mode == 0) // idle
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0014         {
; 0000 0015             if (PIND.1 == 0)
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 0016             {   // upwarddddd
; 0000 0017                 counter_mode = 1;
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0018                 while(PIND.1 == 0);
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 0019             }
; 0000 001A             else if (PIND.2 == 0)
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 001B             {   // downwardddd
; 0000 001C                 i = 255;
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 001D                 counter_mode = 2;
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 001E                 while(PIND.2 == 0);
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 001F             }
; 0000 0020             else if (PIND.4 == 0)
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 0021             {   // johnnnnn
; 0000 0022                 johnson_state = 0;
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 0023                 johnson_step = 0;
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 0024                 counter_mode = 3;
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 0025                 while(PIND.4 == 0);
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 0026             }
; 0000 0027             else if (PIND.3 == 0)
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0000 0028             {   // ringggg
; 0000 0029                 ring_state = 0x01;
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 002A                 counter_mode = 4;
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 002B                 while(PIND.3 == 0);
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0000 002C             }
; 0000 002D         }
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
; 0000 002E         else if (counter_mode == 1)  //upward
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 002F         {
; 0000 0030             if (PIND.2 == 0)
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0000 0031             {
; 0000 0032                 counter_mode = 2; //downward
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0000 0033                 while(PIND.2 == 0);
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
; 0000 0034                 continue;
;PCODE: $0000006F VOL: 0
; 0000 0035             }
; 0000 0036             else if (PIND.4 == 0) //john
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0000 0037             {
; 0000 0038                 johnson_state = 0;
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
; 0000 0039                 johnson_step = 0;
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0000 003A                 counter_mode = 3;
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0000 003B                 while(PIND.4 == 0);
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
; 0000 003C                 continue;
;PCODE: $00000081 VOL: 0
; 0000 003D             }
; 0000 003E             else if (PIND.3 == 0)  //ring
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
; 0000 003F             {
; 0000 0040                 ring_state = 0x01;
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
; 0000 0041                 counter_mode = 4;
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
; 0000 0042                 while(PIND.3 == 0);
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
; 0000 0043                 continue;
;PCODE: $00000091 VOL: 0
; 0000 0044             }
; 0000 0045 
; 0000 0046             PORTA = i;
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
; 0000 0047             i++;
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
; 0000 0048             delay_ms(200);
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
; 0000 0049         }
; 0000 004A         else if (counter_mode == 2)//downward
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
; 0000 004B         {
; 0000 004C             if (PIND.1 == 0) //upward
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
; 0000 004D             {
; 0000 004E                 counter_mode = 1;
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
; 0000 004F                 while(PIND.1 == 0);
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
; 0000 0050                 continue;
;PCODE: $000000AC VOL: 0
; 0000 0051             }
; 0000 0052             else if (PIND.4 == 0)  //john
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
; 0000 0053             {
; 0000 0054                 johnson_state = 0;
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
; 0000 0055                 johnson_step = 0;
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
; 0000 0056                 counter_mode = 3;
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
; 0000 0057                 while(PIND.4 == 0);
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
; 0000 0058                 continue;
;PCODE: $000000BE VOL: 0
; 0000 0059             }
; 0000 005A             else if (PIND.3 == 0)  // ring
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
; 0000 005B             {
; 0000 005C                 ring_state = 0x01;
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
; 0000 005D                 counter_mode = 4;
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
; 0000 005E                 while(PIND.3 == 0);
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
; 0000 005F                 continue;
;PCODE: $000000CE VOL: 0
; 0000 0060             }
; 0000 0061 
; 0000 0062             PORTA = i;
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
; 0000 0063             i--;
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
; 0000 0064             delay_ms(200);
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
; 0000 0065         }
; 0000 0066         else if (counter_mode == 3)//john
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
; 0000 0067         {
; 0000 0068             if (PIND.1 == 0)
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
; 0000 0069             {
; 0000 006A                 counter_mode = 1;
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
; 0000 006B                 while(PIND.1 == 0);
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
; 0000 006C                 continue;
;PCODE: $000000E9 VOL: 0
; 0000 006D             }
; 0000 006E             else if (PIND.2 == 0)
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
; 0000 006F             {
; 0000 0070                 counter_mode = 2;
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
; 0000 0071                 while(PIND.2 == 0);
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
; 0000 0072                 continue;
;PCODE: $000000F7 VOL: 0
; 0000 0073             }
; 0000 0074             else if (PIND.3 == 0)
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
; 0000 0075             {
; 0000 0076                 ring_state = 0x01;
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
; 0000 0077                 counter_mode = 4;
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
; 0000 0078                 while(PIND.3 == 0);
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
; 0000 0079                 continue;
;PCODE: $00000107 VOL: 0
; 0000 007A             }
; 0000 007B 
; 0000 007C             if (johnson_step < 8) {
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
; 0000 007D                 johnson_state = (johnson_state << 1) | 0x01;
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
; 0000 007E             } else {
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
; 0000 007F                 johnson_state = (johnson_state << 1);
;PCODE: $00000114 VOL: 0
; 0000 0080             }
;PCODE: $00000115 VOL: 0
; 0000 0081 
; 0000 0082             PORTA = johnson_state;
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
; 0000 0083             delay_ms(200);
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
; 0000 0084 
; 0000 0085             johnson_step++;
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
; 0000 0086             if (johnson_step == 16)
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
; 0000 0087             {
; 0000 0088                 johnson_step = 0;
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
; 0000 0089             }
; 0000 008A         }
;PCODE: $00000122 VOL: 0
; 0000 008B         else if (counter_mode == 4) //ring
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
; 0000 008C         {
; 0000 008D             if (PIND.1 == 0)
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
; 0000 008E             {
; 0000 008F                 counter_mode = 1;
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
; 0000 0090                 while(PIND.1 == 0);
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
; 0000 0091                 continue;
;PCODE: $00000133 VOL: 0
; 0000 0092             }
; 0000 0093             else if (PIND.2 == 0)
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
; 0000 0094             {
; 0000 0095                 counter_mode = 2;
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
; 0000 0096                 while(PIND.2 == 0);
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
; 0000 0097                 continue;
;PCODE: $00000141 VOL: 0
; 0000 0098             }
; 0000 0099             else if (PIND.4 == 0)
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
; 0000 009A             {
; 0000 009B                 johnson_state = 0;
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
; 0000 009C                 johnson_step = 0;
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
; 0000 009D                 counter_mode = 3;
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
; 0000 009E                 while(PIND.4 == 0);
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
; 0000 009F                 continue;
;PCODE: $00000153 VOL: 0
; 0000 00A0             }
; 0000 00A1 
; 0000 00A2             PORTA = ring_state; //ring_state = 0x01
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
; 0000 00A3             delay_ms(200);
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
; 0000 00A4 
; 0000 00A5             ring_state <<= 1; //shift
;PCODE: $0000015C VOL: 0
; 0000 00A6 
; 0000 00A7             if (ring_state == 0)
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
; 0000 00A8             {
; 0000 00A9                 ring_state = 0x01; // all over again
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
; 0000 00AA             }
; 0000 00AB         }
;PCODE: $00000161 VOL: 0
; 0000 00AC     }
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
; 0000 00AD }
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
