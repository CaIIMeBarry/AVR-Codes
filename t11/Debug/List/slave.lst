
AVRASM ver. 2.1.30  C:\Users\Bardia\Desktop\31mordad\t1\Debug\List\slave.asm Wed Aug 20 11:04:14 2025

C:\Users\Bardia\Desktop\31mordad\t1\Debug\List\slave.asm(1088): warning: Register r5 already defined by the .DEF directive
C:\Users\Bardia\Desktop\31mordad\t1\Debug\List\slave.asm(1089): warning: Register r4 already defined by the .DEF directive
C:\Users\Bardia\Desktop\31mordad\t1\Debug\List\slave.asm(1090): warning: Register r7 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32
                 ;Program type           : Application
                 ;Clock frequency        : 1.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF __lcd_x=R5
                 	.DEF __lcd_y=R4
                 	.DEF __lcd_maxx=R7
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0046 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G100:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G100:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
000033 6157
000034 7469
000035 6e69
000036 2e67      	.DB  0x57,0x61,0x69,0x74,0x69,0x6E,0x67,0x2E
000037 2e2e
000038 4300
000039 756f
00003a 746e      	.DB  0x2E,0x2E,0x0,0x43,0x6F,0x75,0x6E,0x74
00003b 203a
00003c 6425
C:\Users\Bardia\Desktop\31mordad\t1\Debug\List\slave.asm(1130): warning: .cseg .db misalignment - padding zero byte
00003d 0000      	.DB  0x3A,0x20,0x25,0x64,0x0
                 _0x2020003:
00003e c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
00003f 000b      	.DW  0x0B
000040 0260      	.DW  _0x3
000041 0066      	.DW  _0x0*2
                 
000042 0002      	.DW  0x02
000043 026b      	.DW  __base_y_G101
000044 007c      	.DW  _0x2020003*2
                 
                 _0xFFFFFFFF:
000045 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000046 94f8      	CLI
000047 27ee      	CLR  R30
000048 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000049 e0f1      	LDI  R31,1
00004a bffb      	OUT  GICR,R31
00004b bfeb      	OUT  GICR,R30
00004c bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
00004d e08d      	LDI  R24,(14-2)+1
00004e e0a2      	LDI  R26,2
00004f 27bb      	CLR  R27
                 __CLEAR_REG:
000050 93ed      	ST   X+,R30
000051 958a      	DEC  R24
000052 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000053 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000054 e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000055 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000056 93ed      	ST   X+,R30
000057 9701      	SBIW R24,1
000058 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000059 e7ee      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00005a e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00005b 9185      	LPM  R24,Z+
00005c 9195      	LPM  R25,Z+
00005d 9700      	SBIW R24,0
00005e f061      	BREQ __GLOBAL_INI_END
00005f 91a5      	LPM  R26,Z+
000060 91b5      	LPM  R27,Z+
000061 9005      	LPM  R0,Z+
000062 9015      	LPM  R1,Z+
000063 01bf      	MOVW R22,R30
000064 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000065 9005      	LPM  R0,Z+
000066 920d      	ST   X+,R0
000067 9701      	SBIW R24,1
000068 f7e1      	BRNE __GLOBAL_INI_LOOP
000069 01fb      	MOVW R30,R22
00006a cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00006b e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00006c bfed      	OUT  SPL,R30
00006d e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00006e bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00006f e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000070 e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000071 940c 0073 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;#include <mega32.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include <stdio.h>
                 ;#include <alcd.h>
                 ;
                 ;void main(void)
                 ; 0000 0007 {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 0008 
                 ; 0000 0009     unsigned char received_value;
                 ; 0000 000A     char lcd_buffer[16];
                 ; 0000 000B     int i;
                 ; 0000 000C     DDRB = (1<<DDB7);
000073 9760      	SBIW R28,16
                 ;	received_value -> R17
                 ;	lcd_buffer -> Y+0
                 ;	i -> R18,R19
000074 e8e0      	LDI  R30,LOW(128)
000075 bbe7      	OUT  0x17,R30
                 ; 0000 000D     PORTB = 0x00;
000076 e0e0      	LDI  R30,LOW(0)
000077 bbe8      	OUT  0x18,R30
                 ; 0000 000E     DDRC = 0x00;
000078 bbe4      	OUT  0x14,R30
                 ; 0000 000F     DDRD = 0x00;
000079 bbe1      	OUT  0x11,R30
                 ; 0000 0010 
                 ; 0000 0011     // --- USART Initialization (Receiver) ---
                 ; 0000 0012     // Baud Rate: 1200 bps (assuming 1MHz internal clock)
                 ; 0000 0013     // 8 data bits, 1 stop bit, no parity.
                 ; 0000 0014     UCSRA = 0x00;
00007a b9eb      	OUT  0xB,R30
                 ; 0000 0015     // Enable Receiver
                 ; 0000 0016     UCSRB = (1<<RXEN);
00007b e1e0      	LDI  R30,LOW(16)
00007c b9ea      	OUT  0xA,R30
                 ; 0000 0017     // Set frame format: 8data, 1stop bit
                 ; 0000 0018     UCSRC = (1<<URSEL) | (1<<UCSZ1) | (1<<UCSZ0);
00007d e8e6      	LDI  R30,LOW(134)
00007e bde0      	OUT  0x20,R30
                 ; 0000 0019     // Set baud rate
                 ; 0000 001A     UBRRH = 0x00;
00007f e0e0      	LDI  R30,LOW(0)
000080 bde0      	OUT  0x20,R30
                 ; 0000 001B     UBRRL = 0x33; // For 1200 baud @ 1MHz clock
000081 e3e3      	LDI  R30,LOW(51)
000082 b9e9      	OUT  0x9,R30
                 ; 0000 001C 
                 ; 0000 001D     lcd_init(16);
000083 e1a0      	LDI  R26,LOW(16)
000084 940e 02c3 	CALL _lcd_init
                 ; 0000 001E     lcd_clear();
000086 940e 0291 	CALL _lcd_clear
                 ; 0000 001F     lcd_puts("Waiting...");
                +
000088 e6a0     +LDI R26 , LOW ( _0x3 + ( 0 ) )
000089 e0b2     +LDI R27 , HIGH ( _0x3 + ( 0 ) )
                 	__POINTW2MN _0x3,0
00008a 940e 02b2 	CALL _lcd_puts
                 ; 0000 0020     while (1)
                 _0x4:
                 ; 0000 0021     {
                 ; 0000 0022         //Wait for data
                 ; 0000 0023         while (!(UCSRA & (1<<RXC)));
                 _0x7:
00008c 9b5f      	SBIS 0xB,7
00008d cffe      	RJMP _0x7
                 ; 0000 0024 
                 ; 0000 0025         //Get received data from buffer
                 ; 0000 0026         received_value = UDR;
00008e b11c      	IN   R17,12
                 ; 0000 0027         sprintf(lcd_buffer, "Count: %d", received_value);
00008f 01fe      	MOVW R30,R28
000090 93fa      	ST   -Y,R31
000091 93ea      	ST   -Y,R30
                +
000092 e7e1     +LDI R30 , LOW ( 2 * _0x0 + ( 11 ) )
000093 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 11 ) )
                 	__POINTW1FN _0x0,11
000094 93fa      	ST   -Y,R31
000095 93ea      	ST   -Y,R30
000096 2fe1      	MOV  R30,R17
000097 27ff      	CLR  R31
000098 2766      	CLR  R22
000099 2777      	CLR  R23
00009a 940e 035c 	CALL __PUTPARD1
00009c e084      	LDI  R24,4
00009d 940e 0230 	CALL _sprintf
00009f 9628      	ADIW R28,8
                 ; 0000 0028         lcd_clear();
0000a0 940e 0291 	CALL _lcd_clear
                 ; 0000 0029         lcd_puts(lcd_buffer);
0000a2 01de      	MOVW R26,R28
0000a3 940e 02b2 	CALL _lcd_puts
                 ; 0000 002A         for (i = 0; i < received_value; i++)
                +
0000a5 e020     +LDI R18 , LOW ( 0 )
0000a6 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0xB:
0000a7 2fe1      	MOV  R30,R17
0000a8 01d9      	MOVW R26,R18
0000a9 e0f0      	LDI  R31,0
0000aa 17ae      	CP   R26,R30
0000ab 07bf      	CPC  R27,R31
0000ac f46c      	BRGE _0xC
                 ; 0000 002B         {
                 ; 0000 002C             PORTB.7 = 1;
0000ad 9ac7      	SBI  0x18,7
                 ; 0000 002D             delay_ms(100);
0000ae e6a4      	LDI  R26,LOW(100)
0000af e0b0      	LDI  R27,0
0000b0 940e 0342 	CALL _delay_ms
                 ; 0000 002E             PORTB.7 = 0;
0000b2 98c7      	CBI  0x18,7
                 ; 0000 002F             delay_ms(150);
0000b3 e9a6      	LDI  R26,LOW(150)
0000b4 e0b0      	LDI  R27,0
0000b5 940e 0342 	CALL _delay_ms
                 ; 0000 0030         }
                +
0000b7 5f2f     +SUBI R18 , LOW ( - 1 )
0000b8 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0000b9 cfed      	RJMP _0xB
                 _0xC:
                 ; 0000 0031     }
0000ba cfd1      	RJMP _0x4
                 ; 0000 0032 }
                 _0x11:
0000bb cfff      	RJMP _0x11
                 ; .FEND
                 
                 	.DSEG
                 _0x3:
000260           	.BYTE 0xB
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
                 ; .FSTART _put_buff_G100
0000bc 93ba      	ST   -Y,R27
0000bd 93aa      	ST   -Y,R26
0000be 931a      	ST   -Y,R17
0000bf 930a      	ST   -Y,R16
0000c0 81aa      	LDD  R26,Y+2
0000c1 81bb      	LDD  R27,Y+2+1
0000c2 9612      	ADIW R26,2
0000c3 940e 0354 	CALL __GETW1P
0000c5 9730      	SBIW R30,0
0000c6 f159      	BREQ _0x2000010
0000c7 81aa      	LDD  R26,Y+2
0000c8 81bb      	LDD  R27,Y+2+1
0000c9 9614      	ADIW R26,4
0000ca 940e 0354 	CALL __GETW1P
0000cc 018f      	MOVW R16,R30
0000cd 9730      	SBIW R30,0
0000ce f061      	BREQ _0x2000012
                +
0000cf 3002     +CPI R16 , LOW ( 2 )
0000d0 e0e0     +LDI R30 , HIGH ( 2 )
0000d1 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
0000d2 f098      	BRLO _0x2000013
0000d3 01f8      	MOVW R30,R16
0000d4 9731      	SBIW R30,1
0000d5 018f      	MOVW R16,R30
                +
0000d6 81aa     +LDD R26 , Y + 2
0000d7 81bb     +LDD R27 , Y + 2 + 1
0000d8 9614     +ADIW R26 , 4
0000d9 93ed     +ST X + , R30
0000da 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2000012:
0000db 81aa      	LDD  R26,Y+2
0000dc 81bb      	LDD  R27,Y+2+1
0000dd 9612      	ADIW R26,2
0000de 91ed      	LD   R30,X+
0000df 91fd      	LD   R31,X+
0000e0 9631      	ADIW R30,1
0000e1 93fe      	ST   -X,R31
0000e2 93ee      	ST   -X,R30
0000e3 9731      	SBIW R30,1
0000e4 81ac      	LDD  R26,Y+4
0000e5 83a0      	STD  Z+0,R26
                 _0x2000013:
0000e6 81aa      	LDD  R26,Y+2
0000e7 81bb      	LDD  R27,Y+2+1
0000e8 940e 0354 	CALL __GETW1P
0000ea 23ff      	TST  R31
0000eb f02a      	BRMI _0x2000014
0000ec 91ed      	LD   R30,X+
0000ed 91fd      	LD   R31,X+
0000ee 9631      	ADIW R30,1
0000ef 93fe      	ST   -X,R31
0000f0 93ee      	ST   -X,R30
                 _0x2000014:
0000f1 c006      	RJMP _0x2000015
                 _0x2000010:
0000f2 81aa      	LDD  R26,Y+2
0000f3 81bb      	LDD  R27,Y+2+1
0000f4 efef      	LDI  R30,LOW(65535)
0000f5 efff      	LDI  R31,HIGH(65535)
0000f6 93ed      	ST   X+,R30
0000f7 93fc      	ST   X,R31
                 _0x2000015:
0000f8 8119      	LDD  R17,Y+1
0000f9 8108      	LDD  R16,Y+0
0000fa 9625      	ADIW R28,5
0000fb 9508      	RET
                 ; .FEND
                 __print_G100:
                 ; .FSTART __print_G100
0000fc 93ba      	ST   -Y,R27
0000fd 93aa      	ST   -Y,R26
0000fe 9726      	SBIW R28,6
0000ff 940e 0361 	CALL __SAVELOCR6
000101 e010      	LDI  R17,0
000102 85ac      	LDD  R26,Y+12
000103 85bd      	LDD  R27,Y+12+1
000104 e0e0      	LDI  R30,LOW(0)
000105 e0f0      	LDI  R31,HIGH(0)
000106 93ed      	ST   X+,R30
000107 93fc      	ST   X,R31
                 _0x2000016:
000108 89ea      	LDD  R30,Y+18
000109 89fb      	LDD  R31,Y+18+1
00010a 9631      	ADIW R30,1
00010b 8bea      	STD  Y+18,R30
00010c 8bfb      	STD  Y+18+1,R31
00010d 9731      	SBIW R30,1
00010e 91e4      	LPM  R30,Z
00010f 2f2e      	MOV  R18,R30
000110 30e0      	CPI  R30,0
000111 f409      	BRNE PC+2
000112 c115      	RJMP _0x2000018
000113 2fe1      	MOV  R30,R17
000114 30e0      	CPI  R30,0
000115 f439      	BRNE _0x200001C
000116 3225      	CPI  R18,37
000117 f411      	BRNE _0x200001D
000118 e011      	LDI  R17,LOW(1)
000119 c002      	RJMP _0x200001E
                 _0x200001D:
00011a 940e 0309 	CALL SUBOPT_0x0
                 _0x200001E:
00011c c10a      	RJMP _0x200001B
                 _0x200001C:
00011d 30e1      	CPI  R30,LOW(0x1)
00011e f4a9      	BRNE _0x200001F
00011f 3225      	CPI  R18,37
000120 f419      	BRNE _0x2000020
000121 940e 0309 	CALL SUBOPT_0x0
000123 c102      	RJMP _0x20000CC
                 _0x2000020:
000124 e012      	LDI  R17,LOW(2)
000125 e040      	LDI  R20,LOW(0)
000126 e000      	LDI  R16,LOW(0)
000127 322d      	CPI  R18,45
000128 f411      	BRNE _0x2000021
000129 e001      	LDI  R16,LOW(1)
00012a c0fc      	RJMP _0x200001B
                 _0x2000021:
00012b 322b      	CPI  R18,43
00012c f411      	BRNE _0x2000022
00012d e24b      	LDI  R20,LOW(43)
00012e c0f8      	RJMP _0x200001B
                 _0x2000022:
00012f 3220      	CPI  R18,32
000130 f411      	BRNE _0x2000023
000131 e240      	LDI  R20,LOW(32)
000132 c0f4      	RJMP _0x200001B
                 _0x2000023:
000133 c002      	RJMP _0x2000024
                 _0x200001F:
000134 30e2      	CPI  R30,LOW(0x2)
000135 f439      	BRNE _0x2000025
                 _0x2000024:
000136 e050      	LDI  R21,LOW(0)
000137 e013      	LDI  R17,LOW(3)
000138 3320      	CPI  R18,48
000139 f411      	BRNE _0x2000026
00013a 6800      	ORI  R16,LOW(128)
00013b c0eb      	RJMP _0x200001B
                 _0x2000026:
00013c c003      	RJMP _0x2000027
                 _0x2000025:
00013d 30e3      	CPI  R30,LOW(0x3)
00013e f009      	BREQ PC+2
00013f c0e7      	RJMP _0x200001B
                 _0x2000027:
000140 3320      	CPI  R18,48
000141 f010      	BRLO _0x200002A
000142 332a      	CPI  R18,58
000143 f008      	BRLO _0x200002B
                 _0x200002A:
000144 c007      	RJMP _0x2000029
                 _0x200002B:
000145 e0aa      	LDI  R26,LOW(10)
000146 9f5a      	MUL  R21,R26
000147 2d50      	MOV  R21,R0
000148 2fe2      	MOV  R30,R18
000149 53e0      	SUBI R30,LOW(48)
00014a 0f5e      	ADD  R21,R30
00014b c0db      	RJMP _0x200001B
                 _0x2000029:
00014c 2fe2      	MOV  R30,R18
00014d 36e3      	CPI  R30,LOW(0x63)
00014e f449      	BRNE _0x200002F
00014f 940e 0310 	CALL SUBOPT_0x1
000151 89e8      	LDD  R30,Y+16
000152 89f9      	LDD  R31,Y+16+1
000153 81a4      	LDD  R26,Z+4
000154 93aa      	ST   -Y,R26
000155 940e 0316 	CALL SUBOPT_0x2
000157 c0ce      	RJMP _0x2000030
                 _0x200002F:
000158 37e3      	CPI  R30,LOW(0x73)
000159 f441      	BRNE _0x2000032
00015a 940e 0310 	CALL SUBOPT_0x1
00015c 940e 031c 	CALL SUBOPT_0x3
00015e 940e 02f0 	CALL _strlen
000160 2f1e      	MOV  R17,R30
000161 c00a      	RJMP _0x2000033
                 _0x2000032:
000162 37e0      	CPI  R30,LOW(0x70)
000163 f461      	BRNE _0x2000035
000164 940e 0310 	CALL SUBOPT_0x1
000166 940e 031c 	CALL SUBOPT_0x3
000168 940e 02fc 	CALL _strlenf
00016a 2f1e      	MOV  R17,R30
00016b 6008      	ORI  R16,LOW(8)
                 _0x2000033:
00016c 6002      	ORI  R16,LOW(2)
00016d 770f      	ANDI R16,LOW(127)
00016e e030      	LDI  R19,LOW(0)
00016f c034      	RJMP _0x2000036
                 _0x2000035:
000170 36e4      	CPI  R30,LOW(0x64)
000171 f011      	BREQ _0x2000039
000172 36e9      	CPI  R30,LOW(0x69)
000173 f411      	BRNE _0x200003A
                 _0x2000039:
000174 6004      	ORI  R16,LOW(4)
000175 c002      	RJMP _0x200003B
                 _0x200003A:
000176 37e5      	CPI  R30,LOW(0x75)
000177 f431      	BRNE _0x200003C
                 _0x200003B:
000178 e5e4      	LDI  R30,LOW(_tbl10_G100*2)
000179 e0f0      	LDI  R31,HIGH(_tbl10_G100*2)
00017a 83ee      	STD  Y+6,R30
00017b 83ff      	STD  Y+6+1,R31
00017c e015      	LDI  R17,LOW(5)
00017d c00c      	RJMP _0x200003D
                 _0x200003C:
00017e 35e8      	CPI  R30,LOW(0x58)
00017f f411      	BRNE _0x200003F
000180 6008      	ORI  R16,LOW(8)
000181 c003      	RJMP _0x2000040
                 _0x200003F:
000182 37e8      	CPI  R30,LOW(0x78)
000183 f009      	BREQ PC+2
000184 c0a1      	RJMP _0x2000071
                 _0x2000040:
000185 e5ee      	LDI  R30,LOW(_tbl16_G100*2)
000186 e0f0      	LDI  R31,HIGH(_tbl16_G100*2)
000187 83ee      	STD  Y+6,R30
000188 83ff      	STD  Y+6+1,R31
000189 e014      	LDI  R17,LOW(4)
                 _0x200003D:
00018a ff02      	SBRS R16,2
00018b c014      	RJMP _0x2000042
00018c 940e 0310 	CALL SUBOPT_0x1
00018e 940e 0326 	CALL SUBOPT_0x4
000190 85ab      	LDD  R26,Y+11
000191 23aa      	TST  R26
000192 f43a      	BRPL _0x2000043
000193 85ea      	LDD  R30,Y+10
000194 85fb      	LDD  R31,Y+10+1
000195 940e 0350 	CALL __ANEGW1
000197 87ea      	STD  Y+10,R30
000198 87fb      	STD  Y+10+1,R31
000199 e24d      	LDI  R20,LOW(45)
                 _0x2000043:
00019a 3040      	CPI  R20,0
00019b f011      	BREQ _0x2000044
00019c 5f1f      	SUBI R17,-LOW(1)
00019d c001      	RJMP _0x2000045
                 _0x2000044:
00019e 7f0b      	ANDI R16,LOW(251)
                 _0x2000045:
00019f c004      	RJMP _0x2000046
                 _0x2000042:
0001a0 940e 0310 	CALL SUBOPT_0x1
0001a2 940e 0326 	CALL SUBOPT_0x4
                 _0x2000046:
                 _0x2000036:
0001a4 fd00      	SBRC R16,0
0001a5 c011      	RJMP _0x2000047
                 _0x2000048:
0001a6 1715      	CP   R17,R21
0001a7 f478      	BRSH _0x200004A
0001a8 ff07      	SBRS R16,7
0001a9 c008      	RJMP _0x200004B
0001aa ff02      	SBRS R16,2
0001ab c004      	RJMP _0x200004C
0001ac 7f0b      	ANDI R16,LOW(251)
0001ad 2f24      	MOV  R18,R20
0001ae 5011      	SUBI R17,LOW(1)
0001af c001      	RJMP _0x200004D
                 _0x200004C:
0001b0 e320      	LDI  R18,LOW(48)
                 _0x200004D:
0001b1 c001      	RJMP _0x200004E
                 _0x200004B:
0001b2 e220      	LDI  R18,LOW(32)
                 _0x200004E:
0001b3 940e 0309 	CALL SUBOPT_0x0
0001b5 5051      	SUBI R21,LOW(1)
0001b6 cfef      	RJMP _0x2000048
                 _0x200004A:
                 _0x2000047:
0001b7 2f31      	MOV  R19,R17
0001b8 ff01      	SBRS R16,1
0001b9 c017      	RJMP _0x200004F
                 _0x2000050:
0001ba 3030      	CPI  R19,0
0001bb f0a1      	BREQ _0x2000052
0001bc ff03      	SBRS R16,3
0001bd c006      	RJMP _0x2000053
0001be 81ee      	LDD  R30,Y+6
0001bf 81ff      	LDD  R31,Y+6+1
0001c0 9125      	LPM  R18,Z+
0001c1 83ee      	STD  Y+6,R30
0001c2 83ff      	STD  Y+6+1,R31
0001c3 c005      	RJMP _0x2000054
                 _0x2000053:
0001c4 81ae      	LDD  R26,Y+6
0001c5 81bf      	LDD  R27,Y+6+1
0001c6 912d      	LD   R18,X+
0001c7 83ae      	STD  Y+6,R26
0001c8 83bf      	STD  Y+6+1,R27
                 _0x2000054:
0001c9 940e 0309 	CALL SUBOPT_0x0
0001cb 3050      	CPI  R21,0
0001cc f009      	BREQ _0x2000055
0001cd 5051      	SUBI R21,LOW(1)
                 _0x2000055:
0001ce 5031      	SUBI R19,LOW(1)
0001cf cfea      	RJMP _0x2000050
                 _0x2000052:
0001d0 c04b      	RJMP _0x2000056
                 _0x200004F:
                 _0x2000058:
0001d1 e320      	LDI  R18,LOW(48)
0001d2 81ee      	LDD  R30,Y+6
0001d3 81ff      	LDD  R31,Y+6+1
0001d4 940e 0358 	CALL __GETW1PF
0001d6 87e8      	STD  Y+8,R30
0001d7 87f9      	STD  Y+8+1,R31
0001d8 81ee      	LDD  R30,Y+6
0001d9 81ff      	LDD  R31,Y+6+1
0001da 9632      	ADIW R30,2
0001db 83ee      	STD  Y+6,R30
0001dc 83ff      	STD  Y+6+1,R31
                 _0x200005A:
0001dd 85e8      	LDD  R30,Y+8
0001de 85f9      	LDD  R31,Y+8+1
0001df 85aa      	LDD  R26,Y+10
0001e0 85bb      	LDD  R27,Y+10+1
0001e1 17ae      	CP   R26,R30
0001e2 07bf      	CPC  R27,R31
0001e3 f050      	BRLO _0x200005C
0001e4 5f2f      	SUBI R18,-LOW(1)
0001e5 85a8      	LDD  R26,Y+8
0001e6 85b9      	LDD  R27,Y+8+1
0001e7 85ea      	LDD  R30,Y+10
0001e8 85fb      	LDD  R31,Y+10+1
0001e9 1bea      	SUB  R30,R26
0001ea 0bfb      	SBC  R31,R27
0001eb 87ea      	STD  Y+10,R30
0001ec 87fb      	STD  Y+10+1,R31
0001ed cfef      	RJMP _0x200005A
                 _0x200005C:
0001ee 332a      	CPI  R18,58
0001ef f028      	BRLO _0x200005D
0001f0 ff03      	SBRS R16,3
0001f1 c002      	RJMP _0x200005E
0001f2 5f29      	SUBI R18,-LOW(7)
0001f3 c001      	RJMP _0x200005F
                 _0x200005E:
0001f4 5d29      	SUBI R18,-LOW(39)
                 _0x200005F:
                 _0x200005D:
0001f5 fd04      	SBRC R16,4
0001f6 c01a      	RJMP _0x2000061
0001f7 3321      	CPI  R18,49
0001f8 f420      	BRSH _0x2000063
0001f9 85a8      	LDD  R26,Y+8
0001fa 85b9      	LDD  R27,Y+8+1
0001fb 9711      	SBIW R26,1
0001fc f409      	BRNE _0x2000062
                 _0x2000063:
0001fd c009      	RJMP _0x20000CD
                 _0x2000062:
0001fe 1753      	CP   R21,R19
0001ff f010      	BRLO _0x2000067
000200 ff00      	SBRS R16,0
000201 c001      	RJMP _0x2000068
                 _0x2000067:
000202 c013      	RJMP _0x2000066
                 _0x2000068:
000203 e220      	LDI  R18,LOW(32)
000204 ff07      	SBRS R16,7
000205 c00b      	RJMP _0x2000069
000206 e320      	LDI  R18,LOW(48)
                 _0x20000CD:
000207 6100      	ORI  R16,LOW(16)
000208 ff02      	SBRS R16,2
000209 c007      	RJMP _0x200006A
00020a 7f0b      	ANDI R16,LOW(251)
00020b 934a      	ST   -Y,R20
00020c 940e 0316 	CALL SUBOPT_0x2
00020e 3050      	CPI  R21,0
00020f f009      	BREQ _0x200006B
000210 5051      	SUBI R21,LOW(1)
                 _0x200006B:
                 _0x200006A:
                 _0x2000069:
                 _0x2000061:
000211 940e 0309 	CALL SUBOPT_0x0
000213 3050      	CPI  R21,0
000214 f009      	BREQ _0x200006C
000215 5051      	SUBI R21,LOW(1)
                 _0x200006C:
                 _0x2000066:
000216 5031      	SUBI R19,LOW(1)
000217 85a8      	LDD  R26,Y+8
000218 85b9      	LDD  R27,Y+8+1
000219 9712      	SBIW R26,2
00021a f008      	BRLO _0x2000059
00021b cfb5      	RJMP _0x2000058
                 _0x2000059:
                 _0x2000056:
00021c ff00      	SBRS R16,0
00021d c008      	RJMP _0x200006D
                 _0x200006E:
00021e 3050      	CPI  R21,0
00021f f031      	BREQ _0x2000070
000220 5051      	SUBI R21,LOW(1)
000221 e2e0      	LDI  R30,LOW(32)
000222 93ea      	ST   -Y,R30
000223 940e 0316 	CALL SUBOPT_0x2
000225 cff8      	RJMP _0x200006E
                 _0x2000070:
                 _0x200006D:
                 _0x2000071:
                 _0x2000030:
                 _0x20000CC:
000226 e010      	LDI  R17,LOW(0)
                 _0x200001B:
000227 cee0      	RJMP _0x2000016
                 _0x2000018:
000228 85ac      	LDD  R26,Y+12
000229 85bd      	LDD  R27,Y+12+1
00022a 940e 0354 	CALL __GETW1P
00022c 940e 0368 	CALL __LOADLOCR6
00022e 9664      	ADIW R28,20
00022f 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
000230 92ff      	PUSH R15
000231 2ef8      	MOV  R15,R24
000232 9726      	SBIW R28,6
000233 940e 0363 	CALL __SAVELOCR4
000235 940e 032e 	CALL SUBOPT_0x5
000237 9730      	SBIW R30,0
000238 f419      	BRNE _0x2000072
000239 efef      	LDI  R30,LOW(65535)
00023a efff      	LDI  R31,HIGH(65535)
00023b c023      	RJMP _0x2080002
                 _0x2000072:
00023c 01de      	MOVW R26,R28
00023d 9616      	ADIW R26,6
00023e 940e 034c 	CALL __ADDW2R15
000240 018d      	MOVW R16,R26
000241 940e 032e 	CALL SUBOPT_0x5
000243 83ee      	STD  Y+6,R30
000244 83ff      	STD  Y+6+1,R31
000245 e0e0      	LDI  R30,LOW(0)
000246 87e8      	STD  Y+8,R30
000247 87e9      	STD  Y+8+1,R30
000248 01de      	MOVW R26,R28
000249 961a      	ADIW R26,10
00024a 940e 034c 	CALL __ADDW2R15
00024c 940e 0354 	CALL __GETW1P
00024e 93fa      	ST   -Y,R31
00024f 93ea      	ST   -Y,R30
000250 931a      	ST   -Y,R17
000251 930a      	ST   -Y,R16
000252 ebec      	LDI  R30,LOW(_put_buff_G100)
000253 e0f0      	LDI  R31,HIGH(_put_buff_G100)
000254 93fa      	ST   -Y,R31
000255 93ea      	ST   -Y,R30
000256 01de      	MOVW R26,R28
000257 961a      	ADIW R26,10
000258 dea3      	RCALL __print_G100
000259 019f      	MOVW R18,R30
00025a 81ae      	LDD  R26,Y+6
00025b 81bf      	LDD  R27,Y+6+1
00025c e0e0      	LDI  R30,LOW(0)
00025d 93ec      	ST   X,R30
00025e 01f9      	MOVW R30,R18
                 _0x2080002:
00025f 940e 036a 	CALL __LOADLOCR4
000261 962a      	ADIW R28,10
000262 90ff      	POP  R15
000263 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G101:
                 ; .FSTART __lcd_write_nibble_G101
000264 93aa      	ST   -Y,R26
000265 b3eb      	IN   R30,0x1B
000266 70ef      	ANDI R30,LOW(0xF)
000267 2fae      	MOV  R26,R30
000268 81e8      	LD   R30,Y
000269 7fe0      	ANDI R30,LOW(0xF0)
00026a 2bea      	OR   R30,R26
00026b bbeb      	OUT  0x1B,R30
                +
00026c e082     +LDI R24 , LOW ( 2 )
                +__DELAY_USB_LOOP :
00026d 958a     +DEC R24
00026e f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 2
00026f 9ada      	SBI  0x1B,2
                +
000270 e082     +LDI R24 , LOW ( 2 )
                +__DELAY_USB_LOOP :
000271 958a     +DEC R24
000272 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 2
000273 98da      	CBI  0x1B,2
                +
000274 e082     +LDI R24 , LOW ( 2 )
                +__DELAY_USB_LOOP :
000275 958a     +DEC R24
000276 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 2
000277 c076      	RJMP _0x2080001
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
000278 93aa      	ST   -Y,R26
000279 81a8      	LD   R26,Y
00027a dfe9      	RCALL __lcd_write_nibble_G101
00027b 81e8          ld    r30,y
00027c 95e2          swap  r30
00027d 83e8          st    y,r30
00027e 81a8      	LD   R26,Y
00027f dfe4      	RCALL __lcd_write_nibble_G101
                +
000280 e181     +LDI R24 , LOW ( 17 )
                +__DELAY_USB_LOOP :
000281 958a     +DEC R24
000282 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 17
000283 c06a      	RJMP _0x2080001
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
000284 93aa      	ST   -Y,R26
000285 81e8      	LD   R30,Y
000286 e0f0      	LDI  R31,0
000287 59e5      	SUBI R30,LOW(-__base_y_G101)
000288 4ffd      	SBCI R31,HIGH(-__base_y_G101)
000289 81e0      	LD   R30,Z
00028a 81a9      	LDD  R26,Y+1
00028b 0fae      	ADD  R26,R30
00028c dfeb      	RCALL __lcd_write_data
00028d 8059      	LDD  R5,Y+1
00028e 8048      	LDD  R4,Y+0
00028f 9622      	ADIW R28,2
000290 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
000291 e0a2      	LDI  R26,LOW(2)
000292 940e 0335 	CALL SUBOPT_0x6
000294 e0ac      	LDI  R26,LOW(12)
000295 dfe2      	RCALL __lcd_write_data
000296 e0a1      	LDI  R26,LOW(1)
000297 940e 0335 	CALL SUBOPT_0x6
000299 e0e0      	LDI  R30,LOW(0)
00029a 2e4e      	MOV  R4,R30
00029b 2e5e      	MOV  R5,R30
00029c 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
00029d 93aa      	ST   -Y,R26
00029e 81a8      	LD   R26,Y
00029f 30aa      	CPI  R26,LOW(0xA)
0002a0 f011      	BREQ _0x2020005
0002a1 1457      	CP   R5,R7
0002a2 f048      	BRLO _0x2020004
                 _0x2020005:
0002a3 e0e0      	LDI  R30,LOW(0)
0002a4 93ea      	ST   -Y,R30
0002a5 9443      	INC  R4
0002a6 2da4      	MOV  R26,R4
0002a7 dfdc      	RCALL _lcd_gotoxy
0002a8 81a8      	LD   R26,Y
0002a9 30aa      	CPI  R26,LOW(0xA)
0002aa f409      	BRNE _0x2020007
0002ab c042      	RJMP _0x2080001
                 _0x2020007:
                 _0x2020004:
0002ac 9453      	INC  R5
0002ad 9ad8      	SBI  0x1B,0
0002ae 81a8      	LD   R26,Y
0002af dfc8      	RCALL __lcd_write_data
0002b0 98d8      	CBI  0x1B,0
0002b1 c03c      	RJMP _0x2080001
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
0002b2 93ba      	ST   -Y,R27
0002b3 93aa      	ST   -Y,R26
0002b4 931a      	ST   -Y,R17
                 _0x2020008:
0002b5 81a9      	LDD  R26,Y+1
0002b6 81ba      	LDD  R27,Y+1+1
0002b7 91ed      	LD   R30,X+
0002b8 83a9      	STD  Y+1,R26
0002b9 83ba      	STD  Y+1+1,R27
0002ba 2f1e      	MOV  R17,R30
0002bb 30e0      	CPI  R30,0
0002bc f019      	BREQ _0x202000A
0002bd 2fa1      	MOV  R26,R17
0002be dfde      	RCALL _lcd_putchar
0002bf cff5      	RJMP _0x2020008
                 _0x202000A:
0002c0 8118      	LDD  R17,Y+0
0002c1 9623      	ADIW R28,3
0002c2 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
0002c3 93aa      	ST   -Y,R26
0002c4 b3ea      	IN   R30,0x1A
0002c5 6fe0      	ORI  R30,LOW(0xF0)
0002c6 bbea      	OUT  0x1A,R30
0002c7 9ad2      	SBI  0x1A,2
0002c8 9ad0      	SBI  0x1A,0
0002c9 9ad1      	SBI  0x1A,1
0002ca 98da      	CBI  0x1B,2
0002cb 98d8      	CBI  0x1B,0
0002cc 98d9      	CBI  0x1B,1
0002cd 8078      	LDD  R7,Y+0
0002ce 81e8      	LD   R30,Y
0002cf 58e0      	SUBI R30,-LOW(128)
                +
0002d0 93e0 026d+STS __base_y_G101 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G101,2
0002d2 81e8      	LD   R30,Y
0002d3 54e0      	SUBI R30,-LOW(192)
                +
0002d4 93e0 026e+STS __base_y_G101 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G101,3
0002d6 e1a4      	LDI  R26,LOW(20)
0002d7 e0b0      	LDI  R27,0
0002d8 940e 0342 	CALL _delay_ms
0002da 940e 033b 	CALL SUBOPT_0x7
0002dc 940e 033b 	CALL SUBOPT_0x7
0002de 940e 033b 	CALL SUBOPT_0x7
0002e0 e2a0      	LDI  R26,LOW(32)
0002e1 df82      	RCALL __lcd_write_nibble_G101
                +
0002e2 e281     +LDI R24 , LOW ( 33 )
                +__DELAY_USB_LOOP :
0002e3 958a     +DEC R24
0002e4 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 33
0002e5 e2a8      	LDI  R26,LOW(40)
0002e6 df91      	RCALL __lcd_write_data
0002e7 e0a4      	LDI  R26,LOW(4)
0002e8 df8f      	RCALL __lcd_write_data
0002e9 e8a5      	LDI  R26,LOW(133)
0002ea df8d      	RCALL __lcd_write_data
0002eb e0a6      	LDI  R26,LOW(6)
0002ec df8b      	RCALL __lcd_write_data
0002ed dfa3      	RCALL _lcd_clear
                 _0x2080001:
0002ee 9621      	ADIW R28,1
0002ef 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
0002f0 93ba      	ST   -Y,R27
0002f1 93aa      	ST   -Y,R26
0002f2 91a9          ld   r26,y+
0002f3 91b9          ld   r27,y+
0002f4 27ee          clr  r30
0002f5 27ff          clr  r31
                 strlen0:
0002f6 916d          ld   r22,x+
0002f7 2366          tst  r22
0002f8 f011          breq strlen1
0002f9 9631          adiw r30,1
0002fa cffb          rjmp strlen0
                 strlen1:
0002fb 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
0002fc 93ba      	ST   -Y,R27
0002fd 93aa      	ST   -Y,R26
0002fe 27aa          clr  r26
0002ff 27bb          clr  r27
000300 91e9          ld   r30,y+
000301 91f9          ld   r31,y+
                 strlenf0:
000302 9005      	lpm  r0,z+
000303 2000          tst  r0
000304 f011          breq strlenf1
000305 9611          adiw r26,1
000306 cffb          rjmp strlenf0
                 strlenf1:
000307 01fd          movw r30,r26
000308 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 __base_y_G101:
00026b           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x0:
000309 932a      	ST   -Y,R18
00030a 85ad      	LDD  R26,Y+13
00030b 85be      	LDD  R27,Y+13+1
00030c 85ef      	LDD  R30,Y+15
00030d 89f8      	LDD  R31,Y+15+1
00030e 9509      	ICALL
00030f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1:
000310 89e8      	LDD  R30,Y+16
000311 89f9      	LDD  R31,Y+16+1
000312 9734      	SBIW R30,4
000313 8be8      	STD  Y+16,R30
000314 8bf9      	STD  Y+16+1,R31
000315 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2:
000316 85ad      	LDD  R26,Y+13
000317 85be      	LDD  R27,Y+13+1
000318 85ef      	LDD  R30,Y+15
000319 89f8      	LDD  R31,Y+15+1
00031a 9509      	ICALL
00031b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x3:
00031c 89a8      	LDD  R26,Y+16
00031d 89b9      	LDD  R27,Y+16+1
00031e 9614      	ADIW R26,4
00031f 940e 0354 	CALL __GETW1P
000321 83ee      	STD  Y+6,R30
000322 83ff      	STD  Y+6+1,R31
000323 81ae      	LDD  R26,Y+6
000324 81bf      	LDD  R27,Y+6+1
000325 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x4:
000326 89a8      	LDD  R26,Y+16
000327 89b9      	LDD  R27,Y+16+1
000328 9614      	ADIW R26,4
000329 940e 0354 	CALL __GETW1P
00032b 87ea      	STD  Y+10,R30
00032c 87fb      	STD  Y+10+1,R31
00032d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5:
00032e 01de      	MOVW R26,R28
00032f 961c      	ADIW R26,12
000330 940e 034c 	CALL __ADDW2R15
000332 940e 0354 	CALL __GETW1P
000334 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x6:
000335 940e 0278 	CALL __lcd_write_data
000337 e0a3      	LDI  R26,LOW(3)
000338 e0b0      	LDI  R27,0
000339 940c 0342 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x7:
00033b e3a0      	LDI  R26,LOW(48)
00033c 940e 0264 	CALL __lcd_write_nibble_G101
                +
00033e e281     +LDI R24 , LOW ( 33 )
                +__DELAY_USB_LOOP :
00033f 958a     +DEC R24
000340 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 33
000341 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000342 9610      	adiw r26,0
000343 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000344 ef8a     +LDI R24 , LOW ( 0xFA )
000345 e090     +LDI R25 , HIGH ( 0xFA )
                +__DELAY_USW_LOOP :
000346 9701     +SBIW R24 , 1
000347 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xFA
000348 95a8      	wdr
000349 9711      	sbiw r26,1
00034a f7c9      	brne __delay_ms0
                 __delay_ms1:
00034b 9508      	ret
                 
                 __ADDW2R15:
00034c 2400      	CLR  R0
00034d 0daf      	ADD  R26,R15
00034e 1db0      	ADC  R27,R0
00034f 9508      	RET
                 
                 __ANEGW1:
000350 95f1      	NEG  R31
000351 95e1      	NEG  R30
000352 40f0      	SBCI R31,0
000353 9508      	RET
                 
                 __GETW1P:
000354 91ed      	LD   R30,X+
000355 91fc      	LD   R31,X
000356 9711      	SBIW R26,1
000357 9508      	RET
                 
                 __GETW1PF:
000358 9005      	LPM  R0,Z+
000359 91f4      	LPM  R31,Z
00035a 2de0      	MOV  R30,R0
00035b 9508      	RET
                 
                 __PUTPARD1:
00035c 937a      	ST   -Y,R23
00035d 936a      	ST   -Y,R22
00035e 93fa      	ST   -Y,R31
00035f 93ea      	ST   -Y,R30
000360 9508      	RET
                 
                 __SAVELOCR6:
000361 935a      	ST   -Y,R21
                 __SAVELOCR5:
000362 934a      	ST   -Y,R20
                 __SAVELOCR4:
000363 933a      	ST   -Y,R19
                 __SAVELOCR3:
000364 932a      	ST   -Y,R18
                 __SAVELOCR2:
000365 931a      	ST   -Y,R17
000366 930a      	ST   -Y,R16
000367 9508      	RET
                 
                 __LOADLOCR6:
000368 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000369 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
00036a 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
00036b 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
00036c 8119      	LDD  R17,Y+1
00036d 8108      	LD   R16,Y
00036e 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :  11 r1 :   1 r2 :   0 r3 :   0 r4 :   4 r5 :   4 r6 :   0 r7 :   2 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  34 r17:  27 r18:  32 r19:  10 r20:   9 r21:  17 r22:   6 r23:   2 
r24:  23 r25:   3 r26: 101 r27:  40 r28:  17 r29:   1 r30: 162 r31:  59 
x  :  23 y  : 165 z  :  15 
Registers used: 25 out of 35 (71.4%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   1 add   :   3 
adiw  :  24 and   :   0 andi  :   6 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  17 
brge  :   1 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   8 
brlt  :   0 brmi  :   1 brne  :  30 brpl  :   1 brsh  :   2 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :  55 
cbi   :   6 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  10 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   5 cpc   :   3 cpi   :  33 cpse  :   0 dec   :   7 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :   3 inc   :   2 jmp   :  23 ld    :  25 ldd   :  77 ldi   :  92 
lds   :   0 lpm   :  14 lsl   :   0 lsr   :   0 mov   :  19 movw  :  17 
mul   :   1 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   1 
ori   :   7 out   :  17 pop   :   1 push  :   1 rcall :  14 ret   :  24 
reti  :   0 rjmp  :  61 rol   :   0 ror   :   0 sbc   :   1 sbci  :   3 
sbi   :   6 sbic  :   0 sbis  :   1 sbiw  :  18 sbr   :   0 sbrc  :   2 
sbrs  :  10 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  58 std   :  31 sts   :   2 sub   :   1 subi  :  17 swap  :   1 
tst   :   4 wdr   :   1 
Instructions used: 54 out of 116 (46.6%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0006de   1702     56   1758   32768   5.4%
[.dseg] 0x000060 0x00026f      0     15     15    2048   0.7%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 4 warnings
