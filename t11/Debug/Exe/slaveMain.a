;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;#include <stdio.h>
;#include <alcd.h>
;
;void main(void)
; 0000 0007 {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 0008 
; 0000 0009     unsigned char received_value;
; 0000 000A     char lcd_buffer[16];
; 0000 000B     int i;
; 0000 000C     DDRB = (1<<DDB7);
;PCODE: $0000000E VOL: 0
;	received_value -> R17
;	lcd_buffer -> Y+0
;	i -> R18,R19
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 000D     PORTB = 0x00;
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 000E     DDRC = 0x00;
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 000F     DDRD = 0x00;
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 0010 
; 0000 0011     // --- USART Initialization (Receiver) ---
; 0000 0012     // Baud Rate: 1200 bps (assuming 1MHz internal clock)
; 0000 0013     // 8 data bits, 1 stop bit, no parity.
; 0000 0014     UCSRA = 0x00;
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 0015     // Enable Receiver
; 0000 0016     UCSRB = (1<<RXEN);
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 0017     // Set frame format: 8data, 1stop bit
; 0000 0018     UCSRC = (1<<URSEL) | (1<<UCSZ1) | (1<<UCSZ0);
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 0019     // Set baud rate
; 0000 001A     UBRRH = 0x00;
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 001B     UBRRL = 0x33; // For 1200 baud @ 1MHz clock
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 001C 
; 0000 001D     lcd_init(16);
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 001E     lcd_clear();
;PCODE: $00000023 VOL: 0
; 0000 001F     lcd_puts("Waiting...");
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 0020     while (1)
;PCODE: $00000027 VOL: 0
; 0000 0021     {
; 0000 0022         //Wait for data
; 0000 0023         while (!(UCSRA & (1<<RXC)));
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 0024 
; 0000 0025         //Get received data from buffer
; 0000 0026         received_value = UDR;
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 0027         sprintf(lcd_buffer, "Count: %d", received_value);
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 0028         lcd_clear();
;PCODE: $0000003C VOL: 0
; 0000 0029         lcd_puts(lcd_buffer);
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 002A         for (i = 0; i < received_value; i++)
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 002B         {
; 0000 002C             PORTB.7 = 1;
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 002D             delay_ms(100);
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 002E             PORTB.7 = 0;
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0000 002F             delay_ms(150);
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 0030         }
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0000 0031     }
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0000 0032 }
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0

	.DSEG
_0x3:
	.BYTE 0xB
