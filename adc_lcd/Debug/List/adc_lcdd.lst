
AVRASM ver. 2.1.30  C:\Users\Bardia\Desktop\10mordad\adc_lcd\Debug\List\adc_lcdd.asm Fri Aug 01 11:15:39 2025

C:\Users\Bardia\Desktop\10mordad\adc_lcd\Debug\List\adc_lcdd.asm(1088): warning: Register r4 already defined by the .DEF directive
C:\Users\Bardia\Desktop\10mordad\adc_lcd\Debug\List\adc_lcdd.asm(1089): warning: Register r5 already defined by the .DEF directive
C:\Users\Bardia\Desktop\10mordad\adc_lcd\Debug\List\adc_lcdd.asm(1090): warning: Register r7 already defined by the .DEF directive
C:\Users\Bardia\Desktop\10mordad\adc_lcd\Debug\List\adc_lcdd.asm(1091): warning: Register r6 already defined by the .DEF directive
C:\Users\Bardia\Desktop\10mordad\adc_lcd\Debug\List\adc_lcdd.asm(1092): warning: Register r9 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32
                 ;Program type           : Application
                 ;Clock frequency        : 1.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : float, width, precision
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _a=R4
                 	.DEF _a_msb=R5
                 	.DEF __lcd_x=R7
                 	.DEF __lcd_y=R6
                 	.DEF __lcd_maxx=R9
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 003e 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _0x0:
00002a 3425
00002b 322e
00002c 0066      	.DB  0x25,0x34,0x2E,0x32,0x66,0x0
                 _0x2000000:
00002d 4e2d
00002e 4e41
C:\Users\Bardia\Desktop\10mordad\adc_lcd\Debug\List\adc_lcdd.asm(1126): warning: .cseg .db misalignment - padding zero byte
00002f 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 _0x2020003:
000030 c080      	.DB  0x80,0xC0
                 _0x20A0060:
C:\Users\Bardia\Desktop\10mordad\adc_lcd\Debug\List\adc_lcdd.asm(1130): warning: .cseg .db misalignment - padding zero byte
000031 0001      	.DB  0x1
                 _0x20A0000:
000032 4e2d
000033 4e41
000034 4900
000035 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Users\Bardia\Desktop\10mordad\adc_lcd\Debug\List\adc_lcdd.asm(1133): warning: .cseg .db misalignment - padding zero byte
000036 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
000037 0002      	.DW  0x02
000038 0274      	.DW  __base_y_G101
000039 0060      	.DW  _0x2020003*2
                 
00003a 0001      	.DW  0x01
00003b 0278      	.DW  __seed_G105
00003c 0062      	.DW  _0x20A0060*2
                 
                 _0xFFFFFFFF:
00003d 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00003e 94f8      	CLI
00003f 27ee      	CLR  R30
000040 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000041 e0f1      	LDI  R31,1
000042 bffb      	OUT  GICR,R31
000043 bfeb      	OUT  GICR,R30
000044 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000045 e08d      	LDI  R24,(14-2)+1
000046 e0a2      	LDI  R26,2
000047 27bb      	CLR  R27
                 __CLEAR_REG:
000048 93ed      	ST   X+,R30
000049 958a      	DEC  R24
00004a f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00004b e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00004c e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00004d e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
00004e 93ed      	ST   X+,R30
00004f 9701      	SBIW R24,1
000050 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000051 e6ee      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000052 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000053 9185      	LPM  R24,Z+
000054 9195      	LPM  R25,Z+
000055 9700      	SBIW R24,0
000056 f061      	BREQ __GLOBAL_INI_END
000057 91a5      	LPM  R26,Z+
000058 91b5      	LPM  R27,Z+
000059 9005      	LPM  R0,Z+
00005a 9015      	LPM  R1,Z+
00005b 01bf      	MOVW R22,R30
00005c 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00005d 9005      	LPM  R0,Z+
00005e 920d      	ST   X+,R0
00005f 9701      	SBIW R24,1
000060 f7e1      	BRNE __GLOBAL_INI_LOOP
000061 01fb      	MOVW R30,R22
000062 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000063 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000064 bfed      	OUT  SPL,R30
000065 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000066 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000067 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000068 e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000069 940c 007a 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;
                 ;#include <mega32.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;
                 ;#include <delay.h>
                 ;#include <stdio.h>
                 ;// Alphanumeric LCD functions
                 ;#include <alcd.h>
                 ;
                 ;// Declare your global variables here
                 ;unsigned int a;
                 ;char t[16];
                 ;float v;
                 ;// Voltage Reference: Int., cap. on AREF
                 ;#define ADC_VREF_TYPE ((1<<REFS1) | (1<<REFS0) | (0<<ADLAR))
                 ;
                 ;// Read the AD conversion result
                 ;unsigned int read_adc(unsigned char adc_input)
                 ; 0000 0012 {
                 
                 	.CSEG
                 _read_adc:
                 ; .FSTART _read_adc
                 ; 0000 0013 ADMUX=adc_input | ADC_VREF_TYPE;
00006b 93aa      	ST   -Y,R26
                 ;	adc_input -> Y+0
00006c 81e8      	LD   R30,Y
00006d 6ce0      	ORI  R30,LOW(0xC0)
00006e b9e7      	OUT  0x7,R30
                 ; 0000 0014 // Delay needed for the stabilization of the ADC input voltage
                 ; 0000 0015 delay_us(10);
                +
00006f e083     +LDI R24 , LOW ( 3 )
                +__DELAY_USB_LOOP :
000070 958a     +DEC R24
000071 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 3
                 ; 0000 0016 // Start the AD conversion
                 ; 0000 0017 ADCSRA|=(1<<ADSC);
000072 9a36      	SBI  0x6,6
                 ; 0000 0018 // Wait for the AD conversion to complete
                 ; 0000 0019 while ((ADCSRA & (1<<ADIF))==0);
                 _0x3:
000073 9b34      	SBIS 0x6,4
000074 cffe      	RJMP _0x3
                 ; 0000 001A ADCSRA|=(1<<ADIF);
000075 9a34      	SBI  0x6,4
                 ; 0000 001B return ADCW;
000076 b1e4      	IN   R30,0x4
000077 b1f5      	IN   R31,0x4+1
000078 940c 04cf 	JMP  _0x20C0004
                 ; 0000 001C }
                 ; .FEND
                 ;
                 ;void main(void)
                 ; 0000 001F {
                 _main:
                 ; .FSTART _main
                 ; 0000 0020 // Declare your local variables here
                 ; 0000 0021 
                 ; 0000 0022 // Input/Output Ports initialization
                 ; 0000 0023 // Port A initialization
                 ; 0000 0024 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0025 DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
00007a e0e0      	LDI  R30,LOW(0)
00007b bbea      	OUT  0x1A,R30
                 ; 0000 0026 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0027 PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
00007c bbeb      	OUT  0x1B,R30
                 ; 0000 0028 
                 ; 0000 0029 // Port B initialization
                 ; 0000 002A // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 002B DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
00007d bbe7      	OUT  0x17,R30
                 ; 0000 002C // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 002D PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
00007e bbe8      	OUT  0x18,R30
                 ; 0000 002E 
                 ; 0000 002F // Port C initialization
                 ; 0000 0030 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0031 DDRC=(0<<DDC7) | (0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
00007f bbe4      	OUT  0x14,R30
                 ; 0000 0032 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0033 PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
000080 bbe5      	OUT  0x15,R30
                 ; 0000 0034 
                 ; 0000 0035 // Port D initialization
                 ; 0000 0036 // Function: Bit7=Out Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0037 DDRD=(1<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
000081 e8e0      	LDI  R30,LOW(128)
000082 bbe1      	OUT  0x11,R30
                 ; 0000 0038 // State: Bit7=0 Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0039 PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
000083 e0e0      	LDI  R30,LOW(0)
000084 bbe2      	OUT  0x12,R30
                 ; 0000 003A 
                 ; 0000 003B // Timer/Counter 0 initialization
                 ; 0000 003C // Clock source: System Clock
                 ; 0000 003D // Clock value: Timer 0 Stopped
                 ; 0000 003E // Mode: Normal top=0xFF
                 ; 0000 003F // OC0 output: Disconnected
                 ; 0000 0040 TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (0<<CS01) | (0<<CS00);
000085 bfe3      	OUT  0x33,R30
                 ; 0000 0041 TCNT0=0x00;
000086 bfe2      	OUT  0x32,R30
                 ; 0000 0042 OCR0=0x00;
000087 bfec      	OUT  0x3C,R30
                 ; 0000 0043 
                 ; 0000 0044 // Timer/Counter 1 initialization
                 ; 0000 0045 // Clock source: System Clock
                 ; 0000 0046 // Clock value: Timer1 Stopped
                 ; 0000 0047 // Mode: Normal top=0xFFFF
                 ; 0000 0048 // OC1A output: Disconnected
                 ; 0000 0049 // OC1B output: Disconnected
                 ; 0000 004A // Noise Canceler: Off
                 ; 0000 004B // Input Capture on Falling Edge
                 ; 0000 004C // Timer1 Overflow Interrupt: Off
                 ; 0000 004D // Input Capture Interrupt: Off
                 ; 0000 004E // Compare A Match Interrupt: Off
                 ; 0000 004F // Compare B Match Interrupt: Off
                 ; 0000 0050 TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
000088 bdef      	OUT  0x2F,R30
                 ; 0000 0051 TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
000089 bdee      	OUT  0x2E,R30
                 ; 0000 0052 TCNT1H=0x00;
00008a bded      	OUT  0x2D,R30
                 ; 0000 0053 TCNT1L=0x00;
00008b bdec      	OUT  0x2C,R30
                 ; 0000 0054 ICR1H=0x00;
00008c bde7      	OUT  0x27,R30
                 ; 0000 0055 ICR1L=0x00;
00008d bde6      	OUT  0x26,R30
                 ; 0000 0056 OCR1AH=0x00;
00008e bdeb      	OUT  0x2B,R30
                 ; 0000 0057 OCR1AL=0x00;
00008f bdea      	OUT  0x2A,R30
                 ; 0000 0058 OCR1BH=0x00;
000090 bde9      	OUT  0x29,R30
                 ; 0000 0059 OCR1BL=0x00;
000091 bde8      	OUT  0x28,R30
                 ; 0000 005A 
                 ; 0000 005B // Timer/Counter 2 initialization
                 ; 0000 005C // Clock source: System Clock
                 ; 0000 005D // Clock value: Timer2 Stopped
                 ; 0000 005E // Mode: Normal top=0xFF
                 ; 0000 005F // OC2 output: Disconnected
                 ; 0000 0060 ASSR=0<<AS2;
000092 bde2      	OUT  0x22,R30
                 ; 0000 0061 TCCR2=(0<<PWM2) | (0<<COM21) | (0<<COM20) | (0<<CTC2) | (0<<CS22) | (0<<CS21) | (0<<CS20);
000093 bde5      	OUT  0x25,R30
                 ; 0000 0062 TCNT2=0x00;
000094 bde4      	OUT  0x24,R30
                 ; 0000 0063 OCR2=0x00;
000095 bde3      	OUT  0x23,R30
                 ; 0000 0064 
                 ; 0000 0065 // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 0066 TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (0<<TOIE0);
000096 bfe9      	OUT  0x39,R30
                 ; 0000 0067 
                 ; 0000 0068 // External Interrupt(s) initialization
                 ; 0000 0069 // INT0: Off
                 ; 0000 006A // INT1: Off
                 ; 0000 006B // INT2: Off
                 ; 0000 006C MCUCR=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
000097 bfe5      	OUT  0x35,R30
                 ; 0000 006D MCUCSR=(0<<ISC2);
000098 bfe4      	OUT  0x34,R30
                 ; 0000 006E 
                 ; 0000 006F // USART initialization
                 ; 0000 0070 // USART disabled
                 ; 0000 0071 UCSRB=(0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (0<<RXEN) | (0<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
000099 b9ea      	OUT  0xA,R30
                 ; 0000 0072 
                 ; 0000 0073 // Analog Comparator initialization
                 ; 0000 0074 // Analog Comparator: Off
                 ; 0000 0075 // The Analog Comparator's positive input is
                 ; 0000 0076 // connected to the AIN0 pin
                 ; 0000 0077 // The Analog Comparator's negative input is
                 ; 0000 0078 // connected to the AIN1 pin
                 ; 0000 0079 ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
00009a e8e0      	LDI  R30,LOW(128)
00009b b9e8      	OUT  0x8,R30
                 ; 0000 007A 
                 ; 0000 007B // ADC initialization
                 ; 0000 007C // ADC Clock frequency: 125.000 kHz
                 ; 0000 007D // ADC Voltage Reference: Int., cap. on AREF
                 ; 0000 007E // ADC Auto Trigger Source: ADC Stopped
                 ; 0000 007F ADMUX=ADC_VREF_TYPE;
00009c ece0      	LDI  R30,LOW(192)
00009d b9e7      	OUT  0x7,R30
                 ; 0000 0080 ADCSRA=(1<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (1<<ADPS1) | (1<<ADPS0);
00009e e8e3      	LDI  R30,LOW(131)
00009f b9e6      	OUT  0x6,R30
                 ; 0000 0081 SFIOR=(0<<ADTS2) | (0<<ADTS1) | (0<<ADTS0);
0000a0 e0e0      	LDI  R30,LOW(0)
0000a1 bfe0      	OUT  0x30,R30
                 ; 0000 0082 
                 ; 0000 0083 // SPI initialization
                 ; 0000 0084 // SPI disabled
                 ; 0000 0085 SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
0000a2 b9ed      	OUT  0xD,R30
                 ; 0000 0086 
                 ; 0000 0087 // TWI initialization
                 ; 0000 0088 // TWI disabled
                 ; 0000 0089 TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
0000a3 bfe6      	OUT  0x36,R30
                 ; 0000 008A 
                 ; 0000 008B lcd_init(16);
0000a4 e1a0      	LDI  R26,LOW(16)
0000a5 940e 04a4 	CALL _lcd_init
                 ; 0000 008C 
                 ; 0000 008D while (1)
                 _0x6:
                 ; 0000 008E       {
                 ; 0000 008F       a= read_adc(3);
0000a7 e0a3      	LDI  R26,LOW(3)
0000a8 dfc2      	RCALL _read_adc
0000a9 012f      	MOVW R4,R30
                 ; 0000 0090       v=(float) a/4;
0000aa 2766      	CLR  R22
0000ab 2777      	CLR  R23
0000ac 940e 0766 	CALL __CDF1
0000ae 01df      	MOVW R26,R30
0000af 01cb      	MOVW R24,R22
                +
0000b0 e0e0     +LDI R30 , LOW ( 0x40800000 )
0000b1 e0f0     +LDI R31 , HIGH ( 0x40800000 )
0000b2 e860     +LDI R22 , BYTE3 ( 0x40800000 )
0000b3 e470     +LDI R23 , BYTE4 ( 0x40800000 )
                 	__GETD1N 0x40800000
0000b4 940e 083e 	CALL __DIVF21
0000b6 93e0 0270 	STS  _v,R30
0000b8 93f0 0271 	STS  _v+1,R31
0000ba 9360 0272 	STS  _v+2,R22
0000bc 9370 0273 	STS  _v+3,R23
                 ; 0000 0091       sprintf(t,"%4.2f",v);
0000be e6e0      	LDI  R30,LOW(_t)
0000bf e0f2      	LDI  R31,HIGH(_t)
0000c0 93fa      	ST   -Y,R31
0000c1 93ea      	ST   -Y,R30
                +
0000c2 e5e4     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
0000c3 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
0000c4 93fa      	ST   -Y,R31
0000c5 93ea      	ST   -Y,R30
0000c6 91e0 0270 	LDS  R30,_v
0000c8 91f0 0271 	LDS  R31,_v+1
0000ca 9160 0272 	LDS  R22,_v+2
0000cc 9170 0273 	LDS  R23,_v+3
0000ce 940e 0927 	CALL __PUTPARD1
0000d0 e084      	LDI  R24,4
0000d1 940e 0411 	CALL _sprintf
0000d3 9628      	ADIW R28,8
                 ; 0000 0092       lcd_gotoxy(0,0);
0000d4 e0e0      	LDI  R30,LOW(0)
0000d5 93ea      	ST   -Y,R30
0000d6 e0a0      	LDI  R26,LOW(0)
0000d7 940e 0465 	CALL _lcd_gotoxy
                 ; 0000 0093       lcd_puts(t);
0000d9 e6a0      	LDI  R26,LOW(_t)
0000da e0b2      	LDI  R27,HIGH(_t)
0000db 940e 0493 	CALL _lcd_puts
                 ; 0000 0094       delay_ms(100);
0000dd e6a4      	LDI  R26,LOW(100)
0000de e0b0      	LDI  R27,0
0000df 940e 06f0 	CALL _delay_ms
                 ; 0000 0095       if(v >= 29) PORTD.7=1;
0000e1 940e 05e0 	CALL SUBOPT_0x0
0000e3 f008      	BRLO _0x9
0000e4 9a97      	SBI  0x12,7
                 ; 0000 0096 
                 ; 0000 0097       if(v < 29) PORTD.7=0;
                 _0x9:
0000e5 940e 05e0 	CALL SUBOPT_0x0
0000e7 f408      	BRSH _0xC
0000e8 9897      	CBI  0x12,7
                 ; 0000 0098 
                 ; 0000 0099 
                 ; 0000 009A       }
                 _0xC:
0000e9 cfbd      	RJMP _0x6
                 ; 0000 009B }
                 _0xF:
0000ea cfff      	RJMP _0xF
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
                 ; .FSTART _put_buff_G100
0000eb 93ba      	ST   -Y,R27
0000ec 93aa      	ST   -Y,R26
0000ed 931a      	ST   -Y,R17
0000ee 930a      	ST   -Y,R16
0000ef 81aa      	LDD  R26,Y+2
0000f0 81bb      	LDD  R27,Y+2+1
0000f1 9612      	ADIW R26,2
0000f2 940e 090e 	CALL __GETW1P
0000f4 9730      	SBIW R30,0
0000f5 f129      	BREQ _0x2000010
0000f6 81aa      	LDD  R26,Y+2
0000f7 81bb      	LDD  R27,Y+2+1
0000f8 9614      	ADIW R26,4
0000f9 940e 090e 	CALL __GETW1P
0000fb 018f      	MOVW R16,R30
0000fc 9730      	SBIW R30,0
0000fd f061      	BREQ _0x2000012
                +
0000fe 3002     +CPI R16 , LOW ( 2 )
0000ff e0e0     +LDI R30 , HIGH ( 2 )
000100 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
000101 f080      	BRLO _0x2000013
000102 01f8      	MOVW R30,R16
000103 9731      	SBIW R30,1
000104 018f      	MOVW R16,R30
                +
000105 81aa     +LDD R26 , Y + 2
000106 81bb     +LDD R27 , Y + 2 + 1
000107 9614     +ADIW R26 , 4
000108 93ed     +ST X + , R30
000109 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2000012:
00010a 81aa      	LDD  R26,Y+2
00010b 81bb      	LDD  R27,Y+2+1
00010c 9612      	ADIW R26,2
00010d 940e 05ef 	CALL SUBOPT_0x1
00010f 9731      	SBIW R30,1
000110 81ac      	LDD  R26,Y+4
000111 83a0      	STD  Z+0,R26
                 _0x2000013:
000112 81aa      	LDD  R26,Y+2
000113 81bb      	LDD  R27,Y+2+1
000114 940e 090e 	CALL __GETW1P
000116 23ff      	TST  R31
000117 f012      	BRMI _0x2000014
000118 940e 05ef 	CALL SUBOPT_0x1
                 _0x2000014:
00011a c006      	RJMP _0x2000015
                 _0x2000010:
00011b 81aa      	LDD  R26,Y+2
00011c 81bb      	LDD  R27,Y+2+1
00011d efef      	LDI  R30,LOW(65535)
00011e efff      	LDI  R31,HIGH(65535)
00011f 93ed      	ST   X+,R30
000120 93fc      	ST   X,R31
                 _0x2000015:
000121 8119      	LDD  R17,Y+1
000122 8108      	LDD  R16,Y+0
000123 9625      	ADIW R28,5
000124 9508      	RET
                 ; .FEND
                 __ftoe_G100:
                 ; .FSTART __ftoe_G100
000125 940e 05f5 	CALL SUBOPT_0x2
000127 e8e0      	LDI  R30,LOW(128)
000128 83ea      	STD  Y+2,R30
000129 e3ef      	LDI  R30,LOW(63)
00012a 83eb      	STD  Y+3,R30
00012b 940e 0944 	CALL __SAVELOCR4
00012d 85ee      	LDD  R30,Y+14
00012e 85ff      	LDD  R31,Y+14+1
00012f 3fef      	CPI  R30,LOW(0xFFFF)
000130 efaf      	LDI  R26,HIGH(0xFFFF)
000131 07fa      	CPC  R31,R26
000132 f449      	BRNE _0x2000019
000133 85e8      	LDD  R30,Y+8
000134 85f9      	LDD  R31,Y+8+1
000135 93fa      	ST   -Y,R31
000136 93ea      	ST   -Y,R30
                +
000137 e5aa     +LDI R26 , LOW ( 2 * _0x2000000 + ( 0 ) )
000138 e0b0     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 0 ) )
                 	__POINTW2FN _0x2000000,0
000139 940e 04d1 	CALL _strcpyf
00013b c0b7      	RJMP _0x20C0006
                 _0x2000019:
00013c 3fef      	CPI  R30,LOW(0x7FFF)
00013d e7af      	LDI  R26,HIGH(0x7FFF)
00013e 07fa      	CPC  R31,R26
00013f f449      	BRNE _0x2000018
000140 85e8      	LDD  R30,Y+8
000141 85f9      	LDD  R31,Y+8+1
000142 93fa      	ST   -Y,R31
000143 93ea      	ST   -Y,R30
                +
000144 e5ab     +LDI R26 , LOW ( 2 * _0x2000000 + ( 1 ) )
000145 e0b0     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 1 ) )
                 	__POINTW2FN _0x2000000,1
000146 940e 04d1 	CALL _strcpyf
000148 c0aa      	RJMP _0x20C0006
                 _0x2000018:
000149 85ab      	LDD  R26,Y+11
00014a 30a7      	CPI  R26,LOW(0x7)
00014b f010      	BRLO _0x200001B
00014c e0e6      	LDI  R30,LOW(6)
00014d 87eb      	STD  Y+11,R30
                 _0x200001B:
00014e 851b      	LDD  R17,Y+11
                 _0x200001C:
00014f 2fe1      	MOV  R30,R17
000150 5011      	SUBI R17,1
000151 30e0      	CPI  R30,0
000152 f019      	BREQ _0x200001E
000153 940e 05fc 	CALL SUBOPT_0x3
000155 cff9      	RJMP _0x200001C
                 _0x200001E:
                +
000156 85ec     +LDD R30 , Y + 12
000157 85fd     +LDD R31 , Y + 12 + 1
000158 856e     +LDD R22 , Y + 12 + 2
000159 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
00015a 940e 093e 	CALL __CPD10
00015c f421      	BRNE _0x200001F
00015d e030      	LDI  R19,LOW(0)
00015e 940e 05fc 	CALL SUBOPT_0x3
000160 c02d      	RJMP _0x2000020
                 _0x200001F:
000161 853b      	LDD  R19,Y+11
000162 940e 060b 	CALL SUBOPT_0x4
000164 f009      	BREQ PC+2
000165 f408      	BRCC PC+2
000166 c00b      	RJMP _0x2000021
000167 940e 05fc 	CALL SUBOPT_0x3
                 _0x2000022:
000169 940e 060b 	CALL SUBOPT_0x4
00016b f028      	BRLO _0x2000024
00016c 940e 0616 	CALL SUBOPT_0x5
00016e 940e 061b 	CALL SUBOPT_0x6
000170 cff8      	RJMP _0x2000022
                 _0x2000024:
000171 c00d      	RJMP _0x2000025
                 _0x2000021:
                 _0x2000026:
000172 940e 060b 	CALL SUBOPT_0x4
000174 f440      	BRSH _0x2000028
000175 940e 0616 	CALL SUBOPT_0x5
000177 940e 0627 	CALL SUBOPT_0x7
000179 940e 062e 	CALL SUBOPT_0x8
00017b 5031      	SUBI R19,LOW(1)
00017c cff5      	RJMP _0x2000026
                 _0x2000028:
00017d 940e 05fc 	CALL SUBOPT_0x3
                 _0x2000025:
                +
00017f 85ec     +LDD R30 , Y + 12
000180 85fd     +LDD R31 , Y + 12 + 1
000181 856e     +LDD R22 , Y + 12 + 2
000182 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
000183 940e 0633 	CALL SUBOPT_0x9
000185 940e 062e 	CALL SUBOPT_0x8
000187 940e 060b 	CALL SUBOPT_0x4
000189 f020      	BRLO _0x2000029
00018a 940e 0616 	CALL SUBOPT_0x5
00018c 940e 061b 	CALL SUBOPT_0x6
                 _0x2000029:
                 _0x2000020:
00018e e010      	LDI  R17,LOW(0)
                 _0x200002A:
00018f 85eb      	LDD  R30,Y+11
000190 17e1      	CP   R30,R17
000191 f1a8      	BRLO _0x200002C
                +
000192 81ac     +LDD R26 , Y + 4
000193 81bd     +LDD R27 , Y + 4 + 1
000194 818e     +LDD R24 , Y + 4 + 2
000195 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
000196 940e 063a 	CALL SUBOPT_0xA
000198 940e 0633 	CALL SUBOPT_0x9
00019a 01df      	MOVW R26,R30
00019b 01cb      	MOVW R24,R22
00019c 940e 0528 	CALL _floor
                +
00019e 83ec     +STD Y + 4 , R30
00019f 83fd     +STD Y + 4 + 1 , R31
0001a0 836e     +STD Y + 4 + 2 , R22
0001a1 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
0001a2 940e 0616 	CALL SUBOPT_0x5
0001a4 940e 083e 	CALL __DIVF21
0001a6 940e 072d 	CALL __CFD1U
0001a8 2f0e      	MOV  R16,R30
0001a9 940e 0641 	CALL SUBOPT_0xB
0001ab 940e 0648 	CALL SUBOPT_0xC
0001ad 27ff      	CLR  R31
0001ae 2766      	CLR  R22
0001af 2777      	CLR  R23
0001b0 940e 0766 	CALL __CDF1
                +
0001b2 81ac     +LDD R26 , Y + 4
0001b3 81bd     +LDD R27 , Y + 4 + 1
0001b4 818e     +LDD R24 , Y + 4 + 2
0001b5 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
0001b6 940e 07f0 	CALL __MULF12
0001b8 940e 0616 	CALL SUBOPT_0x5
0001ba 940e 064d 	CALL SUBOPT_0xD
0001bc 940e 062e 	CALL SUBOPT_0x8
0001be 2fe1      	MOV  R30,R17
0001bf 5f1f      	SUBI R17,-1
0001c0 30e0      	CPI  R30,0
0001c1 f669      	BRNE _0x200002A
0001c2 940e 0641 	CALL SUBOPT_0xB
0001c4 e2ee      	LDI  R30,LOW(46)
0001c5 93ec      	ST   X,R30
0001c6 cfc8      	RJMP _0x200002A
                 _0x200002C:
0001c7 940e 0652 	CALL SUBOPT_0xE
0001c9 9731      	SBIW R30,1
0001ca 85aa      	LDD  R26,Y+10
0001cb 83a0      	STD  Z+0,R26
0001cc 3030      	CPI  R19,0
0001cd f42c      	BRGE _0x200002E
0001ce 9531      	NEG  R19
0001cf 85a8      	LDD  R26,Y+8
0001d0 85b9      	LDD  R27,Y+8+1
0001d1 e2ed      	LDI  R30,LOW(45)
0001d2 c003      	RJMP _0x2000113
                 _0x200002E:
0001d3 85a8      	LDD  R26,Y+8
0001d4 85b9      	LDD  R27,Y+8+1
0001d5 e2eb      	LDI  R30,LOW(43)
                 _0x2000113:
0001d6 93ec      	ST   X,R30
0001d7 940e 0652 	CALL SUBOPT_0xE
0001d9 940e 0652 	CALL SUBOPT_0xE
0001db 9731      	SBIW R30,1
0001dc 01bf      	MOVW R22,R30
0001dd 2fa3      	MOV  R26,R19
0001de e0ea      	LDI  R30,LOW(10)
0001df 940e 08c8 	CALL __DIVB21
0001e1 5de0      	SUBI R30,-LOW(48)
0001e2 01db      	MOVW R26,R22
0001e3 93ec      	ST   X,R30
0001e4 940e 0652 	CALL SUBOPT_0xE
0001e6 9731      	SBIW R30,1
0001e7 01bf      	MOVW R22,R30
0001e8 2fa3      	MOV  R26,R19
0001e9 e0ea      	LDI  R30,LOW(10)
0001ea 940e 08f2 	CALL __MODB21
0001ec 5de0      	SUBI R30,-LOW(48)
0001ed 01db      	MOVW R26,R22
0001ee 93ec      	ST   X,R30
0001ef 85a8      	LDD  R26,Y+8
0001f0 85b9      	LDD  R27,Y+8+1
0001f1 e0e0      	LDI  R30,LOW(0)
0001f2 93ec      	ST   X,R30
                 _0x20C0006:
0001f3 940e 094b 	CALL __LOADLOCR4
0001f5 9660      	ADIW R28,16
0001f6 9508      	RET
                 ; .FEND
                 __print_G100:
                 ; .FSTART __print_G100
0001f7 93ba      	ST   -Y,R27
0001f8 93aa      	ST   -Y,R26
0001f9 97ef      	SBIW R28,63
0001fa 9761      	SBIW R28,17
0001fb 940e 0942 	CALL __SAVELOCR6
0001fd e010      	LDI  R17,0
                +
0001fe 01fe     +MOVW R30 , R28
0001ff 5ae8     +SUBI R30 , LOW ( - 88 )
000200 4fff     +SBCI R31 , HIGH ( - 88 )
000201 9001     +LD R0 , Z +
000202 81f0     +LD R31 , Z
000203 2de0     +MOV R30 , R0
                 	__GETW1SX 88
000204 87e8      	STD  Y+8,R30
000205 87f9      	STD  Y+8+1,R31
                +
000206 01fe     +MOVW R30 , R28
000207 5aea     +SUBI R30 , LOW ( - 86 )
000208 4fff     +SBCI R31 , HIGH ( - 86 )
000209 9001     +LD R0 , Z +
00020a 81f0     +LD R31 , Z
00020b 2de0     +MOV R30 , R0
                 	__GETW1SX 86
00020c 83ee      	STD  Y+6,R30
00020d 83ff      	STD  Y+6+1,R31
00020e 81ae      	LDD  R26,Y+6
00020f 81bf      	LDD  R27,Y+6+1
000210 e0e0      	LDI  R30,LOW(0)
000211 e0f0      	LDI  R31,HIGH(0)
000212 93ed      	ST   X+,R30
000213 93fc      	ST   X,R31
                 _0x2000030:
000214 01de      	MOVW R26,R28
000215 5aa4      	SUBI R26,LOW(-(92))
000216 4fbf      	SBCI R27,HIGH(-(92))
000217 940e 05ef 	CALL SUBOPT_0x1
000219 9731      	SBIW R30,1
00021a 91e4      	LPM  R30,Z
00021b 2f2e      	MOV  R18,R30
00021c 30e0      	CPI  R30,0
00021d f409      	BRNE PC+2
00021e c1e9      	RJMP _0x2000032
00021f 2fe1      	MOV  R30,R17
000220 30e0      	CPI  R30,0
000221 f439      	BRNE _0x2000036
000222 3225      	CPI  R18,37
000223 f411      	BRNE _0x2000037
000224 e011      	LDI  R17,LOW(1)
000225 c002      	RJMP _0x2000038
                 _0x2000037:
000226 940e 0658 	CALL SUBOPT_0xF
                 _0x2000038:
000228 c1de      	RJMP _0x2000035
                 _0x2000036:
000229 30e1      	CPI  R30,LOW(0x1)
00022a f4c1      	BRNE _0x2000039
00022b 3225      	CPI  R18,37
00022c f419      	BRNE _0x200003A
00022d 940e 0658 	CALL SUBOPT_0xF
00022f c1d6      	RJMP _0x2000114
                 _0x200003A:
000230 e012      	LDI  R17,LOW(2)
000231 e0e0      	LDI  R30,LOW(0)
000232 8bed      	STD  Y+21,R30
000233 e000      	LDI  R16,LOW(0)
000234 322d      	CPI  R18,45
000235 f411      	BRNE _0x200003B
000236 e001      	LDI  R16,LOW(1)
000237 c1cf      	RJMP _0x2000035
                 _0x200003B:
000238 322b      	CPI  R18,43
000239 f419      	BRNE _0x200003C
00023a e2eb      	LDI  R30,LOW(43)
00023b 8bed      	STD  Y+21,R30
00023c c1ca      	RJMP _0x2000035
                 _0x200003C:
00023d 3220      	CPI  R18,32
00023e f419      	BRNE _0x200003D
00023f e2e0      	LDI  R30,LOW(32)
000240 8bed      	STD  Y+21,R30
000241 c1c5      	RJMP _0x2000035
                 _0x200003D:
000242 c002      	RJMP _0x200003E
                 _0x2000039:
000243 30e2      	CPI  R30,LOW(0x2)
000244 f439      	BRNE _0x200003F
                 _0x200003E:
000245 e050      	LDI  R21,LOW(0)
000246 e013      	LDI  R17,LOW(3)
000247 3320      	CPI  R18,48
000248 f411      	BRNE _0x2000040
000249 6800      	ORI  R16,LOW(128)
00024a c1bc      	RJMP _0x2000035
                 _0x2000040:
00024b c002      	RJMP _0x2000041
                 _0x200003F:
00024c 30e3      	CPI  R30,LOW(0x3)
00024d f491      	BRNE _0x2000042
                 _0x2000041:
00024e 3320      	CPI  R18,48
00024f f010      	BRLO _0x2000044
000250 332a      	CPI  R18,58
000251 f008      	BRLO _0x2000045
                 _0x2000044:
000252 c007      	RJMP _0x2000043
                 _0x2000045:
000253 e0aa      	LDI  R26,LOW(10)
000254 9f5a      	MUL  R21,R26
000255 2d50      	MOV  R21,R0
000256 2fe2      	MOV  R30,R18
000257 53e0      	SUBI R30,LOW(48)
000258 0f5e      	ADD  R21,R30
000259 c1ad      	RJMP _0x2000035
                 _0x2000043:
00025a e040      	LDI  R20,LOW(0)
00025b 322e      	CPI  R18,46
00025c f411      	BRNE _0x2000046
00025d e014      	LDI  R17,LOW(4)
00025e c1a8      	RJMP _0x2000035
                 _0x2000046:
00025f c00f      	RJMP _0x2000047
                 _0x2000042:
000260 30e4      	CPI  R30,LOW(0x4)
000261 f499      	BRNE _0x2000049
000262 3320      	CPI  R18,48
000263 f010      	BRLO _0x200004B
000264 332a      	CPI  R18,58
000265 f008      	BRLO _0x200004C
                 _0x200004B:
000266 c008      	RJMP _0x200004A
                 _0x200004C:
000267 6200      	ORI  R16,LOW(32)
000268 e0aa      	LDI  R26,LOW(10)
000269 9f4a      	MUL  R20,R26
00026a 2d40      	MOV  R20,R0
00026b 2fe2      	MOV  R30,R18
00026c 53e0      	SUBI R30,LOW(48)
00026d 0f4e      	ADD  R20,R30
00026e c198      	RJMP _0x2000035
                 _0x200004A:
                 _0x2000047:
00026f 362c      	CPI  R18,108
000270 f419      	BRNE _0x200004D
000271 6002      	ORI  R16,LOW(2)
000272 e015      	LDI  R17,LOW(5)
000273 c193      	RJMP _0x2000035
                 _0x200004D:
000274 c003      	RJMP _0x200004E
                 _0x2000049:
000275 30e5      	CPI  R30,LOW(0x5)
000276 f009      	BREQ PC+2
000277 c18f      	RJMP _0x2000035
                 _0x200004E:
000278 2fe2      	MOV  R30,R18
000279 36e3      	CPI  R30,LOW(0x63)
00027a f459      	BRNE _0x2000053
00027b 940e 065f 	CALL SUBOPT_0x10
00027d 940e 0666 	CALL SUBOPT_0x11
00027f 940e 065f 	CALL SUBOPT_0x10
000281 81a4      	LDD  R26,Z+4
000282 93aa      	ST   -Y,R26
000283 940e 066d 	CALL SUBOPT_0x12
000285 c180      	RJMP _0x2000054
                 _0x2000053:
000286 34e5      	CPI  R30,LOW(0x45)
000287 f011      	BREQ _0x2000057
000288 36e5      	CPI  R30,LOW(0x65)
000289 f409      	BRNE _0x2000058
                 _0x2000057:
00028a c003      	RJMP _0x2000059
                 _0x2000058:
00028b 36e6      	CPI  R30,LOW(0x66)
00028c f009      	BREQ PC+2
00028d c048      	RJMP _0x200005A
                 _0x2000059:
00028e 01fe      	MOVW R30,R28
00028f 9676      	ADIW R30,22
000290 87ee      	STD  Y+14,R30
000291 87ff      	STD  Y+14+1,R31
000292 940e 0673 	CALL SUBOPT_0x13
000294 940e 0912 	CALL __GETD1P
000296 940e 067a 	CALL SUBOPT_0x14
000298 940e 067f 	CALL SUBOPT_0x15
00029a 85ad      	LDD  R26,Y+13
00029b 23aa      	TST  R26
00029c f032      	BRMI _0x200005B
00029d 89ad      	LDD  R26,Y+21
00029e 32ab      	CPI  R26,LOW(0x2B)
00029f f059      	BREQ _0x200005D
0002a0 32a0      	CPI  R26,LOW(0x20)
0002a1 f081      	BREQ _0x200005F
0002a2 c017      	RJMP _0x2000060
                 _0x200005B:
0002a3 940e 0681 	CALL SUBOPT_0x16
0002a5 940e 06fa 	CALL __ANEGF1
0002a7 940e 067a 	CALL SUBOPT_0x14
0002a9 e2ed      	LDI  R30,LOW(45)
0002aa 8bed      	STD  Y+21,R30
                 _0x200005D:
0002ab ff07      	SBRS R16,7
0002ac c005      	RJMP _0x2000061
0002ad 89ed      	LDD  R30,Y+21
0002ae 93ea      	ST   -Y,R30
0002af 940e 066d 	CALL SUBOPT_0x12
0002b1 c008      	RJMP _0x2000062
                 _0x2000061:
                 _0x200005F:
0002b2 85ee      	LDD  R30,Y+14
0002b3 85ff      	LDD  R31,Y+14+1
0002b4 9631      	ADIW R30,1
0002b5 87ee      	STD  Y+14,R30
0002b6 87ff      	STD  Y+14+1,R31
0002b7 9731      	SBIW R30,1
0002b8 89ad      	LDD  R26,Y+21
0002b9 83a0      	STD  Z+0,R26
                 _0x2000062:
                 _0x2000060:
0002ba ff05      	SBRS R16,5
0002bb e046      	LDI  R20,LOW(6)
0002bc 3626      	CPI  R18,102
0002bd f451      	BRNE _0x2000064
0002be 940e 0681 	CALL SUBOPT_0x16
0002c0 940e 0927 	CALL __PUTPARD1
0002c2 934a      	ST   -Y,R20
0002c3 89ab      	LDD  R26,Y+19
0002c4 89bc      	LDD  R27,Y+19+1
0002c5 940e 053f 	CALL _ftoa
0002c7 c009      	RJMP _0x2000065
                 _0x2000064:
0002c8 940e 0681 	CALL SUBOPT_0x16
0002ca 940e 0927 	CALL __PUTPARD1
0002cc 934a      	ST   -Y,R20
0002cd 932a      	ST   -Y,R18
0002ce 89ac      	LDD  R26,Y+20
0002cf 89bd      	LDD  R27,Y+20+1
0002d0 de54      	RCALL __ftoe_G100
                 _0x2000065:
0002d1 01fe      	MOVW R30,R28
0002d2 9676      	ADIW R30,22
0002d3 940e 0686 	CALL SUBOPT_0x17
0002d5 c01e      	RJMP _0x2000066
                 _0x200005A:
0002d6 37e3      	CPI  R30,LOW(0x73)
0002d7 f439      	BRNE _0x2000068
0002d8 940e 067f 	CALL SUBOPT_0x15
0002da 940e 068e 	CALL SUBOPT_0x18
0002dc 940e 0686 	CALL SUBOPT_0x17
0002de c00e      	RJMP _0x2000069
                 _0x2000068:
0002df 37e0      	CPI  R30,LOW(0x70)
0002e0 f4c1      	BRNE _0x200006B
0002e1 940e 067f 	CALL SUBOPT_0x15
0002e3 940e 068e 	CALL SUBOPT_0x18
0002e5 87ee      	STD  Y+14,R30
0002e6 87ff      	STD  Y+14+1,R31
0002e7 85ae      	LDD  R26,Y+14
0002e8 85bf      	LDD  R27,Y+14+1
0002e9 940e 04ea 	CALL _strlenf
0002eb 2f1e      	MOV  R17,R30
0002ec 6008      	ORI  R16,LOW(8)
                 _0x2000069:
0002ed 770f      	ANDI R16,LOW(127)
0002ee 3040      	CPI  R20,0
0002ef f011      	BREQ _0x200006D
0002f0 1741      	CP   R20,R17
0002f1 f008      	BRLO _0x200006E
                 _0x200006D:
0002f2 c001      	RJMP _0x200006C
                 _0x200006E:
0002f3 2f14      	MOV  R17,R20
                 _0x200006C:
                 _0x2000066:
0002f4 e040      	LDI  R20,LOW(0)
0002f5 e0e0      	LDI  R30,LOW(0)
0002f6 8bec      	STD  Y+20,R30
0002f7 e030      	LDI  R19,LOW(0)
0002f8 c06d      	RJMP _0x200006F
                 _0x200006B:
0002f9 36e4      	CPI  R30,LOW(0x64)
0002fa f011      	BREQ _0x2000072
0002fb 36e9      	CPI  R30,LOW(0x69)
0002fc f411      	BRNE _0x2000073
                 _0x2000072:
0002fd 6004      	ORI  R16,LOW(4)
0002fe c002      	RJMP _0x2000074
                 _0x2000073:
0002ff 37e5      	CPI  R30,LOW(0x75)
000300 f4a1      	BRNE _0x2000075
                 _0x2000074:
000301 e0ea      	LDI  R30,LOW(10)
000302 8bec      	STD  Y+20,R30
000303 ff01      	SBRS R16,1
000304 c008      	RJMP _0x2000076
                +
000305 e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
000306 ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
000307 e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
000308 e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
000309 940e 0693 	CALL SUBOPT_0x19
00030b e01a      	LDI  R17,LOW(10)
00030c c022      	RJMP _0x2000077
                 _0x2000076:
                +
00030d e1e0     +LDI R30 , LOW ( 0x2710 )
00030e e2f7     +LDI R31 , HIGH ( 0x2710 )
00030f e060     +LDI R22 , BYTE3 ( 0x2710 )
000310 e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
000311 940e 0693 	CALL SUBOPT_0x19
000313 e015      	LDI  R17,LOW(5)
000314 c01a      	RJMP _0x2000077
                 _0x2000075:
000315 35e8      	CPI  R30,LOW(0x58)
000316 f411      	BRNE _0x2000079
000317 6008      	ORI  R16,LOW(8)
000318 c003      	RJMP _0x200007A
                 _0x2000079:
000319 37e8      	CPI  R30,LOW(0x78)
00031a f009      	BREQ PC+2
00031b c0ea      	RJMP _0x20000B8
                 _0x200007A:
00031c e1e0      	LDI  R30,LOW(16)
00031d 8bec      	STD  Y+20,R30
00031e ff01      	SBRS R16,1
00031f c008      	RJMP _0x200007C
                +
000320 e0e0     +LDI R30 , LOW ( 0x10000000 )
000321 e0f0     +LDI R31 , HIGH ( 0x10000000 )
000322 e060     +LDI R22 , BYTE3 ( 0x10000000 )
000323 e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
000324 940e 0693 	CALL SUBOPT_0x19
000326 e018      	LDI  R17,LOW(8)
000327 c007      	RJMP _0x2000077
                 _0x200007C:
                +
000328 e0e0     +LDI R30 , LOW ( 0x1000 )
000329 e1f0     +LDI R31 , HIGH ( 0x1000 )
00032a e060     +LDI R22 , BYTE3 ( 0x1000 )
00032b e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
00032c 940e 0693 	CALL SUBOPT_0x19
00032e e014      	LDI  R17,LOW(4)
                 _0x2000077:
00032f 3040      	CPI  R20,0
000330 f011      	BREQ _0x200007D
000331 770f      	ANDI R16,LOW(127)
000332 c001      	RJMP _0x200007E
                 _0x200007D:
000333 e041      	LDI  R20,LOW(1)
                 _0x200007E:
000334 ff01      	SBRS R16,1
000335 c008      	RJMP _0x200007F
000336 940e 067f 	CALL SUBOPT_0x15
000338 940e 0673 	CALL SUBOPT_0x13
00033a 9614      	ADIW R26,4
00033b 940e 0912 	CALL __GETD1P
00033d c00f      	RJMP _0x2000115
                 _0x200007F:
00033e ff02      	SBRS R16,2
00033f c007      	RJMP _0x2000081
000340 940e 067f 	CALL SUBOPT_0x15
000342 940e 068e 	CALL SUBOPT_0x18
000344 940e 08b5 	CALL __CWD1
000346 c006      	RJMP _0x2000115
                 _0x2000081:
000347 940e 067f 	CALL SUBOPT_0x15
000349 940e 068e 	CALL SUBOPT_0x18
00034b 2766      	CLR  R22
00034c 2777      	CLR  R23
                 _0x2000115:
                +
00034d 87ea     +STD Y + 10 , R30
00034e 87fb     +STD Y + 10 + 1 , R31
00034f 876c     +STD Y + 10 + 2 , R22
000350 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000351 ff02      	SBRS R16,2
000352 c012      	RJMP _0x2000083
000353 85ad      	LDD  R26,Y+13
000354 23aa      	TST  R26
000355 f442      	BRPL _0x2000084
000356 940e 0681 	CALL SUBOPT_0x16
000358 940e 08a7 	CALL __ANEGD1
00035a 940e 067a 	CALL SUBOPT_0x14
00035c e2ed      	LDI  R30,LOW(45)
00035d 8bed      	STD  Y+21,R30
                 _0x2000084:
00035e 89ed      	LDD  R30,Y+21
00035f 30e0      	CPI  R30,0
000360 f019      	BREQ _0x2000085
000361 5f1f      	SUBI R17,-LOW(1)
000362 5f4f      	SUBI R20,-LOW(1)
000363 c001      	RJMP _0x2000086
                 _0x2000085:
000364 7f0b      	ANDI R16,LOW(251)
                 _0x2000086:
                 _0x2000083:
000365 2f34      	MOV  R19,R20
                 _0x200006F:
000366 fd00      	SBRC R16,0
000367 c014      	RJMP _0x2000087
                 _0x2000088:
000368 1715      	CP   R17,R21
000369 f410      	BRSH _0x200008B
00036a 1735      	CP   R19,R21
00036b f008      	BRLO _0x200008C
                 _0x200008B:
00036c c00f      	RJMP _0x200008A
                 _0x200008C:
00036d ff07      	SBRS R16,7
00036e c008      	RJMP _0x200008D
00036f ff02      	SBRS R16,2
000370 c004      	RJMP _0x200008E
000371 7f0b      	ANDI R16,LOW(251)
000372 892d      	LDD  R18,Y+21
000373 5011      	SUBI R17,LOW(1)
000374 c001      	RJMP _0x200008F
                 _0x200008E:
000375 e320      	LDI  R18,LOW(48)
                 _0x200008F:
000376 c001      	RJMP _0x2000090
                 _0x200008D:
000377 e220      	LDI  R18,LOW(32)
                 _0x2000090:
000378 940e 0658 	CALL SUBOPT_0xF
00037a 5051      	SUBI R21,LOW(1)
00037b cfec      	RJMP _0x2000088
                 _0x200008A:
                 _0x2000087:
                 _0x2000091:
00037c 1714      	CP   R17,R20
00037d f490      	BRSH _0x2000093
00037e 6100      	ORI  R16,LOW(16)
00037f ff02      	SBRS R16,2
000380 c006      	RJMP _0x2000094
000381 940e 0698 	CALL SUBOPT_0x1A
000383 f009      	BREQ _0x2000095
000384 5051      	SUBI R21,LOW(1)
                 _0x2000095:
000385 5011      	SUBI R17,LOW(1)
000386 5041      	SUBI R20,LOW(1)
                 _0x2000094:
000387 e3e0      	LDI  R30,LOW(48)
000388 93ea      	ST   -Y,R30
000389 940e 066d 	CALL SUBOPT_0x12
00038b 3050      	CPI  R21,0
00038c f009      	BREQ _0x2000096
00038d 5051      	SUBI R21,LOW(1)
                 _0x2000096:
00038e 5041      	SUBI R20,LOW(1)
00038f cfec      	RJMP _0x2000091
                 _0x2000093:
000390 2f31      	MOV  R19,R17
000391 89ec      	LDD  R30,Y+20
000392 30e0      	CPI  R30,0
000393 f4b9      	BRNE _0x2000097
                 _0x2000098:
000394 3030      	CPI  R19,0
000395 f0a1      	BREQ _0x200009A
000396 ff03      	SBRS R16,3
000397 c006      	RJMP _0x200009B
000398 85ee      	LDD  R30,Y+14
000399 85ff      	LDD  R31,Y+14+1
00039a 9125      	LPM  R18,Z+
00039b 87ee      	STD  Y+14,R30
00039c 87ff      	STD  Y+14+1,R31
00039d c005      	RJMP _0x200009C
                 _0x200009B:
00039e 85ae      	LDD  R26,Y+14
00039f 85bf      	LDD  R27,Y+14+1
0003a0 912d      	LD   R18,X+
0003a1 87ae      	STD  Y+14,R26
0003a2 87bf      	STD  Y+14+1,R27
                 _0x200009C:
0003a3 940e 0658 	CALL SUBOPT_0xF
0003a5 3050      	CPI  R21,0
0003a6 f009      	BREQ _0x200009D
0003a7 5051      	SUBI R21,LOW(1)
                 _0x200009D:
0003a8 5031      	SUBI R19,LOW(1)
0003a9 cfea      	RJMP _0x2000098
                 _0x200009A:
0003aa c051      	RJMP _0x200009E
                 _0x2000097:
                 _0x20000A0:
0003ab 940e 06aa 	CALL SUBOPT_0x1B
0003ad 940e 08cd 	CALL __DIVD21U
0003af 2f2e      	MOV  R18,R30
0003b0 302a      	CPI  R18,10
0003b1 f030      	BRLO _0x20000A2
0003b2 ff03      	SBRS R16,3
0003b3 c002      	RJMP _0x20000A3
0003b4 5c29      	SUBI R18,-LOW(55)
0003b5 c001      	RJMP _0x20000A4
                 _0x20000A3:
0003b6 5a29      	SUBI R18,-LOW(87)
                 _0x20000A4:
0003b7 c001      	RJMP _0x20000A5
                 _0x20000A2:
0003b8 5d20      	SUBI R18,-LOW(48)
                 _0x20000A5:
0003b9 fd04      	SBRC R16,4
0003ba c021      	RJMP _0x20000A7
0003bb 3321      	CPI  R18,49
0003bc f460      	BRSH _0x20000A9
                +
0003bd 89a8     +LDD R26 , Y + 16
0003be 89b9     +LDD R27 , Y + 16 + 1
0003bf 898a     +LDD R24 , Y + 16 + 2
0003c0 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
                +
0003c1 30a1     +CPI R26 , LOW ( 0x1 )
0003c2 e0e0     +LDI R30 , HIGH ( 0x1 )
0003c3 07be     +CPC R27 , R30
0003c4 e0e0     +LDI R30 , BYTE3 ( 0x1 )
0003c5 078e     +CPC R24 , R30
0003c6 e0e0     +LDI R30 , BYTE4 ( 0x1 )
0003c7 079e     +CPC R25 , R30
                 	__CPD2N 0x1
0003c8 f409      	BRNE _0x20000A8
                 _0x20000A9:
0003c9 c00b      	RJMP _0x20000AB
                 _0x20000A8:
0003ca 1743      	CP   R20,R19
0003cb f440      	BRSH _0x2000116
0003cc 1753      	CP   R21,R19
0003cd f010      	BRLO _0x20000AE
0003ce ff00      	SBRS R16,0
0003cf c001      	RJMP _0x20000AF
                 _0x20000AE:
0003d0 c010      	RJMP _0x20000AD
                 _0x20000AF:
0003d1 e220      	LDI  R18,LOW(32)
0003d2 ff07      	SBRS R16,7
0003d3 c008      	RJMP _0x20000B0
                 _0x2000116:
0003d4 e320      	LDI  R18,LOW(48)
                 _0x20000AB:
0003d5 6100      	ORI  R16,LOW(16)
0003d6 ff02      	SBRS R16,2
0003d7 c004      	RJMP _0x20000B1
0003d8 940e 0698 	CALL SUBOPT_0x1A
0003da f009      	BREQ _0x20000B2
0003db 5051      	SUBI R21,LOW(1)
                 _0x20000B2:
                 _0x20000B1:
                 _0x20000B0:
                 _0x20000A7:
0003dc 940e 0658 	CALL SUBOPT_0xF
0003de 3050      	CPI  R21,0
0003df f009      	BREQ _0x20000B3
0003e0 5051      	SUBI R21,LOW(1)
                 _0x20000B3:
                 _0x20000AD:
0003e1 5031      	SUBI R19,LOW(1)
0003e2 940e 06aa 	CALL SUBOPT_0x1B
0003e4 940e 08fe 	CALL __MODD21U
0003e6 940e 067a 	CALL SUBOPT_0x14
0003e8 89ec      	LDD  R30,Y+20
                +
0003e9 89a8     +LDD R26 , Y + 16
0003ea 89b9     +LDD R27 , Y + 16 + 1
0003eb 898a     +LDD R24 , Y + 16 + 2
0003ec 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
0003ed 27ff      	CLR  R31
0003ee 2766      	CLR  R22
0003ef 2777      	CLR  R23
0003f0 940e 08cd 	CALL __DIVD21U
0003f2 940e 0693 	CALL SUBOPT_0x19
                +
0003f4 89e8     +LDD R30 , Y + 16
0003f5 89f9     +LDD R31 , Y + 16 + 1
0003f6 896a     +LDD R22 , Y + 16 + 2
0003f7 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
0003f8 940e 093e 	CALL __CPD10
0003fa f009      	BREQ _0x20000A1
0003fb cfaf      	RJMP _0x20000A0
                 _0x20000A1:
                 _0x200009E:
0003fc ff00      	SBRS R16,0
0003fd c008      	RJMP _0x20000B4
                 _0x20000B5:
0003fe 3050      	CPI  R21,0
0003ff f031      	BREQ _0x20000B7
000400 5051      	SUBI R21,LOW(1)
000401 e2e0      	LDI  R30,LOW(32)
000402 93ea      	ST   -Y,R30
000403 940e 066d 	CALL SUBOPT_0x12
000405 cff8      	RJMP _0x20000B5
                 _0x20000B7:
                 _0x20000B4:
                 _0x20000B8:
                 _0x2000054:
                 _0x2000114:
000406 e010      	LDI  R17,LOW(0)
                 _0x2000035:
000407 ce0c      	RJMP _0x2000030
                 _0x2000032:
000408 81ae      	LDD  R26,Y+6
000409 81bf      	LDD  R27,Y+6+1
00040a 940e 090e 	CALL __GETW1P
00040c 940e 0949 	CALL __LOADLOCR6
00040e 96ef      	ADIW R28,63
00040f 966f      	ADIW R28,31
000410 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
000411 92ff      	PUSH R15
000412 2ef8      	MOV  R15,R24
000413 9726      	SBIW R28,6
000414 940e 0944 	CALL __SAVELOCR4
000416 940e 06b3 	CALL SUBOPT_0x1C
000418 9730      	SBIW R30,0
000419 f419      	BRNE _0x20000B9
00041a efef      	LDI  R30,LOW(65535)
00041b efff      	LDI  R31,HIGH(65535)
00041c c023      	RJMP _0x20C0005
                 _0x20000B9:
00041d 01de      	MOVW R26,R28
00041e 9616      	ADIW R26,6
00041f 940e 08a3 	CALL __ADDW2R15
000421 018d      	MOVW R16,R26
000422 940e 06b3 	CALL SUBOPT_0x1C
000424 83ee      	STD  Y+6,R30
000425 83ff      	STD  Y+6+1,R31
000426 e0e0      	LDI  R30,LOW(0)
000427 87e8      	STD  Y+8,R30
000428 87e9      	STD  Y+8+1,R30
000429 01de      	MOVW R26,R28
00042a 961a      	ADIW R26,10
00042b 940e 08a3 	CALL __ADDW2R15
00042d 940e 090e 	CALL __GETW1P
00042f 93fa      	ST   -Y,R31
000430 93ea      	ST   -Y,R30
000431 931a      	ST   -Y,R17
000432 930a      	ST   -Y,R16
000433 eeeb      	LDI  R30,LOW(_put_buff_G100)
000434 e0f0      	LDI  R31,HIGH(_put_buff_G100)
000435 93fa      	ST   -Y,R31
000436 93ea      	ST   -Y,R30
000437 01de      	MOVW R26,R28
000438 961a      	ADIW R26,10
000439 ddbd      	RCALL __print_G100
00043a 019f      	MOVW R18,R30
00043b 81ae      	LDD  R26,Y+6
00043c 81bf      	LDD  R27,Y+6+1
00043d e0e0      	LDI  R30,LOW(0)
00043e 93ec      	ST   X,R30
00043f 01f9      	MOVW R30,R18
                 _0x20C0005:
000440 940e 094b 	CALL __LOADLOCR4
000442 962a      	ADIW R28,10
000443 90ff      	POP  R15
000444 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G101:
                 ; .FSTART __lcd_write_nibble_G101
000445 93aa      	ST   -Y,R26
000446 b3eb      	IN   R30,0x1B
000447 70ef      	ANDI R30,LOW(0xF)
000448 2fae      	MOV  R26,R30
000449 81e8      	LD   R30,Y
00044a 7fe0      	ANDI R30,LOW(0xF0)
00044b 2bea      	OR   R30,R26
00044c bbeb      	OUT  0x1B,R30
                +
00044d e082     +LDI R24 , LOW ( 2 )
                +__DELAY_USB_LOOP :
00044e 958a     +DEC R24
00044f f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 2
000450 9ada      	SBI  0x1B,2
                +
000451 e082     +LDI R24 , LOW ( 2 )
                +__DELAY_USB_LOOP :
000452 958a     +DEC R24
000453 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 2
000454 98da      	CBI  0x1B,2
                +
000455 e082     +LDI R24 , LOW ( 2 )
                +__DELAY_USB_LOOP :
000456 958a     +DEC R24
000457 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 2
000458 c076      	RJMP _0x20C0004
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
000459 93aa      	ST   -Y,R26
00045a 81a8      	LD   R26,Y
00045b dfe9      	RCALL __lcd_write_nibble_G101
00045c 81e8          ld    r30,y
00045d 95e2          swap  r30
00045e 83e8          st    y,r30
00045f 81a8      	LD   R26,Y
000460 dfe4      	RCALL __lcd_write_nibble_G101
                +
000461 e181     +LDI R24 , LOW ( 17 )
                +__DELAY_USB_LOOP :
000462 958a     +DEC R24
000463 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 17
000464 c06a      	RJMP _0x20C0004
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
000465 93aa      	ST   -Y,R26
000466 81e8      	LD   R30,Y
000467 e0f0      	LDI  R31,0
000468 58ec      	SUBI R30,LOW(-__base_y_G101)
000469 4ffd      	SBCI R31,HIGH(-__base_y_G101)
00046a 81e0      	LD   R30,Z
00046b 81a9      	LDD  R26,Y+1
00046c 0fae      	ADD  R26,R30
00046d dfeb      	RCALL __lcd_write_data
00046e 8079      	LDD  R7,Y+1
00046f 8068      	LDD  R6,Y+0
000470 9622      	ADIW R28,2
000471 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
000472 e0a2      	LDI  R26,LOW(2)
000473 940e 06ba 	CALL SUBOPT_0x1D
000475 e0ac      	LDI  R26,LOW(12)
000476 dfe2      	RCALL __lcd_write_data
000477 e0a1      	LDI  R26,LOW(1)
000478 940e 06ba 	CALL SUBOPT_0x1D
00047a e0e0      	LDI  R30,LOW(0)
00047b 2e6e      	MOV  R6,R30
00047c 2e7e      	MOV  R7,R30
00047d 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
00047e 93aa      	ST   -Y,R26
00047f 81a8      	LD   R26,Y
000480 30aa      	CPI  R26,LOW(0xA)
000481 f011      	BREQ _0x2020005
000482 1479      	CP   R7,R9
000483 f048      	BRLO _0x2020004
                 _0x2020005:
000484 e0e0      	LDI  R30,LOW(0)
000485 93ea      	ST   -Y,R30
000486 9463      	INC  R6
000487 2da6      	MOV  R26,R6
000488 dfdc      	RCALL _lcd_gotoxy
000489 81a8      	LD   R26,Y
00048a 30aa      	CPI  R26,LOW(0xA)
00048b f409      	BRNE _0x2020007
00048c c042      	RJMP _0x20C0004
                 _0x2020007:
                 _0x2020004:
00048d 9473      	INC  R7
00048e 9ad8      	SBI  0x1B,0
00048f 81a8      	LD   R26,Y
000490 dfc8      	RCALL __lcd_write_data
000491 98d8      	CBI  0x1B,0
000492 c03c      	RJMP _0x20C0004
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
000493 93ba      	ST   -Y,R27
000494 93aa      	ST   -Y,R26
000495 931a      	ST   -Y,R17
                 _0x2020008:
000496 81a9      	LDD  R26,Y+1
000497 81ba      	LDD  R27,Y+1+1
000498 91ed      	LD   R30,X+
000499 83a9      	STD  Y+1,R26
00049a 83ba      	STD  Y+1+1,R27
00049b 2f1e      	MOV  R17,R30
00049c 30e0      	CPI  R30,0
00049d f019      	BREQ _0x202000A
00049e 2fa1      	MOV  R26,R17
00049f dfde      	RCALL _lcd_putchar
0004a0 cff5      	RJMP _0x2020008
                 _0x202000A:
0004a1 8118      	LDD  R17,Y+0
0004a2 9623      	ADIW R28,3
0004a3 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
0004a4 93aa      	ST   -Y,R26
0004a5 b3ea      	IN   R30,0x1A
0004a6 6fe0      	ORI  R30,LOW(0xF0)
0004a7 bbea      	OUT  0x1A,R30
0004a8 9ad2      	SBI  0x1A,2
0004a9 9ad0      	SBI  0x1A,0
0004aa 9ad1      	SBI  0x1A,1
0004ab 98da      	CBI  0x1B,2
0004ac 98d8      	CBI  0x1B,0
0004ad 98d9      	CBI  0x1B,1
0004ae 8098      	LDD  R9,Y+0
0004af 81e8      	LD   R30,Y
0004b0 58e0      	SUBI R30,-LOW(128)
                +
0004b1 93e0 0276+STS __base_y_G101 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G101,2
0004b3 81e8      	LD   R30,Y
0004b4 54e0      	SUBI R30,-LOW(192)
                +
0004b5 93e0 0277+STS __base_y_G101 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G101,3
0004b7 e1a4      	LDI  R26,LOW(20)
0004b8 e0b0      	LDI  R27,0
0004b9 940e 06f0 	CALL _delay_ms
0004bb 940e 06c0 	CALL SUBOPT_0x1E
0004bd 940e 06c0 	CALL SUBOPT_0x1E
0004bf 940e 06c0 	CALL SUBOPT_0x1E
0004c1 e2a0      	LDI  R26,LOW(32)
0004c2 df82      	RCALL __lcd_write_nibble_G101
                +
0004c3 e281     +LDI R24 , LOW ( 33 )
                +__DELAY_USB_LOOP :
0004c4 958a     +DEC R24
0004c5 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 33
0004c6 e2a8      	LDI  R26,LOW(40)
0004c7 df91      	RCALL __lcd_write_data
0004c8 e0a4      	LDI  R26,LOW(4)
0004c9 df8f      	RCALL __lcd_write_data
0004ca e8a5      	LDI  R26,LOW(133)
0004cb df8d      	RCALL __lcd_write_data
0004cc e0a6      	LDI  R26,LOW(6)
0004cd df8b      	RCALL __lcd_write_data
0004ce dfa3      	RCALL _lcd_clear
                 _0x20C0004:
0004cf 9621      	ADIW R28,1
0004d0 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strcpyf:
                 ; .FSTART _strcpyf
0004d1 93ba      	ST   -Y,R27
0004d2 93aa      	ST   -Y,R26
0004d3 91e9          ld   r30,y+
0004d4 91f9          ld   r31,y+
0004d5 91a9          ld   r26,y+
0004d6 91b9          ld   r27,y+
0004d7 01cd          movw r24,r26
                 strcpyf0:
0004d8 9005      	lpm  r0,z+
0004d9 920d          st   x+,r0
0004da 2000          tst  r0
0004db f7e1          brne strcpyf0
0004dc 01fc          movw r30,r24
0004dd 9508          ret
                 ; .FEND
                 _strlen:
                 ; .FSTART _strlen
0004de 93ba      	ST   -Y,R27
0004df 93aa      	ST   -Y,R26
0004e0 91a9          ld   r26,y+
0004e1 91b9          ld   r27,y+
0004e2 27ee          clr  r30
0004e3 27ff          clr  r31
                 strlen0:
0004e4 916d          ld   r22,x+
0004e5 2366          tst  r22
0004e6 f011          breq strlen1
0004e7 9631          adiw r30,1
0004e8 cffb          rjmp strlen0
                 strlen1:
0004e9 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
0004ea 93ba      	ST   -Y,R27
0004eb 93aa      	ST   -Y,R26
0004ec 27aa          clr  r26
0004ed 27bb          clr  r27
0004ee 91e9          ld   r30,y+
0004ef 91f9          ld   r31,y+
                 strlenf0:
0004f0 9005      	lpm  r0,z+
0004f1 2000          tst  r0
0004f2 f011          breq strlenf1
0004f3 9611          adiw r26,1
0004f4 cffb          rjmp strlenf0
                 strlenf1:
0004f5 01fd          movw r30,r26
0004f6 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 _ftrunc:
                 ; .FSTART _ftrunc
0004f7 940e 092c 	CALL __PUTPARD2
0004f9 817b         ldd  r23,y+3
0004fa 816a         ldd  r22,y+2
0004fb 81f9         ldd  r31,y+1
0004fc 81e8         ld   r30,y
0004fd fb77         bst  r23,7
0004fe 0f77         lsl  r23
0004ff fd67         sbrc r22,7
000500 6071         sbr  r23,1
000501 2f97         mov  r25,r23
000502 579e         subi r25,0x7e
000503 f081         breq __ftrunc0
000504 f078         brcs __ftrunc0
000505 3198         cpi  r25,24
000506 f490         brsh __ftrunc1
000507 27aa         clr  r26
000508 27bb         clr  r27
000509 2788         clr  r24
                 __ftrunc2:
00050a 9408         sec
00050b 9587         ror  r24
00050c 95b7         ror  r27
00050d 95a7         ror  r26
00050e 959a         dec  r25
00050f f7d1         brne __ftrunc2
000510 23ea         and  r30,r26
000511 23fb         and  r31,r27
000512 2368         and  r22,r24
000513 c005         rjmp __ftrunc1
                 __ftrunc0:
000514 94e8         clt
000515 2777         clr  r23
000516 27ee         clr  r30
000517 27ff         clr  r31
000518 2766         clr  r22
                 __ftrunc1:
000519 776f         cbr  r22,0x80
00051a 9576         lsr  r23
00051b f408         brcc __ftrunc3
00051c 6860         sbr  r22,0x80
                 __ftrunc3:
00051d f977         bld  r23,7
00051e 91a9         ld   r26,y+
00051f 91b9         ld   r27,y+
000520 9189         ld   r24,y+
000521 9199         ld   r25,y+
000522 17ea         cp   r30,r26
000523 07fb         cpc  r31,r27
000524 0768         cpc  r22,r24
000525 0779         cpc  r23,r25
000526 fb97         bst  r25,7
000527 9508         ret
                 ; .FEND
                 _floor:
                 ; .FSTART _floor
000528 940e 092c 	CALL __PUTPARD2
00052a 940e 091d 	CALL __GETD2S0
00052c 940e 04f7 	CALL _ftrunc
00052e 940e 0922 	CALL __PUTD1S0
000530 f419          brne __floor1
                 __floor0:
000531 940e 0918 	CALL __GETD1S0
000533 c009      	RJMP _0x20C0003
                 __floor1:
000534 f7e6          brtc __floor0
000535 940e 0918 	CALL __GETD1S0
                +
000537 e0a0     +LDI R26 , LOW ( 0x3F800000 )
000538 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
000539 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
00053a e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
00053b 940e 0799 	CALL __SUBF12
                 _0x20C0003:
00053d 9624      	ADIW R28,4
00053e 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _ftoa:
                 ; .FSTART _ftoa
00053f d0b5      	RCALL SUBOPT_0x2
000540 e0e0      	LDI  R30,LOW(0)
000541 83ea      	STD  Y+2,R30
000542 e3ef      	LDI  R30,LOW(63)
000543 83eb      	STD  Y+3,R30
000544 931a      	ST   -Y,R17
000545 930a      	ST   -Y,R16
000546 85eb      	LDD  R30,Y+11
000547 85fc      	LDD  R31,Y+11+1
000548 3fef      	CPI  R30,LOW(0xFFFF)
000549 efaf      	LDI  R26,HIGH(0xFFFF)
00054a 07fa      	CPC  R31,R26
00054b f431      	BRNE _0x20A000D
00054c d17a      	RCALL SUBOPT_0x1F
                +
00054d e6a4     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 0 ) )
00054e e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 0 ) )
                 	__POINTW2FN _0x20A0000,0
00054f 940e 04d1 	CALL _strcpyf
000551 c08a      	RJMP _0x20C0002
                 _0x20A000D:
000552 3fef      	CPI  R30,LOW(0x7FFF)
000553 e7af      	LDI  R26,HIGH(0x7FFF)
000554 07fa      	CPC  R31,R26
000555 f431      	BRNE _0x20A000C
000556 d170      	RCALL SUBOPT_0x1F
                +
000557 e6a5     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 1 ) )
000558 e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 1 ) )
                 	__POINTW2FN _0x20A0000,1
000559 940e 04d1 	CALL _strcpyf
00055b c080      	RJMP _0x20C0002
                 _0x20A000C:
00055c 85ac      	LDD  R26,Y+12
00055d 23aa      	TST  R26
00055e f452      	BRPL _0x20A000F
                +
00055f 85e9     +LDD R30 , Y + 9
000560 85fa     +LDD R31 , Y + 9 + 1
000561 856b     +LDD R22 , Y + 9 + 2
000562 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000563 940e 06fa 	CALL __ANEGF1
000565 d166      	RCALL SUBOPT_0x20
000566 d16a      	RCALL SUBOPT_0x21
000567 e2ed      	LDI  R30,LOW(45)
000568 93ec      	ST   X,R30
                 _0x20A000F:
000569 85a8      	LDD  R26,Y+8
00056a 30a7      	CPI  R26,LOW(0x7)
00056b f010      	BRLO _0x20A0010
00056c e0e6      	LDI  R30,LOW(6)
00056d 87e8      	STD  Y+8,R30
                 _0x20A0010:
00056e 8518      	LDD  R17,Y+8
                 _0x20A0011:
00056f 2fe1      	MOV  R30,R17
000570 5011      	SUBI R17,1
000571 30e0      	CPI  R30,0
000572 f021      	BREQ _0x20A0013
000573 d164      	RCALL SUBOPT_0x22
000574 d0c5      	RCALL SUBOPT_0xA
000575 d167      	RCALL SUBOPT_0x23
000576 cff8      	RJMP _0x20A0011
                 _0x20A0013:
000577 d16a      	RCALL SUBOPT_0x24
000578 940e 07a0 	CALL __ADDF12
00057a d151      	RCALL SUBOPT_0x20
00057b e010      	LDI  R17,LOW(0)
                +
00057c e0e0     +LDI R30 , LOW ( 0x3F800000 )
00057d e0f0     +LDI R31 , HIGH ( 0x3F800000 )
00057e e860     +LDI R22 , BYTE3 ( 0x3F800000 )
00057f e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
000580 d15c      	RCALL SUBOPT_0x23
                 _0x20A0014:
000581 d160      	RCALL SUBOPT_0x24
000582 940e 0883 	CALL __CMPF12
000584 f068      	BRLO _0x20A0016
000585 d152      	RCALL SUBOPT_0x22
000586 d0a0      	RCALL SUBOPT_0x7
000587 d155      	RCALL SUBOPT_0x23
000588 5f1f      	SUBI R17,-LOW(1)
000589 3217      	CPI  R17,39
00058a f030      	BRLO _0x20A0017
00058b d13b      	RCALL SUBOPT_0x1F
                +
00058c e6a9     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 5 ) )
00058d e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 5 ) )
                 	__POINTW2FN _0x20A0000,5
00058e 940e 04d1 	CALL _strcpyf
000590 c04b      	RJMP _0x20C0002
                 _0x20A0017:
000591 cfef      	RJMP _0x20A0014
                 _0x20A0016:
000592 3010      	CPI  R17,0
000593 f421      	BRNE _0x20A0018
000594 d13c      	RCALL SUBOPT_0x21
000595 e3e0      	LDI  R30,LOW(48)
000596 93ec      	ST   X,R30
000597 c020      	RJMP _0x20A0019
                 _0x20A0018:
                 _0x20A001A:
000598 2fe1      	MOV  R30,R17
000599 5011      	SUBI R17,1
00059a 30e0      	CPI  R30,0
00059b f0e1      	BREQ _0x20A001C
00059c d13b      	RCALL SUBOPT_0x22
00059d d09c      	RCALL SUBOPT_0xA
00059e d094      	RCALL SUBOPT_0x9
00059f 01df      	MOVW R26,R30
0005a0 01cb      	MOVW R24,R22
0005a1 940e 0528 	CALL _floor
0005a3 d139      	RCALL SUBOPT_0x23
0005a4 d13d      	RCALL SUBOPT_0x24
0005a5 940e 083e 	CALL __DIVF21
0005a7 940e 072d 	CALL __CFD1U
0005a9 2f0e      	MOV  R16,R30
0005aa d126      	RCALL SUBOPT_0x21
0005ab d09c      	RCALL SUBOPT_0xC
0005ac e0f0      	LDI  R31,0
0005ad d12a      	RCALL SUBOPT_0x22
0005ae 940e 08b5 	CALL __CWD1
0005b0 940e 0766 	CALL __CDF1
0005b2 940e 07f0 	CALL __MULF12
0005b4 d136      	RCALL SUBOPT_0x25
0005b5 d097      	RCALL SUBOPT_0xD
0005b6 d115      	RCALL SUBOPT_0x20
0005b7 cfe0      	RJMP _0x20A001A
                 _0x20A001C:
                 _0x20A0019:
0005b8 85e8      	LDD  R30,Y+8
0005b9 30e0      	CPI  R30,0
0005ba f0e9      	BREQ _0x20C0001
0005bb d115      	RCALL SUBOPT_0x21
0005bc e2ee      	LDI  R30,LOW(46)
0005bd 93ec      	ST   X,R30
                 _0x20A001E:
0005be 85e8      	LDD  R30,Y+8
0005bf 50e1      	SUBI R30,LOW(1)
0005c0 87e8      	STD  Y+8,R30
0005c1 5fef      	SUBI R30,-LOW(1)
0005c2 f0a9      	BREQ _0x20A0020
0005c3 d127      	RCALL SUBOPT_0x25
0005c4 d062      	RCALL SUBOPT_0x7
0005c5 d106      	RCALL SUBOPT_0x20
                +
0005c6 85e9     +LDD R30 , Y + 9
0005c7 85fa     +LDD R31 , Y + 9 + 1
0005c8 856b     +LDD R22 , Y + 9 + 2
0005c9 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
0005ca 940e 072d 	CALL __CFD1U
0005cc 2f0e      	MOV  R16,R30
0005cd d103      	RCALL SUBOPT_0x21
0005ce d079      	RCALL SUBOPT_0xC
0005cf e0f0      	LDI  R31,0
0005d0 d11a      	RCALL SUBOPT_0x25
0005d1 940e 08b5 	CALL __CWD1
0005d3 940e 0766 	CALL __CDF1
0005d5 d077      	RCALL SUBOPT_0xD
0005d6 d0f5      	RCALL SUBOPT_0x20
0005d7 cfe6      	RJMP _0x20A001E
                 _0x20A0020:
                 _0x20C0001:
0005d8 81ae      	LDD  R26,Y+6
0005d9 81bf      	LDD  R27,Y+6+1
0005da e0e0      	LDI  R30,LOW(0)
0005db 93ec      	ST   X,R30
                 _0x20C0002:
0005dc 8119      	LDD  R17,Y+1
0005dd 8108      	LDD  R16,Y+0
0005de 962d      	ADIW R28,13
0005df 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _t:
000260           	.BYTE 0x10
                 _v:
000270           	.BYTE 0x4
                 __base_y_G101:
000274           	.BYTE 0x4
                 __seed_G105:
000278           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x0:
0005e0 91a0 0270 	LDS  R26,_v
0005e2 91b0 0271 	LDS  R27,_v+1
0005e4 9180 0272 	LDS  R24,_v+2
0005e6 9190 0273 	LDS  R25,_v+3
                +
0005e8 e0e0     +LDI R30 , LOW ( 0x41E80000 )
0005e9 e0f0     +LDI R31 , HIGH ( 0x41E80000 )
0005ea ee68     +LDI R22 , BYTE3 ( 0x41E80000 )
0005eb e471     +LDI R23 , BYTE4 ( 0x41E80000 )
                 	__GETD1N 0x41E80000
0005ec 940e 0883 	CALL __CMPF12
0005ee 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1:
0005ef 91ed      	LD   R30,X+
0005f0 91fd      	LD   R31,X+
0005f1 9631      	ADIW R30,1
0005f2 93fe      	ST   -X,R31
0005f3 93ee      	ST   -X,R30
0005f4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x2:
0005f5 93ba      	ST   -Y,R27
0005f6 93aa      	ST   -Y,R26
0005f7 9724      	SBIW R28,4
0005f8 e0e0      	LDI  R30,LOW(0)
0005f9 83e8      	ST   Y,R30
0005fa 83e9      	STD  Y+1,R30
0005fb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x3:
                +
0005fc 81ac     +LDD R26 , Y + 4
0005fd 81bd     +LDD R27 , Y + 4 + 1
0005fe 818e     +LDD R24 , Y + 4 + 2
0005ff 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
000600 e0e0     +LDI R30 , LOW ( 0x41200000 )
000601 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000602 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000603 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000604 940e 07f0 	CALL __MULF12
                +
000606 83ec     +STD Y + 4 , R30
000607 83fd     +STD Y + 4 + 1 , R31
000608 836e     +STD Y + 4 + 2 , R22
000609 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
00060a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x4:
                +
00060b 81ec     +LDD R30 , Y + 4
00060c 81fd     +LDD R31 , Y + 4 + 1
00060d 816e     +LDD R22 , Y + 4 + 2
00060e 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
00060f 85ac     +LDD R26 , Y + 12
000610 85bd     +LDD R27 , Y + 12 + 1
000611 858e     +LDD R24 , Y + 12 + 2
000612 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000613 940e 0883 	CALL __CMPF12
000615 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x5:
                +
000616 85ac     +LDD R26 , Y + 12
000617 85bd     +LDD R27 , Y + 12 + 1
000618 858e     +LDD R24 , Y + 12 + 2
000619 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
00061a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x6:
                +
00061b eced     +LDI R30 , LOW ( 0x3DCCCCCD )
00061c ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
00061d ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
00061e e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
00061f 940e 07f0 	CALL __MULF12
                +
000621 87ec     +STD Y + 12 , R30
000622 87fd     +STD Y + 12 + 1 , R31
000623 876e     +STD Y + 12 + 2 , R22
000624 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000625 5f3f      	SUBI R19,-LOW(1)
000626 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x7:
                +
000627 e0e0     +LDI R30 , LOW ( 0x41200000 )
000628 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000629 e260     +LDI R22 , BYTE3 ( 0x41200000 )
00062a e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
00062b 940e 07f0 	CALL __MULF12
00062d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x8:
                +
00062e 87ec     +STD Y + 12 , R30
00062f 87fd     +STD Y + 12 + 1 , R31
000630 876e     +STD Y + 12 + 2 , R22
000631 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000632 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x9:
                +
000633 e0a0     +LDI R26 , LOW ( 0x3F000000 )
000634 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
000635 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
000636 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
000637 940e 07a0 	CALL __ADDF12
000639 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xA:
                +
00063a eced     +LDI R30 , LOW ( 0x3DCCCCCD )
00063b ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
00063c ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
00063d e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
00063e 940e 07f0 	CALL __MULF12
000640 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xB:
000641 85a8      	LDD  R26,Y+8
000642 85b9      	LDD  R27,Y+8+1
000643 9611      	ADIW R26,1
000644 87a8      	STD  Y+8,R26
000645 87b9      	STD  Y+8+1,R27
000646 9711      	SBIW R26,1
000647 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xC:
000648 2fe0      	MOV  R30,R16
000649 5de0      	SUBI R30,-LOW(48)
00064a 93ec      	ST   X,R30
00064b 2fe0      	MOV  R30,R16
00064c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xD:
00064d 940e 0931 	CALL __SWAPD12
00064f 940e 0799 	CALL __SUBF12
000651 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0xE:
000652 85e8      	LDD  R30,Y+8
000653 85f9      	LDD  R31,Y+8+1
000654 9631      	ADIW R30,1
000655 87e8      	STD  Y+8,R30
000656 87f9      	STD  Y+8+1,R31
000657 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0xF:
000658 932a      	ST   -Y,R18
000659 81af      	LDD  R26,Y+7
00065a 85b8      	LDD  R27,Y+7+1
00065b 85e9      	LDD  R30,Y+9
00065c 85fa      	LDD  R31,Y+9+1
00065d 9509      	ICALL
00065e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x10:
                +
00065f 01fe     +MOVW R30 , R28
000660 5ae6     +SUBI R30 , LOW ( - 90 )
000661 4fff     +SBCI R31 , HIGH ( - 90 )
000662 9001     +LD R0 , Z +
000663 81f0     +LD R31 , Z
000664 2de0     +MOV R30 , R0
                 	__GETW1SX 90
000665 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x11:
000666 9734      	SBIW R30,4
                +
000667 01de     +MOVW R26 , R28
000668 5aa6     +SUBI R26 , LOW ( - 90 )
000669 4fbf     +SBCI R27 , HIGH ( - 90 )
00066a 93ed     +ST X + , R30
00066b 93fc     +ST X , R31
                 	__PUTW1SX 90
00066c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x12:
00066d 81af      	LDD  R26,Y+7
00066e 85b8      	LDD  R27,Y+7+1
00066f 85e9      	LDD  R30,Y+9
000670 85fa      	LDD  R31,Y+9+1
000671 9509      	ICALL
000672 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x13:
                +
000673 01de     +MOVW R26 , R28
000674 5aa6     +SUBI R26 , LOW ( - 90 )
000675 4fbf     +SBCI R27 , HIGH ( - 90 )
000676 900d     +LD R0 , X +
000677 91bc     +LD R27 , X
000678 2da0     +MOV R26 , R0
                 	__GETW2SX 90
000679 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x14:
                +
00067a 87ea     +STD Y + 10 , R30
00067b 87fb     +STD Y + 10 + 1 , R31
00067c 876c     +STD Y + 10 + 2 , R22
00067d 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
00067e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x15:
00067f dfdf      	RCALL SUBOPT_0x10
000680 cfe5      	RJMP SUBOPT_0x11
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x16:
                +
000681 85ea     +LDD R30 , Y + 10
000682 85fb     +LDD R31 , Y + 10 + 1
000683 856c     +LDD R22 , Y + 10 + 2
000684 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
000685 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x17:
000686 87ee      	STD  Y+14,R30
000687 87ff      	STD  Y+14+1,R31
000688 85ae      	LDD  R26,Y+14
000689 85bf      	LDD  R27,Y+14+1
00068a 940e 04de 	CALL _strlen
00068c 2f1e      	MOV  R17,R30
00068d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x18:
00068e dfe4      	RCALL SUBOPT_0x13
00068f 9614      	ADIW R26,4
000690 940e 090e 	CALL __GETW1P
000692 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x19:
                +
000693 8be8     +STD Y + 16 , R30
000694 8bf9     +STD Y + 16 + 1 , R31
000695 8b6a     +STD Y + 16 + 2 , R22
000696 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
000697 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x1A:
000698 7f0b      	ANDI R16,LOW(251)
000699 89ed      	LDD  R30,Y+21
00069a 93ea      	ST   -Y,R30
                +
00069b 01de     +MOVW R26 , R28
00069c 5aa9     +SUBI R26 , LOW ( - 87 )
00069d 4fbf     +SBCI R27 , HIGH ( - 87 )
00069e 900d     +LD R0 , X +
00069f 91bc     +LD R27 , X
0006a0 2da0     +MOV R26 , R0
                 	__GETW2SX 87
                +
0006a1 01fe     +MOVW R30 , R28
0006a2 5ae7     +SUBI R30 , LOW ( - 89 )
0006a3 4fff     +SBCI R31 , HIGH ( - 89 )
0006a4 9001     +LD R0 , Z +
0006a5 81f0     +LD R31 , Z
0006a6 2de0     +MOV R30 , R0
                 	__GETW1SX 89
0006a7 9509      	ICALL
0006a8 3050      	CPI  R21,0
0006a9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1B:
                +
0006aa 89e8     +LDD R30 , Y + 16
0006ab 89f9     +LDD R31 , Y + 16 + 1
0006ac 896a     +LDD R22 , Y + 16 + 2
0006ad 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
0006ae 85aa     +LDD R26 , Y + 10
0006af 85bb     +LDD R27 , Y + 10 + 1
0006b0 858c     +LDD R24 , Y + 10 + 2
0006b1 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
0006b2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1C:
0006b3 01de      	MOVW R26,R28
0006b4 961c      	ADIW R26,12
0006b5 940e 08a3 	CALL __ADDW2R15
0006b7 940e 090e 	CALL __GETW1P
0006b9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1D:
0006ba 940e 0459 	CALL __lcd_write_data
0006bc e0a3      	LDI  R26,LOW(3)
0006bd e0b0      	LDI  R27,0
0006be 940c 06f0 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1E:
0006c0 e3a0      	LDI  R26,LOW(48)
0006c1 940e 0445 	CALL __lcd_write_nibble_G101
                +
0006c3 e281     +LDI R24 , LOW ( 33 )
                +__DELAY_USB_LOOP :
0006c4 958a     +DEC R24
0006c5 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 33
0006c6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1F:
0006c7 81ee      	LDD  R30,Y+6
0006c8 81ff      	LDD  R31,Y+6+1
0006c9 93fa      	ST   -Y,R31
0006ca 93ea      	ST   -Y,R30
0006cb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x20:
                +
0006cc 87e9     +STD Y + 9 , R30
0006cd 87fa     +STD Y + 9 + 1 , R31
0006ce 876b     +STD Y + 9 + 2 , R22
0006cf 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
0006d0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x21:
0006d1 81ae      	LDD  R26,Y+6
0006d2 81bf      	LDD  R27,Y+6+1
0006d3 9611      	ADIW R26,1
0006d4 83ae      	STD  Y+6,R26
0006d5 83bf      	STD  Y+6+1,R27
0006d6 9711      	SBIW R26,1
0006d7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x22:
                +
0006d8 81aa     +LDD R26 , Y + 2
0006d9 81bb     +LDD R27 , Y + 2 + 1
0006da 818c     +LDD R24 , Y + 2 + 2
0006db 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
0006dc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x23:
                +
0006dd 83ea     +STD Y + 2 , R30
0006de 83fb     +STD Y + 2 + 1 , R31
0006df 836c     +STD Y + 2 + 2 , R22
0006e0 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
0006e1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x24:
                +
0006e2 81ea     +LDD R30 , Y + 2
0006e3 81fb     +LDD R31 , Y + 2 + 1
0006e4 816c     +LDD R22 , Y + 2 + 2
0006e5 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
0006e6 85a9     +LDD R26 , Y + 9
0006e7 85ba     +LDD R27 , Y + 9 + 1
0006e8 858b     +LDD R24 , Y + 9 + 2
0006e9 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
0006ea 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x25:
                +
0006eb 85a9     +LDD R26 , Y + 9
0006ec 85ba     +LDD R27 , Y + 9 + 1
0006ed 858b     +LDD R24 , Y + 9 + 2
0006ee 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
0006ef 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
0006f0 9610      	adiw r26,0
0006f1 f039      	breq __delay_ms1
                 __delay_ms0:
                +
0006f2 ef8a     +LDI R24 , LOW ( 0xFA )
0006f3 e090     +LDI R25 , HIGH ( 0xFA )
                +__DELAY_USW_LOOP :
0006f4 9701     +SBIW R24 , 1
0006f5 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xFA
0006f6 95a8      	wdr
0006f7 9711      	sbiw r26,1
0006f8 f7c9      	brne __delay_ms0
                 __delay_ms1:
0006f9 9508      	ret
                 
                 __ANEGF1:
0006fa 9730      	SBIW R30,0
0006fb 4060      	SBCI R22,0
0006fc 4070      	SBCI R23,0
0006fd f009      	BREQ __ANEGF10
0006fe 5870      	SUBI R23,0x80
                 __ANEGF10:
0006ff 9508      	RET
                 
                 __ROUND_REPACK:
000700 2355      	TST  R21
000701 f442      	BRPL __REPACK
000702 3850      	CPI  R21,0x80
000703 f411      	BRNE __ROUND_REPACK0
000704 ffe0      	SBRS R30,0
000705 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
000706 9631      	ADIW R30,1
000707 1f69      	ADC  R22,R25
000708 1f79      	ADC  R23,R25
000709 f06b      	BRVS __REPACK1
                 
                 __REPACK:
00070a e850      	LDI  R21,0x80
00070b 2757      	EOR  R21,R23
00070c f411      	BRNE __REPACK0
00070d 935f      	PUSH R21
00070e c0cf      	RJMP __ZERORES
                 __REPACK0:
00070f 3f5f      	CPI  R21,0xFF
000710 f031      	BREQ __REPACK1
000711 0f66      	LSL  R22
000712 0c00      	LSL  R0
000713 9557      	ROR  R21
000714 9567      	ROR  R22
000715 2f75      	MOV  R23,R21
000716 9508      	RET
                 __REPACK1:
000717 935f      	PUSH R21
000718 2000      	TST  R0
000719 f00a      	BRMI __REPACK2
00071a c0cf      	RJMP __MAXRES
                 __REPACK2:
00071b c0c8      	RJMP __MINRES
                 
                 __UNPACK:
00071c e850      	LDI  R21,0x80
00071d 2e19      	MOV  R1,R25
00071e 2215      	AND  R1,R21
00071f 0f88      	LSL  R24
000720 1f99      	ROL  R25
000721 2795      	EOR  R25,R21
000722 0f55      	LSL  R21
000723 9587      	ROR  R24
                 
                 __UNPACK1:
000724 e850      	LDI  R21,0x80
000725 2e07      	MOV  R0,R23
000726 2205      	AND  R0,R21
000727 0f66      	LSL  R22
000728 1f77      	ROL  R23
000729 2775      	EOR  R23,R21
00072a 0f55      	LSL  R21
00072b 9567      	ROR  R22
00072c 9508      	RET
                 
                 __CFD1U:
00072d 9468      	SET
00072e c001      	RJMP __CFD1U0
                 __CFD1:
00072f 94e8      	CLT
                 __CFD1U0:
000730 935f      	PUSH R21
000731 dff2      	RCALL __UNPACK1
000732 3870      	CPI  R23,0x80
000733 f018      	BRLO __CFD10
000734 3f7f      	CPI  R23,0xFF
000735 f408      	BRCC __CFD10
000736 c0a7      	RJMP __ZERORES
                 __CFD10:
000737 e156      	LDI  R21,22
000738 1b57      	SUB  R21,R23
000739 f4aa      	BRPL __CFD11
00073a 9551      	NEG  R21
00073b 3058      	CPI  R21,8
00073c f40e      	BRTC __CFD19
00073d 3059      	CPI  R21,9
                 __CFD19:
00073e f030      	BRLO __CFD17
00073f efef      	SER  R30
000740 efff      	SER  R31
000741 ef6f      	SER  R22
000742 e77f      	LDI  R23,0x7F
000743 f977      	BLD  R23,7
000744 c01a      	RJMP __CFD15
                 __CFD17:
000745 2777      	CLR  R23
000746 2355      	TST  R21
000747 f0b9      	BREQ __CFD15
                 __CFD18:
000748 0fee      	LSL  R30
000749 1fff      	ROL  R31
00074a 1f66      	ROL  R22
00074b 1f77      	ROL  R23
00074c 955a      	DEC  R21
00074d f7d1      	BRNE __CFD18
00074e c010      	RJMP __CFD15
                 __CFD11:
00074f 2777      	CLR  R23
                 __CFD12:
000750 3058      	CPI  R21,8
000751 f028      	BRLO __CFD13
000752 2fef      	MOV  R30,R31
000753 2ff6      	MOV  R31,R22
000754 2f67      	MOV  R22,R23
000755 5058      	SUBI R21,8
000756 cff9      	RJMP __CFD12
                 __CFD13:
000757 2355      	TST  R21
000758 f031      	BREQ __CFD15
                 __CFD14:
000759 9576      	LSR  R23
00075a 9567      	ROR  R22
00075b 95f7      	ROR  R31
00075c 95e7      	ROR  R30
00075d 955a      	DEC  R21
00075e f7d1      	BRNE __CFD14
                 __CFD15:
00075f 2000      	TST  R0
000760 f40a      	BRPL __CFD16
000761 d145      	RCALL __ANEGD1
                 __CFD16:
000762 915f      	POP  R21
000763 9508      	RET
                 
                 __CDF1U:
000764 9468      	SET
000765 c001      	RJMP __CDF1U0
                 __CDF1:
000766 94e8      	CLT
                 __CDF1U0:
000767 9730      	SBIW R30,0
000768 4060      	SBCI R22,0
000769 4070      	SBCI R23,0
00076a f0b1      	BREQ __CDF10
00076b 2400      	CLR  R0
00076c f026      	BRTS __CDF11
00076d 2377      	TST  R23
00076e f412      	BRPL __CDF11
00076f 9400      	COM  R0
000770 d136      	RCALL __ANEGD1
                 __CDF11:
000771 2e17      	MOV  R1,R23
000772 e17e      	LDI  R23,30
000773 2011      	TST  R1
                 __CDF12:
000774 f032      	BRMI __CDF13
000775 957a      	DEC  R23
000776 0fee      	LSL  R30
000777 1fff      	ROL  R31
000778 1f66      	ROL  R22
000779 1c11      	ROL  R1
00077a cff9      	RJMP __CDF12
                 __CDF13:
00077b 2fef      	MOV  R30,R31
00077c 2ff6      	MOV  R31,R22
00077d 2d61      	MOV  R22,R1
00077e 935f      	PUSH R21
00077f df8a      	RCALL __REPACK
000780 915f      	POP  R21
                 __CDF10:
000781 9508      	RET
                 
                 __SWAPACC:
000782 934f      	PUSH R20
000783 01af      	MOVW R20,R30
000784 01fd      	MOVW R30,R26
000785 01da      	MOVW R26,R20
000786 01ab      	MOVW R20,R22
000787 01bc      	MOVW R22,R24
000788 01ca      	MOVW R24,R20
000789 2d40      	MOV  R20,R0
00078a 2c01      	MOV  R0,R1
00078b 2e14      	MOV  R1,R20
00078c 914f      	POP  R20
00078d 9508      	RET
                 
                 __UADD12:
00078e 0fea      	ADD  R30,R26
00078f 1ffb      	ADC  R31,R27
000790 1f68      	ADC  R22,R24
000791 9508      	RET
                 
                 __NEGMAN1:
000792 95e0      	COM  R30
000793 95f0      	COM  R31
000794 9560      	COM  R22
000795 5fef      	SUBI R30,-1
000796 4fff      	SBCI R31,-1
000797 4f6f      	SBCI R22,-1
000798 9508      	RET
                 
                 __SUBF12:
000799 935f      	PUSH R21
00079a df81      	RCALL __UNPACK
00079b 3890      	CPI  R25,0x80
00079c f171      	BREQ __ADDF129
00079d e850      	LDI  R21,0x80
00079e 2615      	EOR  R1,R21
                 
00079f c004      	RJMP __ADDF120
                 
                 __ADDF12:
0007a0 935f      	PUSH R21
0007a1 df7a      	RCALL __UNPACK
0007a2 3890      	CPI  R25,0x80
0007a3 f139      	BREQ __ADDF129
                 
                 __ADDF120:
0007a4 3870      	CPI  R23,0x80
0007a5 f121      	BREQ __ADDF128
                 __ADDF121:
0007a6 2f57      	MOV  R21,R23
0007a7 1b59      	SUB  R21,R25
0007a8 f12b      	BRVS __ADDF1211
0007a9 f412      	BRPL __ADDF122
0007aa dfd7      	RCALL __SWAPACC
0007ab cffa      	RJMP __ADDF121
                 __ADDF122:
0007ac 3158      	CPI  R21,24
0007ad f018      	BRLO __ADDF123
0007ae 27aa      	CLR  R26
0007af 27bb      	CLR  R27
0007b0 2788      	CLR  R24
                 __ADDF123:
0007b1 3058      	CPI  R21,8
0007b2 f028      	BRLO __ADDF124
0007b3 2fab      	MOV  R26,R27
0007b4 2fb8      	MOV  R27,R24
0007b5 2788      	CLR  R24
0007b6 5058      	SUBI R21,8
0007b7 cff9      	RJMP __ADDF123
                 __ADDF124:
0007b8 2355      	TST  R21
0007b9 f029      	BREQ __ADDF126
                 __ADDF125:
0007ba 9586      	LSR  R24
0007bb 95b7      	ROR  R27
0007bc 95a7      	ROR  R26
0007bd 955a      	DEC  R21
0007be f7d9      	BRNE __ADDF125
                 __ADDF126:
0007bf 2d50      	MOV  R21,R0
0007c0 2551      	EOR  R21,R1
0007c1 f072      	BRMI __ADDF127
0007c2 dfcb      	RCALL __UADD12
0007c3 f438      	BRCC __ADDF129
0007c4 9567      	ROR  R22
0007c5 95f7      	ROR  R31
0007c6 95e7      	ROR  R30
0007c7 9573      	INC  R23
0007c8 f413      	BRVC __ADDF129
0007c9 c020      	RJMP __MAXRES
                 __ADDF128:
0007ca dfb7      	RCALL __SWAPACC
                 __ADDF129:
0007cb df3e      	RCALL __REPACK
0007cc 915f      	POP  R21
0007cd 9508      	RET
                 __ADDF1211:
0007ce f7d8      	BRCC __ADDF128
0007cf cffb      	RJMP __ADDF129
                 __ADDF127:
0007d0 1bea      	SUB  R30,R26
0007d1 0bfb      	SBC  R31,R27
0007d2 0b68      	SBC  R22,R24
0007d3 f051      	BREQ __ZERORES
0007d4 f410      	BRCC __ADDF1210
0007d5 9400      	COM  R0
0007d6 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
0007d7 2366      	TST  R22
0007d8 f392      	BRMI __ADDF129
0007d9 0fee      	LSL  R30
0007da 1fff      	ROL  R31
0007db 1f66      	ROL  R22
0007dc 957a      	DEC  R23
0007dd f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
0007de 27ee      	CLR  R30
0007df 27ff      	CLR  R31
0007e0 2766      	CLR  R22
0007e1 2777      	CLR  R23
0007e2 915f      	POP  R21
0007e3 9508      	RET
                 
                 __MINRES:
0007e4 efef      	SER  R30
0007e5 efff      	SER  R31
0007e6 e76f      	LDI  R22,0x7F
0007e7 ef7f      	SER  R23
0007e8 915f      	POP  R21
0007e9 9508      	RET
                 
                 __MAXRES:
0007ea efef      	SER  R30
0007eb efff      	SER  R31
0007ec e76f      	LDI  R22,0x7F
0007ed e77f      	LDI  R23,0x7F
0007ee 915f      	POP  R21
0007ef 9508      	RET
                 
                 __MULF12:
0007f0 935f      	PUSH R21
0007f1 df2a      	RCALL __UNPACK
0007f2 3870      	CPI  R23,0x80
0007f3 f351      	BREQ __ZERORES
0007f4 3890      	CPI  R25,0x80
0007f5 f341      	BREQ __ZERORES
0007f6 2401      	EOR  R0,R1
0007f7 9408      	SEC
0007f8 1f79      	ADC  R23,R25
0007f9 f423      	BRVC __MULF124
0007fa f31c      	BRLT __ZERORES
                 __MULF125:
0007fb 2000      	TST  R0
0007fc f33a      	BRMI __MINRES
0007fd cfec      	RJMP __MAXRES
                 __MULF124:
0007fe 920f      	PUSH R0
0007ff 931f      	PUSH R17
000800 932f      	PUSH R18
000801 933f      	PUSH R19
000802 934f      	PUSH R20
000803 2711      	CLR  R17
000804 2722      	CLR  R18
000805 2799      	CLR  R25
000806 9f68      	MUL  R22,R24
000807 01a0      	MOVW R20,R0
000808 9f8f      	MUL  R24,R31
000809 2d30      	MOV  R19,R0
00080a 0d41      	ADD  R20,R1
00080b 1f59      	ADC  R21,R25
00080c 9f6b      	MUL  R22,R27
00080d 0d30      	ADD  R19,R0
00080e 1d41      	ADC  R20,R1
00080f 1f59      	ADC  R21,R25
000810 9f8e      	MUL  R24,R30
000811 d027      	RCALL __MULF126
000812 9fbf      	MUL  R27,R31
000813 d025      	RCALL __MULF126
000814 9f6a      	MUL  R22,R26
000815 d023      	RCALL __MULF126
000816 9fbe      	MUL  R27,R30
000817 d01d      	RCALL __MULF127
000818 9faf      	MUL  R26,R31
000819 d01b      	RCALL __MULF127
00081a 9fae      	MUL  R26,R30
00081b 0d11      	ADD  R17,R1
00081c 1f29      	ADC  R18,R25
00081d 1f39      	ADC  R19,R25
00081e 1f49      	ADC  R20,R25
00081f 1f59      	ADC  R21,R25
000820 2fe3      	MOV  R30,R19
000821 2ff4      	MOV  R31,R20
000822 2f65      	MOV  R22,R21
000823 2f52      	MOV  R21,R18
000824 914f      	POP  R20
000825 913f      	POP  R19
000826 912f      	POP  R18
000827 911f      	POP  R17
000828 900f      	POP  R0
000829 2366      	TST  R22
00082a f02a      	BRMI __MULF122
00082b 0f55      	LSL  R21
00082c 1fee      	ROL  R30
00082d 1fff      	ROL  R31
00082e 1f66      	ROL  R22
00082f c002      	RJMP __MULF123
                 __MULF122:
000830 9573      	INC  R23
000831 f24b      	BRVS __MULF125
                 __MULF123:
000832 decd      	RCALL __ROUND_REPACK
000833 915f      	POP  R21
000834 9508      	RET
                 
                 __MULF127:
000835 0d10      	ADD  R17,R0
000836 1d21      	ADC  R18,R1
000837 1f39      	ADC  R19,R25
000838 c002      	RJMP __MULF128
                 __MULF126:
000839 0d20      	ADD  R18,R0
00083a 1d31      	ADC  R19,R1
                 __MULF128:
00083b 1f49      	ADC  R20,R25
00083c 1f59      	ADC  R21,R25
00083d 9508      	RET
                 
                 __DIVF21:
00083e 935f      	PUSH R21
00083f dedc      	RCALL __UNPACK
000840 3870      	CPI  R23,0x80
000841 f421      	BRNE __DIVF210
000842 2011      	TST  R1
                 __DIVF211:
000843 f40a      	BRPL __DIVF219
000844 cf9f      	RJMP __MINRES
                 __DIVF219:
000845 cfa4      	RJMP __MAXRES
                 __DIVF210:
000846 3890      	CPI  R25,0x80
000847 f409      	BRNE __DIVF218
                 __DIVF217:
000848 cf95      	RJMP __ZERORES
                 __DIVF218:
000849 2401      	EOR  R0,R1
00084a 9408      	SEC
00084b 0b97      	SBC  R25,R23
00084c f41b      	BRVC __DIVF216
00084d f3d4      	BRLT __DIVF217
00084e 2000      	TST  R0
00084f cff3      	RJMP __DIVF211
                 __DIVF216:
000850 2f79      	MOV  R23,R25
000851 931f      	PUSH R17
000852 932f      	PUSH R18
000853 933f      	PUSH R19
000854 934f      	PUSH R20
000855 2411      	CLR  R1
000856 2711      	CLR  R17
000857 2722      	CLR  R18
000858 2733      	CLR  R19
000859 2744      	CLR  R20
00085a 2755      	CLR  R21
00085b e290      	LDI  R25,32
                 __DIVF212:
00085c 17ae      	CP   R26,R30
00085d 07bf      	CPC  R27,R31
00085e 0786      	CPC  R24,R22
00085f 0741      	CPC  R20,R17
000860 f030      	BRLO __DIVF213
000861 1bae      	SUB  R26,R30
000862 0bbf      	SBC  R27,R31
000863 0b86      	SBC  R24,R22
000864 0b41      	SBC  R20,R17
000865 9408      	SEC
000866 c001      	RJMP __DIVF214
                 __DIVF213:
000867 9488      	CLC
                 __DIVF214:
000868 1f55      	ROL  R21
000869 1f22      	ROL  R18
00086a 1f33      	ROL  R19
00086b 1c11      	ROL  R1
00086c 1faa      	ROL  R26
00086d 1fbb      	ROL  R27
00086e 1f88      	ROL  R24
00086f 1f44      	ROL  R20
000870 959a      	DEC  R25
000871 f751      	BRNE __DIVF212
000872 01f9      	MOVW R30,R18
000873 2d61      	MOV  R22,R1
000874 914f      	POP  R20
000875 913f      	POP  R19
000876 912f      	POP  R18
000877 911f      	POP  R17
000878 2366      	TST  R22
000879 f032      	BRMI __DIVF215
00087a 0f55      	LSL  R21
00087b 1fee      	ROL  R30
00087c 1fff      	ROL  R31
00087d 1f66      	ROL  R22
00087e 957a      	DEC  R23
00087f f243      	BRVS __DIVF217
                 __DIVF215:
000880 de7f      	RCALL __ROUND_REPACK
000881 915f      	POP  R21
000882 9508      	RET
                 
                 __CMPF12:
000883 2399      	TST  R25
000884 f09a      	BRMI __CMPF120
000885 2377      	TST  R23
000886 f042      	BRMI __CMPF121
000887 1797      	CP   R25,R23
000888 f048      	BRLO __CMPF122
000889 f429      	BRNE __CMPF121
00088a 17ae      	CP   R26,R30
00088b 07bf      	CPC  R27,R31
00088c 0786      	CPC  R24,R22
00088d f020      	BRLO __CMPF122
00088e f031      	BREQ __CMPF123
                 __CMPF121:
00088f 9498      	CLZ
000890 9488      	CLC
000891 9508      	RET
                 __CMPF122:
000892 9498      	CLZ
000893 9408      	SEC
000894 9508      	RET
                 __CMPF123:
000895 9418      	SEZ
000896 9488      	CLC
000897 9508      	RET
                 __CMPF120:
000898 2377      	TST  R23
000899 f7c2      	BRPL __CMPF122
00089a 1797      	CP   R25,R23
00089b f398      	BRLO __CMPF121
00089c f7a9      	BRNE __CMPF122
00089d 17ea      	CP   R30,R26
00089e 07fb      	CPC  R31,R27
00089f 0768      	CPC  R22,R24
0008a0 f388      	BRLO __CMPF122
0008a1 f399      	BREQ __CMPF123
0008a2 cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
0008a3 2400      	CLR  R0
0008a4 0daf      	ADD  R26,R15
0008a5 1db0      	ADC  R27,R0
0008a6 9508      	RET
                 
                 __ANEGD1:
0008a7 95f0      	COM  R31
0008a8 9560      	COM  R22
0008a9 9570      	COM  R23
0008aa 95e1      	NEG  R30
0008ab 4fff      	SBCI R31,-1
0008ac 4f6f      	SBCI R22,-1
0008ad 4f7f      	SBCI R23,-1
0008ae 9508      	RET
                 
                 __CBD1:
0008af 2ffe      	MOV  R31,R30
0008b0 0fff      	ADD  R31,R31
0008b1 0bff      	SBC  R31,R31
0008b2 2f6f      	MOV  R22,R31
0008b3 2f7f      	MOV  R23,R31
0008b4 9508      	RET
                 
                 __CWD1:
0008b5 2f6f      	MOV  R22,R31
0008b6 0f66      	ADD  R22,R22
0008b7 0b66      	SBC  R22,R22
0008b8 2f76      	MOV  R23,R22
0008b9 9508      	RET
                 
                 __DIVB21U:
0008ba 2400      	CLR  R0
0008bb e098      	LDI  R25,8
                 __DIVB21U1:
0008bc 0faa      	LSL  R26
0008bd 1c00      	ROL  R0
0008be 1a0e      	SUB  R0,R30
0008bf f410      	BRCC __DIVB21U2
0008c0 0e0e      	ADD  R0,R30
0008c1 c001      	RJMP __DIVB21U3
                 __DIVB21U2:
0008c2 60a1      	SBR  R26,1
                 __DIVB21U3:
0008c3 959a      	DEC  R25
0008c4 f7b9      	BRNE __DIVB21U1
0008c5 2fea      	MOV  R30,R26
0008c6 2da0      	MOV  R26,R0
0008c7 9508      	RET
                 
                 __DIVB21:
0008c8 d039      	RCALL __CHKSIGNB
0008c9 dff0      	RCALL __DIVB21U
0008ca f40e      	BRTC __DIVB211
0008cb 95e1      	NEG  R30
                 __DIVB211:
0008cc 9508      	RET
                 
                 __DIVD21U:
0008cd 933f      	PUSH R19
0008ce 934f      	PUSH R20
0008cf 935f      	PUSH R21
0008d0 2400      	CLR  R0
0008d1 2411      	CLR  R1
0008d2 2744      	CLR  R20
0008d3 2755      	CLR  R21
0008d4 e230      	LDI  R19,32
                 __DIVD21U1:
0008d5 0faa      	LSL  R26
0008d6 1fbb      	ROL  R27
0008d7 1f88      	ROL  R24
0008d8 1f99      	ROL  R25
0008d9 1c00      	ROL  R0
0008da 1c11      	ROL  R1
0008db 1f44      	ROL  R20
0008dc 1f55      	ROL  R21
0008dd 1a0e      	SUB  R0,R30
0008de 0a1f      	SBC  R1,R31
0008df 0b46      	SBC  R20,R22
0008e0 0b57      	SBC  R21,R23
0008e1 f428      	BRCC __DIVD21U2
0008e2 0e0e      	ADD  R0,R30
0008e3 1e1f      	ADC  R1,R31
0008e4 1f46      	ADC  R20,R22
0008e5 1f57      	ADC  R21,R23
0008e6 c001      	RJMP __DIVD21U3
                 __DIVD21U2:
0008e7 60a1      	SBR  R26,1
                 __DIVD21U3:
0008e8 953a      	DEC  R19
0008e9 f759      	BRNE __DIVD21U1
0008ea 01fd      	MOVW R30,R26
0008eb 01bc      	MOVW R22,R24
0008ec 01d0      	MOVW R26,R0
0008ed 01ca      	MOVW R24,R20
0008ee 915f      	POP  R21
0008ef 914f      	POP  R20
0008f0 913f      	POP  R19
0008f1 9508      	RET
                 
                 __MODB21:
0008f2 94e8      	CLT
0008f3 ffa7      	SBRS R26,7
0008f4 c002      	RJMP __MODB211
0008f5 95a1      	NEG  R26
0008f6 9468      	SET
                 __MODB211:
0008f7 fde7      	SBRC R30,7
0008f8 95e1      	NEG  R30
0008f9 dfc0      	RCALL __DIVB21U
0008fa 2fea      	MOV  R30,R26
0008fb f40e      	BRTC __MODB212
0008fc 95e1      	NEG  R30
                 __MODB212:
0008fd 9508      	RET
                 
                 __MODD21U:
0008fe dfce      	RCALL __DIVD21U
0008ff 01fd      	MOVW R30,R26
000900 01bc      	MOVW R22,R24
000901 9508      	RET
                 
                 __CHKSIGNB:
000902 94e8      	CLT
000903 ffe7      	SBRS R30,7
000904 c002      	RJMP __CHKSB1
000905 95e1      	NEG  R30
000906 9468      	SET
                 __CHKSB1:
000907 ffa7      	SBRS R26,7
000908 c004      	RJMP __CHKSB2
000909 95a1      	NEG  R26
00090a f800      	BLD  R0,0
00090b 9403      	INC  R0
00090c fa00      	BST  R0,0
                 __CHKSB2:
00090d 9508      	RET
                 
                 __GETW1P:
00090e 91ed      	LD   R30,X+
00090f 91fc      	LD   R31,X
000910 9711      	SBIW R26,1
000911 9508      	RET
                 
                 __GETD1P:
000912 91ed      	LD   R30,X+
000913 91fd      	LD   R31,X+
000914 916d      	LD   R22,X+
000915 917c      	LD   R23,X
000916 9713      	SBIW R26,3
000917 9508      	RET
                 
                 __GETD1S0:
000918 81e8      	LD   R30,Y
000919 81f9      	LDD  R31,Y+1
00091a 816a      	LDD  R22,Y+2
00091b 817b      	LDD  R23,Y+3
00091c 9508      	RET
                 
                 __GETD2S0:
00091d 81a8      	LD   R26,Y
00091e 81b9      	LDD  R27,Y+1
00091f 818a      	LDD  R24,Y+2
000920 819b      	LDD  R25,Y+3
000921 9508      	RET
                 
                 __PUTD1S0:
000922 83e8      	ST   Y,R30
000923 83f9      	STD  Y+1,R31
000924 836a      	STD  Y+2,R22
000925 837b      	STD  Y+3,R23
000926 9508      	RET
                 
                 __PUTPARD1:
000927 937a      	ST   -Y,R23
000928 936a      	ST   -Y,R22
000929 93fa      	ST   -Y,R31
00092a 93ea      	ST   -Y,R30
00092b 9508      	RET
                 
                 __PUTPARD2:
00092c 939a      	ST   -Y,R25
00092d 938a      	ST   -Y,R24
00092e 93ba      	ST   -Y,R27
00092f 93aa      	ST   -Y,R26
000930 9508      	RET
                 
                 __SWAPD12:
000931 2e18      	MOV  R1,R24
000932 2f86      	MOV  R24,R22
000933 2d61      	MOV  R22,R1
000934 2e19      	MOV  R1,R25
000935 2f97      	MOV  R25,R23
000936 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
000937 2e1b      	MOV  R1,R27
000938 2fbf      	MOV  R27,R31
000939 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
00093a 2e1a      	MOV  R1,R26
00093b 2fae      	MOV  R26,R30
00093c 2de1      	MOV  R30,R1
00093d 9508      	RET
                 
                 __CPD10:
00093e 9730      	SBIW R30,0
00093f 4060      	SBCI R22,0
000940 4070      	SBCI R23,0
000941 9508      	RET
                 
                 __SAVELOCR6:
000942 935a      	ST   -Y,R21
                 __SAVELOCR5:
000943 934a      	ST   -Y,R20
                 __SAVELOCR4:
000944 933a      	ST   -Y,R19
                 __SAVELOCR3:
000945 932a      	ST   -Y,R18
                 __SAVELOCR2:
000946 931a      	ST   -Y,R17
000947 930a      	ST   -Y,R16
000948 9508      	RET
                 
                 __LOADLOCR6:
000949 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
00094a 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
00094b 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
00094c 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
00094d 8119      	LDD  R17,Y+1
00094e 8108      	LD   R16,Y
00094f 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :  60 r1 :  34 r2 :   0 r3 :   0 r4 :   1 r5 :   0 r6 :   4 r7 :   4 
r8 :   0 r9 :   2 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  50 r17:  60 r18:  48 r19:  35 r20:  50 r21:  90 r22: 113 r23:  98 
r24:  76 r25:  60 r26: 210 r27:  94 r28:  30 r29:   1 r30: 405 r31: 145 
x  :  40 y  : 369 z  :  24 
Registers used: 26 out of 35 (74.3%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  21 add   :  14 
adiw  :  32 and   :   5 andi  :   7 asr   :   0 bclr  :   0 bld   :   3 
brbc  :   0 brbs  :   0 brcc  :   8 brcs  :   1 break :   0 breq  :  47 
brge  :   1 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  28 
brlt  :   2 brmi  :  11 brne  :  60 brpl  :   9 brsh  :   7 brtc  :   4 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   0 bst   :   3 call  : 169 
cbi   :   6 cbr   :   1 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  49 cls   :   0 clt   :   5 clv   :   0 clz   :   2 com   :   8 
cp    :  14 cpc   :  18 cpi   :  81 cpse  :   0 dec   :  18 des   :   0 
eor   :   7 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   3 ijmp  :   0 
in    :   4 inc   :   5 jmp   :  24 ld    :  51 ldd   : 191 ldi   : 207 
lds   :   8 lpm   :  12 lsl   :  14 lsr   :   3 mov   :  82 movw  :  51 
mul   :  11 muls  :   0 mulsu :   0 neg   :   9 nop   :   0 or    :   1 
ori   :  10 out   :  44 pop   :  22 push  :  22 rcall :  79 ret   :  90 
reti  :   0 rjmp  : 135 rol   :  32 ror   :  15 sbc   :  11 sbci  :  20 
sbi   :   8 sbic  :   0 sbis  :   1 sbiw  :  27 sbr   :   4 sbrc  :   4 
sbrs  :  20 sec   :   5 seh   :   0 sei   :   0 sen   :   0 ser   :   8 
ses   :   0 set   :   4 sev   :   0 sez   :   1 sleep :   0 spm   :   0 
st    :  94 std   :  86 sts   :   6 sub   :   6 subi  :  48 swap  :   1 
tst   :  24 wdr   :   1 
Instructions used: 80 out of 116 (69.0%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0012a0   4728     40   4768   32768  14.6%
[.dseg] 0x000060 0x00027c      0     28     28    2048   1.4%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 8 warnings
